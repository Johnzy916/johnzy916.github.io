{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-9f7c79b152ad4bcb.js","node_modules/mixitup/dist/mixitup.js","src/js/models/sprite.js","node_modules/@parcel/runtime-js/lib/runtime-ef356cb84325cb9e.js","node_modules/@parcel/runtime-js/lib/runtime-1e595abde8bdc36c.js","node_modules/@parcel/runtime-js/lib/runtime-38277872491c8277.js","node_modules/@emailjs/browser/es/store/store.js","node_modules/@emailjs/browser/es/utils/validateParams.js","node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","node_modules/@emailjs/browser/es/api/sendPost.js","node_modules/@emailjs/browser/es/index.js","node_modules/@emailjs/browser/es/methods/send/send.js","src/js/components/hero.js","src/js/index.js","src/js/components/projects.js","src/js/components/contact.js","src/js/components/footer.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"ioUUD\\\":\\\"index.ce1aee11.js\\\",\\\"4xyEv\\\":\\\"alien-sprite.cc9b6dc0.png\\\",\\\"k0eKT\\\":\\\"alien-sprite_reversed.999880b2.png\\\",\\\"4oAHZ\\\":\\\"floor.3cbee9ec.png\\\"}\"));","/**!\n * MixItUp v3.3.1\n * A high-performance, dependency-free library for animated filtering, sorting and more\n * Build 94e0fbf6-cd0b-4987-b3c0-14b59b67b8a0\n *\n * @copyright Copyright 2014-2018 KunkaLabs Limited.\n * @author    KunkaLabs Limited.\n * @link      https://www.kunkalabs.com/mixitup/\n *\n * @license   Commercial use requires a commercial license.\n *            https://www.kunkalabs.com/mixitup/licenses/\n *\n *            Non-commercial use permitted under same terms as CC BY-NC 3.0 license.\n *            http://creativecommons.org/licenses/by-nc/3.0/\n */\n\n(function(window) {\n    'use strict';\n\n    var mixitup = null,\n        h       = null;\n\n    (function() {\n        var VENDORS = ['webkit', 'moz', 'o', 'ms'],\n            canary  = window.document.createElement('div'),\n            i       = -1;\n\n        // window.requestAnimationFrame\n\n        for (i = 0; i < VENDORS.length && !window.requestAnimationFrame; i++) {\n            window.requestAnimationFrame = window[VENDORS[i] + 'RequestAnimationFrame'];\n        }\n\n        // Element.nextElementSibling\n\n        if (typeof canary.nextElementSibling === 'undefined') {\n            Object.defineProperty(window.Element.prototype, 'nextElementSibling', {\n                get: function() {\n                    var el = this.nextSibling;\n\n                    while (el) {\n                        if (el.nodeType === 1) {\n                            return el;\n                        }\n\n                        el = el.nextSibling;\n                    }\n\n                    return null;\n                }\n            });\n        }\n\n        // Element.matches\n\n        (function(ElementPrototype) {\n            ElementPrototype.matches =\n                ElementPrototype.matches ||\n                ElementPrototype.machesSelector ||\n                ElementPrototype.mozMatchesSelector ||\n                ElementPrototype.msMatchesSelector ||\n                ElementPrototype.oMatchesSelector ||\n                ElementPrototype.webkitMatchesSelector ||\n                function (selector) {\n                    return Array.prototype.indexOf.call(this.parentElement.querySelectorAll(selector), this) > -1;\n                };\n        })(window.Element.prototype);\n\n        // Object.keys\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\n\n        if (!Object.keys) {\n            Object.keys = (function() {\n                var hasOwnProperty      = Object.prototype.hasOwnProperty,\n                    hasDontEnumBug      = false,\n                    dontEnums           = [],\n                    dontEnumsLength     = -1;\n\n                hasDontEnumBug = !({\n                    toString: null\n                })\n                    .propertyIsEnumerable('toString');\n\n                dontEnums = [\n                    'toString',\n                    'toLocaleString',\n                    'valueOf',\n                    'hasOwnProperty',\n                    'isPrototypeOf',\n                    'propertyIsEnumerable',\n                    'constructor'\n                ];\n\n                dontEnumsLength = dontEnums.length;\n\n                return function(obj) {\n                    var result  = [],\n                        prop    = '',\n                        i       = -1;\n\n                    if (typeof obj !== 'object' && (typeof obj !== 'function' || obj === null)) {\n                        throw new TypeError('Object.keys called on non-object');\n                    }\n\n                    for (prop in obj) {\n                        if (hasOwnProperty.call(obj, prop)) {\n                            result.push(prop);\n                        }\n                    }\n\n                    if (hasDontEnumBug) {\n                        for (i = 0; i < dontEnumsLength; i++) {\n                            if (hasOwnProperty.call(obj, dontEnums[i])) {\n                                result.push(dontEnums[i]);\n                            }\n                        }\n                    }\n\n                    return result;\n                };\n            }());\n        }\n\n        // Array.isArray\n        // https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray\n\n        if (!Array.isArray) {\n            Array.isArray = function(arg) {\n                return Object.prototype.toString.call(arg) === '[object Array]';\n            };\n        }\n\n        // Object.create\n        // https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/create\n\n        if (typeof Object.create !== 'function') {\n            Object.create = (function(undefined) {\n                var Temp = function() {};\n\n                return function (prototype, propertiesObject) {\n                    if (prototype !== Object(prototype) && prototype !== null) {\n                        throw TypeError('Argument must be an object, or null');\n                    }\n\n                    Temp.prototype = prototype || {};\n\n                    var result = new Temp();\n\n                    Temp.prototype = null;\n\n                    if (propertiesObject !== undefined) {\n                        Object.defineProperties(result, propertiesObject);\n                    }\n\n                    if (prototype === null) {\n                        /* jshint ignore:start */\n                        result.__proto__ = null;\n                        /* jshint ignore:end */\n                    }\n\n                    return result;\n                };\n            })();\n        }\n\n        // String.prototyoe.trim\n\n        if (!String.prototype.trim) {\n            String.prototype.trim = function() {\n                return this.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n            };\n        }\n\n        // Array.prototype.indexOf\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf\n\n        if (!Array.prototype.indexOf) {\n            Array.prototype.indexOf = function(searchElement) {\n                var n, k, t, len;\n\n                if (this === null) {\n                    throw new TypeError();\n                }\n\n                t = Object(this);\n\n                len = t.length >>> 0;\n\n                if (len === 0) {\n                    return -1;\n                }\n\n                n = 0;\n\n                if (arguments.length > 1) {\n                    n = Number(arguments[1]);\n\n                    if (n !== n) {\n                        n = 0;\n                    } else if (n !== 0 && n !== Infinity && n !== -Infinity) {\n                        n = (n > 0 || -1) * Math.floor(Math.abs(n));\n                    }\n                }\n\n                if (n >= len) {\n                    return -1;\n                }\n\n                for (k = n >= 0 ? n : Math.max(len - Math.abs(n), 0); k < len; k++) {\n                    if (k in t && t[k] === searchElement) {\n                        return k;\n                    }\n                }\n\n                return -1;\n            };\n        }\n\n        // Function.prototype.bind\n        // https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_objects/Function/bind\n\n        if (!Function.prototype.bind) {\n            Function.prototype.bind = function(oThis) {\n                var aArgs, self, FNOP, fBound;\n\n                if (typeof this !== 'function') {\n                    throw new TypeError();\n                }\n\n                aArgs = Array.prototype.slice.call(arguments, 1);\n\n                self = this;\n\n                FNOP = function() {};\n\n                fBound = function() {\n                    return self.apply(this instanceof FNOP ? this : oThis, aArgs.concat(Array.prototype.slice.call(arguments)));\n                };\n\n                if (this.prototype) {\n                    FNOP.prototype = this.prototype;\n                }\n\n                fBound.prototype = new FNOP();\n\n                return fBound;\n            };\n        }\n\n        // Element.prototype.dispatchEvent\n\n        if (!window.Element.prototype.dispatchEvent) {\n            window.Element.prototype.dispatchEvent = function(event) {\n                try {\n                    return this.fireEvent('on' + event.type, event);\n                } catch (err) {}\n            };\n        }\n    })();\n\n    /**\n     * The `mixitup()` \"factory\" function creates and returns individual instances\n     * of MixItUp, known as \"mixers\", on which API methods can be called.\n     *\n     * When loading MixItUp via a script tag, the factory function is accessed\n     * via the global variable `mixitup`. When using a module loading\n     * system (e.g. ES2015, CommonJS, RequireJS), the factory function is\n     * exported into your module when you require the MixItUp library.\n     *\n     * @example\n     * mixitup(container [,config] [,foreignDoc])\n     *\n     * @example <caption>Example 1: Creating a mixer instance with an element reference</caption>\n     * var containerEl = document.querySelector('.container');\n     *\n     * var mixer = mixitup(containerEl);\n     *\n     * @example <caption>Example 2: Creating a mixer instance with a selector string</caption>\n     * var mixer = mixitup('.container');\n     *\n     * @example <caption>Example 3: Passing a configuration object</caption>\n     * var mixer = mixitup(containerEl, {\n     *     animation: {\n     *         effects: 'fade scale(0.5)'\n     *     }\n     * });\n     *\n     * @example <caption>Example 4: Passing an iframe reference</caption>\n     * var mixer = mixitup(containerEl, config, foreignDocument);\n     *\n     * @global\n     * @namespace\n     * @public\n     * @kind        function\n     * @since       3.0.0\n     * @param       {(Element|string)}  container\n     *      A DOM element or selector string representing the container(s) on which to instantiate MixItUp.\n     * @param       {object}            [config]\n     *      An optional \"configuration object\" used to customize the behavior of the MixItUp instance.\n     * @param       {object}            [foreignDoc]\n     *      An optional reference to a `document`, which can be used to control a MixItUp instance in an iframe.\n     * @return      {mixitup.Mixer}\n     *      A \"mixer\" object holding the MixItUp instance.\n     */\n\n    mixitup = function(container, config, foreignDoc) {\n        var el                  = null,\n            returnCollection    = false,\n            instance            = null,\n            facade              = null,\n            doc                 = null,\n            output              = null,\n            instances           = [],\n            id                  = '',\n            elements            = [],\n            i                   = -1;\n\n        doc = foreignDoc || window.document;\n\n        if (returnCollection = arguments[3]) {\n            // A non-documented 4th paramater enabling control of multiple instances\n\n            returnCollection = typeof returnCollection === 'boolean';\n        }\n\n        if (typeof container === 'string') {\n            elements = doc.querySelectorAll(container);\n        } else if (container && typeof container === 'object' && h.isElement(container, doc)) {\n            elements = [container];\n        } else if (container && typeof container === 'object' && container.length) {\n            // Although not documented, the container may also be an array-like list of\n            // elements such as a NodeList or jQuery collection, is returnCollection is true\n\n            elements = container;\n        } else {\n            throw new Error(mixitup.messages.errorFactoryInvalidContainer());\n        }\n\n        if (elements.length < 1) {\n            throw new Error(mixitup.messages.errorFactoryContainerNotFound());\n        }\n\n        for (i = 0; el = elements[i]; i++) {\n            if (i > 0 && !returnCollection) break;\n\n            if (!el.id) {\n                id = 'MixItUp' + h.randomHex();\n\n                el.id = id;\n            } else {\n                id = el.id;\n            }\n\n            if (mixitup.instances[id] instanceof mixitup.Mixer) {\n                instance = mixitup.instances[id];\n\n                if (!config || (config && config.debug && config.debug.showWarnings !== false)) {\n                    console.warn(mixitup.messages.warningFactoryPreexistingInstance());\n                }\n            } else {\n                instance = new mixitup.Mixer();\n\n                instance.attach(el, doc, id, config);\n\n                mixitup.instances[id] = instance;\n            }\n\n            facade = new mixitup.Facade(instance);\n\n            if (config && config.debug && config.debug.enable) {\n                instances.push(instance);\n            } else {\n                instances.push(facade);\n            }\n        }\n\n        if (returnCollection) {\n            output = new mixitup.Collection(instances);\n        } else {\n            // Return the first instance regardless\n\n            output = instances[0];\n        }\n\n        return output;\n    };\n\n    /**\n     * The `.use()` static method is used to extend the functionality of mixitup with compatible\n     * extensions and libraries in an environment with modular scoping e.g. ES2015, CommonJS, or RequireJS.\n     *\n     * You need only call the `.use()` function once per project, per extension, as module loaders\n     * will cache a single reference to MixItUp inclusive of all changes made.\n     *\n     * @example\n     * mixitup.use(extension)\n     *\n     * @example <caption>Example 1: Extending MixItUp with the Pagination Extension</caption>\n     *\n     * import mixitup from 'mixitup';\n     * import mixitupPagination from 'mixitup-pagination';\n     *\n     * mixitup.use(mixitupPagination);\n     *\n     * // All mixers created by the factory function in all modules will now\n     * // have pagination functionality\n     *\n     * var mixer = mixitup('.container');\n     *\n     * @public\n     * @name     use\n     * @memberof mixitup\n     * @kind     function\n     * @static\n     * @since    3.0.0\n     * @param    {*}  extension   A reference to the extension or library to be used.\n     * @return   {void}\n     */\n\n    mixitup.use = function(extension) {\n        mixitup.Base.prototype.callActions.call(mixitup, 'beforeUse', arguments);\n\n        // Call the extension's factory function, passing\n        // the mixitup factory as a paramater\n\n        if (typeof extension === 'function' && extension.TYPE === 'mixitup-extension') {\n            // Mixitup extension\n\n            if (typeof mixitup.extensions[extension.NAME] === 'undefined') {\n                extension(mixitup);\n\n                mixitup.extensions[extension.NAME] = extension;\n            }\n        } else if (extension.fn && extension.fn.jquery) {\n            // jQuery\n\n            mixitup.libraries.$ = extension;\n        }\n\n        mixitup.Base.prototype.callActions.call(mixitup, 'afterUse', arguments);\n    };\n\n    mixitup.instances   = {};\n    mixitup.extensions  = {};\n    mixitup.libraries   = {};\n\n    /**\n     * @private\n     */\n\n    h = {\n\n        /**\n         * @private\n         * @param   {HTMLElement}   el\n         * @param   {string}        cls\n         * @return  {boolean}\n         */\n\n        hasClass: function(el, cls) {\n            return !!el.className.match(new RegExp('(\\\\s|^)' + cls + '(\\\\s|$)'));\n        },\n\n        /**\n         * @private\n         * @param   {HTMLElement}   el\n         * @param   {string}        cls\n         * @return  {void}\n         */\n\n        addClass: function(el, cls) {\n            if (!this.hasClass(el, cls)) el.className += el.className ? ' ' + cls : cls;\n        },\n\n        /**\n         * @private\n         * @param   {HTMLElement}   el\n         * @param   {string}        cls\n         * @return  {void}\n         */\n\n        removeClass: function(el, cls) {\n            if (this.hasClass(el, cls)) {\n                var reg = new RegExp('(\\\\s|^)' + cls + '(\\\\s|$)');\n\n                el.className = el.className.replace(reg, ' ').trim();\n            }\n        },\n\n        /**\n         * Merges the properties of the source object onto the\n         * target object. Alters the target object.\n         *\n         * @private\n         * @param   {object}    destination\n         * @param   {object}    source\n         * @param   {boolean}   [deep=false]\n         * @param   {boolean}   [handleErrors=false]\n         * @return  {void}\n         */\n\n        extend: function(destination, source, deep, handleErrors) {\n            var sourceKeys  = [],\n                key         = '',\n                i           = -1;\n\n            deep = deep || false;\n            handleErrors = handleErrors || false;\n\n            try {\n                if (Array.isArray(source)) {\n                    for (i = 0; i < source.length; i++) {\n                        sourceKeys.push(i);\n                    }\n                } else if (source) {\n                    sourceKeys = Object.keys(source);\n                }\n\n                for (i = 0; i < sourceKeys.length; i++) {\n                    key = sourceKeys[i];\n\n                    if (!deep || typeof source[key] !== 'object' || this.isElement(source[key])) {\n                        // All non-object properties, or all properties if shallow extend\n\n                        destination[key] = source[key];\n                    } else if (Array.isArray(source[key])) {\n                        // Arrays\n\n                        if (!destination[key]) {\n                            destination[key] = [];\n                        }\n\n                        this.extend(destination[key], source[key], deep, handleErrors);\n                    } else {\n                        // Objects\n\n                        if (!destination[key]) {\n                            destination[key] = {};\n                        }\n\n                        this.extend(destination[key], source[key], deep, handleErrors);\n                    }\n                }\n            } catch(err) {\n                if (handleErrors) {\n                    this.handleExtendError(err, destination);\n                } else {\n                    throw err;\n                }\n            }\n\n            return destination;\n        },\n\n        /**\n         * @private\n         * @param   {Error}  err\n         * @param   {object} destination\n         * @return  {void}\n         */\n\n        handleExtendError: function(err, destination) {\n            var re                  = /property \"?(\\w*)\"?[,:] object/i,\n                matches             = null,\n                erroneous           = '',\n                message             = '',\n                suggestion          = '',\n                probableMatch       = '',\n                key                 = '',\n                mostMatchingChars   = -1,\n                i                   = -1;\n\n            if (err instanceof TypeError && (matches = re.exec(err.message))) {\n                erroneous = matches[1];\n\n                for (key in destination) {\n                    i = 0;\n\n                    while (i < erroneous.length && erroneous.charAt(i) === key.charAt(i)) {\n                        i++;\n                    }\n\n                    if (i > mostMatchingChars) {\n                        mostMatchingChars = i;\n                        probableMatch = key;\n                    }\n                }\n\n                if (mostMatchingChars > 1) {\n                    suggestion = mixitup.messages.errorConfigInvalidPropertySuggestion({\n                        probableMatch: probableMatch\n                    });\n                }\n\n                message = mixitup.messages.errorConfigInvalidProperty({\n                    erroneous: erroneous,\n                    suggestion: suggestion\n                });\n\n                throw new TypeError(message);\n            }\n\n            throw err;\n        },\n\n        /**\n         * @private\n         * @param   {string} str\n         * @return  {function}\n         */\n\n        template: function(str) {\n            var re          = /\\${([\\w]*)}/g,\n                dynamics    = {},\n                matches     = null;\n\n            while ((matches = re.exec(str))) {\n                dynamics[matches[1]] = new RegExp('\\\\${' + matches[1] + '}', 'g');\n            }\n\n            return function(data) {\n                var key     = '',\n                    output  = str;\n\n                data = data || {};\n\n                for (key in dynamics) {\n                    output = output.replace(dynamics[key], typeof data[key] !== 'undefined' ? data[key] : '');\n                }\n\n                return output;\n            };\n        },\n\n        /**\n         * @private\n         * @param   {HTMLElement}   el\n         * @param   {string}        type\n         * @param   {function}      fn\n         * @param   {boolean}       useCapture\n         * @return  {void}\n         */\n\n        on: function(el, type, fn, useCapture) {\n            if (!el) return;\n\n            if (el.addEventListener) {\n                el.addEventListener(type, fn, useCapture);\n            } else if (el.attachEvent) {\n                el['e' + type + fn] = fn;\n\n                el[type + fn] = function() {\n                    el['e' + type + fn](window.event);\n                };\n\n                el.attachEvent('on' + type, el[type + fn]);\n            }\n        },\n\n        /**\n         * @private\n         * @param   {HTMLElement}   el\n         * @param   {string}        type\n         * @param   {function}      fn\n         * @return  {void}\n         */\n\n        off: function(el, type, fn) {\n            if (!el) return;\n\n            if (el.removeEventListener) {\n                el.removeEventListener(type, fn, false);\n            } else if (el.detachEvent) {\n                el.detachEvent('on' + type, el[type + fn]);\n                el[type + fn] = null;\n            }\n        },\n\n        /**\n         * @private\n         * @param   {string}      eventType\n         * @param   {object}      detail\n         * @param   {Document}    [doc]\n         * @return  {CustomEvent}\n         */\n\n        getCustomEvent: function(eventType, detail, doc) {\n            var event = null;\n\n            doc = doc || window.document;\n\n            if (typeof window.CustomEvent === 'function') {\n                event = new window.CustomEvent(eventType, {\n                    detail: detail,\n                    bubbles: true,\n                    cancelable: true\n                });\n            } else if (typeof doc.createEvent === 'function') {\n                event = doc.createEvent('CustomEvent');\n                event.initCustomEvent(eventType, true, true, detail);\n            } else {\n                event = doc.createEventObject(),\n                event.type = eventType;\n\n                event.returnValue = false;\n                event.cancelBubble = false;\n                event.detail = detail;\n            }\n\n            return event;\n        },\n\n        /**\n         * @private\n         * @param   {Event} e\n         * @return  {Event}\n         */\n\n        getOriginalEvent: function(e) {\n            if (e.touches && e.touches.length) {\n                return e.touches[0];\n            } else if (e.changedTouches && e.changedTouches.length) {\n                return e.changedTouches[0];\n            } else {\n                return e;\n            }\n        },\n\n        /**\n         * @private\n         * @param   {HTMLElement}   el\n         * @param   {string}        selector\n         * @return  {Number}\n         */\n\n        index: function(el, selector) {\n            var i = 0;\n\n            while ((el = el.previousElementSibling) !== null) {\n                if (!selector || el.matches(selector)) {\n                    ++i;\n                }\n            }\n\n            return i;\n        },\n\n        /**\n         * Converts a dash or snake-case string to camel case.\n         *\n         * @private\n         * @param   {string}    str\n         * @param   {boolean}   [isPascal]\n         * @return  {string}\n         */\n\n        camelCase: function(str) {\n            return str.toLowerCase().replace(/([_-][a-z])/g, function($1) {\n                return $1.toUpperCase().replace(/[_-]/, '');\n            });\n        },\n\n        /**\n         * Converts a dash or snake-case string to pascal case.\n         *\n         * @private\n         * @param   {string}    str\n         * @param   {boolean}   [isPascal]\n         * @return  {string}\n         */\n\n        pascalCase: function(str) {\n            return (str = this.camelCase(str)).charAt(0).toUpperCase() + str.slice(1);\n        },\n\n        /**\n         * Converts a camel or pascal-case string to dash case.\n         *\n         * @private\n         * @param   {string}    str\n         * @return  {string}\n         */\n\n        dashCase: function(str) {\n            return str.replace(/([A-Z])/g, '-$1').replace(/^-/, '').toLowerCase();\n        },\n\n        /**\n         * @private\n         * @param   {HTMLElement}       el\n         * @param   {HTMLHtmlElement}   [doc]\n         * @return  {boolean}\n         */\n\n        isElement: function(el, doc) {\n            doc = doc || window.document;\n\n            if (\n                window.HTMLElement &&\n                el instanceof window.HTMLElement\n            ) {\n                return true;\n            } else if (\n                doc.defaultView &&\n                doc.defaultView.HTMLElement &&\n                el instanceof doc.defaultView.HTMLElement\n            ) {\n                return true;\n            } else {\n                return (\n                    el !== null &&\n                    el.nodeType === 1 &&\n                    typeof el.nodeName === 'string'\n                );\n            }\n        },\n\n        /**\n         * @private\n         * @param   {string}            htmlString\n         * @param   {HTMLHtmlElement}   [doc]\n         * @return  {DocumentFragment}\n         */\n\n        createElement: function(htmlString, doc) {\n            var frag = null,\n                temp = null;\n\n            doc = doc || window.document;\n\n            frag = doc.createDocumentFragment();\n            temp = doc.createElement('div');\n\n            temp.innerHTML = htmlString.trim();\n\n            while (temp.firstChild) {\n                frag.appendChild(temp.firstChild);\n            }\n\n            return frag;\n        },\n\n        /**\n         * @private\n         * @param   {Node} node\n         * @return  {void}\n         */\n\n        removeWhitespace: function(node) {\n            var deleting;\n\n            while (node && node.nodeName === '#text') {\n                deleting = node;\n\n                node = node.previousSibling;\n\n                deleting.parentElement && deleting.parentElement.removeChild(deleting);\n            }\n        },\n\n        /**\n         * @private\n         * @param   {Array<*>}  a\n         * @param   {Array<*>}  b\n         * @return  {boolean}\n         */\n\n        isEqualArray: function(a, b) {\n            var i = a.length;\n\n            if (i !== b.length) return false;\n\n            while (i--) {\n                if (a[i] !== b[i]) return false;\n            }\n\n            return true;\n        },\n\n        /**\n         * @private\n         * @param   {object}  a\n         * @param   {object}  b\n         * @return  {boolean}\n         */\n\n        deepEquals: function(a, b) {\n            var key;\n\n            if (typeof a === 'object' && a && typeof b === 'object' && b) {\n                if (Object.keys(a).length !== Object.keys(b).length) return false;\n\n                for (key in a) {\n                    if (!b.hasOwnProperty(key) || !this.deepEquals(a[key], b[key])) return false;\n                }\n            } else if (a !== b) {\n                return false;\n            }\n\n            return true;\n        },\n\n        /**\n         * @private\n         * @param   {Array<*>}  oldArray\n         * @return  {Array<*>}\n         */\n\n        arrayShuffle: function(oldArray) {\n            var newArray    = oldArray.slice(),\n                len         = newArray.length,\n                i           = len,\n                p           = -1,\n                t           = [];\n\n            while (i--) {\n                p = ~~(Math.random() * len);\n                t = newArray[i];\n\n                newArray[i] = newArray[p];\n                newArray[p] = t;\n            }\n\n            return newArray;\n        },\n\n        /**\n         * @private\n         * @param   {object}    list\n         */\n\n        arrayFromList: function(list) {\n            var output, i;\n\n            try {\n                return Array.prototype.slice.call(list);\n            } catch(err) {\n                output = [];\n\n                for (i = 0; i < list.length; i++) {\n                    output.push(list[i]);\n                }\n\n                return output;\n            }\n        },\n\n        /**\n         * @private\n         * @param   {function}  func\n         * @param   {Number}    wait\n         * @param   {boolean}   immediate\n         * @return  {function}\n         */\n\n        debounce: function(func, wait, immediate) {\n            var timeout;\n\n            return function() {\n                var self     = this,\n                    args     = arguments,\n                    callNow  = immediate && !timeout,\n                    later    = null;\n\n                later = function() {\n                    timeout  = null;\n\n                    if (!immediate) {\n                        func.apply(self, args);\n                    }\n                };\n\n                clearTimeout(timeout);\n\n                timeout = setTimeout(later, wait);\n\n                if (callNow) func.apply(self, args);\n            };\n        },\n\n        /**\n         * @private\n         * @param   {HTMLElement}   element\n         * @return  {object}\n         */\n\n        position: function(element) {\n            var xPosition       = 0,\n                yPosition       = 0,\n                offsetParent    = element;\n\n            while (element) {\n                xPosition -= element.scrollLeft;\n                yPosition -= element.scrollTop;\n\n                if (element === offsetParent) {\n                    xPosition += element.offsetLeft;\n                    yPosition += element.offsetTop;\n\n                    offsetParent = element.offsetParent;\n                }\n\n                element = element.parentElement;\n            }\n\n            return {\n                x: xPosition,\n                y: yPosition\n            };\n        },\n\n        /**\n         * @private\n         * @param   {object}    node1\n         * @param   {object}    node2\n         * @return  {Number}\n         */\n\n        getHypotenuse: function(node1, node2) {\n            var distanceX = node1.x - node2.x,\n                distanceY = node1.y - node2.y;\n\n            distanceX = distanceX < 0 ? distanceX * -1 : distanceX,\n            distanceY = distanceY < 0 ? distanceY * -1 : distanceY;\n\n            return Math.sqrt(Math.pow(distanceX, 2) + Math.pow(distanceY, 2));\n        },\n\n        /**\n         * Calcuates the area of intersection between two rectangles and expresses it as\n         * a ratio in comparison to the area of the first rectangle.\n         *\n         * @private\n         * @param   {Rect}  box1\n         * @param   {Rect}  box2\n         * @return  {number}\n         */\n\n        getIntersectionRatio: function(box1, box2) {\n            var controlArea         = box1.width * box1.height,\n                intersectionX       = -1,\n                intersectionY       = -1,\n                intersectionArea    = -1,\n                ratio               = -1;\n\n            intersectionX =\n                Math.max(0, Math.min(box1.left + box1.width, box2.left + box2.width) - Math.max(box1.left, box2.left));\n\n            intersectionY =\n                Math.max(0, Math.min(box1.top + box1.height, box2.top + box2.height) - Math.max(box1.top, box2.top));\n\n            intersectionArea = intersectionY * intersectionX;\n\n            ratio = intersectionArea / controlArea;\n\n            return ratio;\n        },\n\n        /**\n         * @private\n         * @param   {object}            el\n         * @param   {string}            selector\n         * @param   {boolean}           [includeSelf]\n         * @param   {HTMLHtmlElement}   [doc]\n         * @return  {Element|null}\n         */\n\n        closestParent: function(el, selector, includeSelf, doc) {\n            var parent  = el.parentNode;\n\n            doc = doc || window.document;\n\n            if (includeSelf && el.matches(selector)) {\n                return el;\n            }\n\n            while (parent && parent != doc.body) {\n                if (parent.matches && parent.matches(selector)) {\n                    return parent;\n                } else if (parent.parentNode) {\n                    parent = parent.parentNode;\n                } else {\n                    return null;\n                }\n            }\n\n            return null;\n        },\n\n        /**\n         * @private\n         * @param   {HTMLElement}       el\n         * @param   {string}            selector\n         * @param   {HTMLHtmlElement}   [doc]\n         * @return  {NodeList}\n         */\n\n        children: function(el, selector, doc) {\n            var children    = [],\n                tempId      = '';\n\n            doc = doc || window.doc;\n\n            if (el) {\n                if (!el.id) {\n                    tempId = 'Temp' + this.randomHexKey();\n\n                    el.id = tempId;\n                }\n\n                children = doc.querySelectorAll('#' + el.id + ' > ' + selector);\n\n                if (tempId) {\n                    el.removeAttribute('id');\n                }\n            }\n\n            return children;\n        },\n\n        /**\n         * Creates a clone of a provided array, with any empty strings removed.\n         *\n         * @private\n         * @param   {Array<*>} originalArray\n         * @return  {Array<*>}\n         */\n\n        clean: function(originalArray) {\n            var cleanArray = [],\n                i = -1;\n\n            for (i = 0; i < originalArray.length; i++) {\n                if (originalArray[i] !== '') {\n                    cleanArray.push(originalArray[i]);\n                }\n            }\n\n            return cleanArray;\n        },\n\n        /**\n         * Abstracts an ES6 promise into a q-like deferred interface for storage and deferred resolution.\n         *\n         * @private\n         * @param  {object} libraries\n         * @return {h.Deferred}\n         */\n\n        defer: function(libraries) {\n            var deferred       = null,\n                promiseWrapper = null,\n                $              = null;\n\n            promiseWrapper = new this.Deferred();\n\n            if (mixitup.features.has.promises) {\n                // ES6 native promise or polyfill\n\n                promiseWrapper.promise = new Promise(function(resolve, reject) {\n                    promiseWrapper.resolve = resolve;\n                    promiseWrapper.reject  = reject;\n                });\n            } else if (($ = (window.jQuery || libraries.$)) && typeof $.Deferred === 'function') {\n                // jQuery\n\n                deferred = $.Deferred();\n\n                promiseWrapper.promise = deferred.promise();\n                promiseWrapper.resolve = deferred.resolve;\n                promiseWrapper.reject  = deferred.reject;\n            } else if (window.console) {\n                // No implementation\n\n                console.warn(mixitup.messages.warningNoPromiseImplementation());\n            }\n\n            return promiseWrapper;\n        },\n\n        /**\n         * @private\n         * @param   {Array<Promise>}    tasks\n         * @param   {object}            libraries\n         * @return  {Promise<Array>}\n         */\n\n        all: function(tasks, libraries) {\n            var $ = null;\n\n            if (mixitup.features.has.promises) {\n                return Promise.all(tasks);\n            } else if (($ = (window.jQuery || libraries.$)) && typeof $.when === 'function') {\n                return $.when.apply($, tasks)\n                    .done(function() {\n                        // jQuery when returns spread arguments rather than an array or resolutions\n\n                        return arguments;\n                    });\n            }\n\n            // No implementation\n\n            if (window.console) {\n                console.warn(mixitup.messages.warningNoPromiseImplementation());\n            }\n\n            return [];\n        },\n\n        /**\n         * @private\n         * @param   {HTMLElement}   el\n         * @param   {string}        property\n         * @param   {Array<string>} vendors\n         * @return  {string}\n         */\n\n        getPrefix: function(el, property, vendors) {\n            var i       = -1,\n                prefix  = '';\n\n            if (h.dashCase(property) in el.style) return '';\n\n            for (i = 0; prefix = vendors[i]; i++) {\n                if (prefix + property in el.style) {\n                    return prefix.toLowerCase();\n                }\n            }\n\n            return 'unsupported';\n        },\n\n        /**\n         * @private\n         * @return  {string}\n         */\n\n        randomHex: function() {\n            return ('00000' + (Math.random() * 16777216 << 0).toString(16)).substr(-6).toUpperCase();\n        },\n\n        /**\n         * @private\n         * @param   {HTMLDocument}  [doc]\n         * @return  {object}\n         */\n\n        getDocumentState: function(doc) {\n            doc = typeof doc.body === 'object' ? doc : window.document;\n\n            return {\n                scrollTop: window.pageYOffset,\n                scrollLeft: window.pageXOffset,\n                docHeight: doc.documentElement.scrollHeight,\n                docWidth: doc.documentElement.scrollWidth,\n                viewportHeight: doc.documentElement.clientHeight,\n                viewportWidth: doc.documentElement.clientWidth\n            };\n        },\n\n        /**\n         * @private\n         * @param   {object}    obj\n         * @param   {function}  fn\n         * @return  {function}\n         */\n\n        bind: function(obj, fn) {\n            return function() {\n                return fn.apply(obj, arguments);\n            };\n        },\n\n        /**\n         * @private\n         * @param   {HTMLElement}   el\n         * @return  {boolean}\n         */\n\n        isVisible: function(el) {\n            var styles = null;\n\n            if (el.offsetParent) return true;\n\n            styles = window.getComputedStyle(el);\n\n            if (\n                styles.position === 'fixed' &&\n                styles.visibility !== 'hidden' &&\n                styles.opacity !== '0'\n            ) {\n                // Fixed elements report no offsetParent,\n                // but may still be invisible\n\n                return true;\n            }\n\n            return false;\n        },\n\n        /**\n         * @private\n         * @param   {object}    obj\n         */\n\n        seal: function(obj) {\n            if (typeof Object.seal === 'function') {\n                Object.seal(obj);\n            }\n        },\n\n        /**\n         * @private\n         * @param   {object}    obj\n         */\n\n        freeze: function(obj) {\n            if (typeof Object.freeze === 'function') {\n                Object.freeze(obj);\n            }\n        },\n\n        /**\n         * @private\n         * @param   {string}    control\n         * @param   {string}    specimen\n         * @return  {boolean}\n         */\n\n        compareVersions: function(control, specimen) {\n            var controlParts    = control.split('.'),\n                specimenParts   = specimen.split('.'),\n                controlPart     = -1,\n                specimenPart    = -1,\n                i               = -1;\n\n            for (i = 0; i < controlParts.length; i++) {\n                controlPart     = parseInt(controlParts[i].replace(/[^\\d.]/g, ''));\n                specimenPart    = parseInt(specimenParts[i].replace(/[^\\d.]/g, '') || 0);\n\n                if (specimenPart < controlPart) {\n                    return false;\n                } else if (specimenPart > controlPart) {\n                    return true;\n                }\n            }\n\n            return true;\n        },\n\n        /**\n         * @private\n         * @constructor\n         */\n\n        Deferred: function() {\n            this.promise    = null;\n            this.resolve    = null;\n            this.reject     = null;\n            this.id         = h.randomHex();\n        },\n\n        /**\n         * @private\n         * @param   {object}  obj\n         * @return  {boolean}\n         */\n\n        isEmptyObject: function(obj) {\n            var key = '';\n\n            if (typeof Object.keys === 'function') {\n                return Object.keys(obj).length === 0;\n            }\n\n            for (key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    return false;\n                }\n            }\n\n            return true;\n        },\n\n        /**\n         * @param   {mixitup.Config.ClassNames}   classNames\n         * @param   {string}                      elementName\n         * @param   {string}                      [modifier]\n         * @return  {string}\n         */\n\n        getClassname: function(classNames, elementName, modifier) {\n            var classname = '';\n\n            classname += classNames.block;\n\n            if (classname.length) {\n                classname += classNames.delineatorElement;\n            }\n\n            classname += classNames['element' + this.pascalCase(elementName)];\n\n            if (!modifier) return classname;\n\n            if (classname.length) {\n                classname += classNames.delineatorModifier;\n            }\n\n            classname += modifier;\n\n            return classname;\n        },\n\n        /**\n         * Returns the value of a property on a given object via its string key.\n         *\n         * @param   {object}    obj\n         * @param   {string}    stringKey\n         * @return  {*} value\n         */\n\n        getProperty: function(obj, stringKey) {\n            var parts           = stringKey.split('.'),\n                returnCurrent   = null,\n                current         = '',\n                i               = 0;\n\n            if (!stringKey) {\n                return obj;\n            }\n\n            returnCurrent = function(obj) {\n                if (!obj) {\n                    return null;\n                } else {\n                    return obj[current];\n                }\n            };\n\n            while (i < parts.length) {\n                current = parts[i];\n\n                obj = returnCurrent(obj);\n\n                i++;\n            }\n\n            if (typeof obj !== 'undefined') {\n                return obj;\n            } else {\n                return null;\n            }\n        }\n    };\n\n    mixitup.h = h;\n\n    /**\n     * The Base class adds instance methods to all other extensible MixItUp classes,\n     * enabling the calling of any registered hooks.\n     *\n     * @constructor\n     * @namespace\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.Base = function() {};\n\n    mixitup.Base.prototype = {\n        constructor: mixitup.Base,\n\n        /**\n         * Calls any registered hooks for the provided action.\n         *\n         * @memberof    mixitup.Base\n         * @private\n         * @instance\n         * @since       2.0.0\n         * @param       {string}    actionName\n         * @param       {Array<*>}  args\n         * @return      {void}\n         */\n\n        callActions: function(actionName, args) {\n            var self            = this,\n                hooks           = self.constructor.actions[actionName],\n                extensionName   = '';\n\n            if (!hooks || h.isEmptyObject(hooks)) return;\n\n            for (extensionName in hooks) {\n                hooks[extensionName].apply(self, args);\n            }\n        },\n\n        /**\n         * Calls any registered hooks for the provided filter.\n         *\n         * @memberof    mixitup.Base\n         * @private\n         * @instance\n         * @since       2.0.0\n         * @param       {string}    filterName\n         * @param       {*}         input\n         * @param       {Array<*>}  args\n         * @return      {*}\n         */\n\n        callFilters: function(filterName, input, args) {\n            var self            = this,\n                hooks           = self.constructor.filters[filterName],\n                output          = input,\n                extensionName   = '';\n\n            if (!hooks || h.isEmptyObject(hooks)) return output;\n\n            args = args || [];\n\n            for (extensionName in hooks) {\n                args = h.arrayFromList(args);\n\n                args.unshift(output);\n\n                output = hooks[extensionName].apply(self, args);\n            }\n\n            return output;\n        }\n    };\n\n    /**\n     * The BaseStatic class holds a set of static methods which are then added to all other\n     * extensible MixItUp classes as a means of integrating extensions via the addition of new\n     * methods and/or actions and hooks.\n     *\n     * @constructor\n     * @namespace\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.BaseStatic = function() {\n        this.actions = {};\n        this.filters = {};\n\n        /**\n         * Performs a shallow extend on the class's prototype, adding one or more new members to\n         * the class in a single operation.\n         *\n         * @memberof    mixitup.BaseStatic\n         * @public\n         * @static\n         * @since       2.1.0\n         * @param       {object} extension\n         * @return      {void}\n         */\n\n        this.extend = function(extension) {\n            h.extend(this.prototype, extension);\n        };\n\n        /**\n         * Registers a function to be called on the action hook of the provided name.\n         *\n         * @memberof    mixitup.BaseStatic\n         * @public\n         * @static\n         * @since       2.1.0\n         * @param       {string}    hookName\n         * @param       {string}    extensionName\n         * @param       {function}  func\n         * @return      {void}\n         */\n\n        this.registerAction = function(hookName, extensionName, func) {\n            (this.actions[hookName] = this.actions[hookName] || {})[extensionName] = func;\n        };\n\n        /**\n         * Registers a function to be called on the filter of the provided name.\n         *\n         * @memberof    mixitup.BaseStatic\n         * @public\n         * @static\n         * @since       2.1.0\n         * @param       {string}    hookName\n         * @param       {string}    extensionName\n         * @param       {function}  func\n         * @return      {void}\n         */\n\n        this.registerFilter = function(hookName, extensionName, func) {\n            (this.filters[hookName] = this.filters[hookName] || {})[extensionName] = func;\n        };\n    };\n\n    /**\n     * The `mixitup.Features` class performs all feature and CSS prefix detection\n     * neccessary for MixItUp to function correctly, as well as storing various\n     * string and array constants. All feature decection is on evaluation of the\n     * library and stored in a singleton instance for use by other internal classes.\n     *\n     * @constructor\n     * @namespace\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.Features = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.boxSizingPrefix            = '';\n        this.transformPrefix            = '';\n        this.transitionPrefix           = '';\n\n        this.boxSizingPrefix            = '';\n        this.transformProp              = '';\n        this.transformRule              = '';\n        this.transitionProp             = '';\n        this.perspectiveProp            = '';\n        this.perspectiveOriginProp      = '';\n\n        this.has                        = new mixitup.Has();\n\n        this.canary                     = null;\n\n        this.BOX_SIZING_PROP            = 'boxSizing';\n        this.TRANSITION_PROP            = 'transition';\n        this.TRANSFORM_PROP             = 'transform';\n        this.PERSPECTIVE_PROP           = 'perspective';\n        this.PERSPECTIVE_ORIGIN_PROP    = 'perspectiveOrigin';\n        this.VENDORS                    = ['Webkit', 'moz', 'O', 'ms'];\n\n        this.TWEENABLE = [\n            'opacity',\n            'width', 'height',\n            'marginRight', 'marginBottom',\n            'x', 'y',\n            'scale',\n            'translateX', 'translateY', 'translateZ',\n            'rotateX', 'rotateY', 'rotateZ'\n        ];\n\n        this.callActions('afterConstruct');\n    };\n\n    mixitup.BaseStatic.call(mixitup.Features);\n\n    mixitup.Features.prototype = Object.create(mixitup.Base.prototype);\n\n    h.extend(mixitup.Features.prototype,\n    /** @lends mixitup.Features */\n    {\n        constructor: mixitup.Features,\n\n        /**\n         * @private\n         * @return  {void}\n         */\n\n        init: function() {\n            var self = this;\n\n            self.callActions('beforeInit', arguments);\n\n            self.canary = document.createElement('div');\n\n            self.setPrefixes();\n            self.runTests();\n\n            self.callActions('beforeInit', arguments);\n        },\n\n        /**\n         * @private\n         * @return  {void}\n         */\n\n        runTests: function() {\n            var self = this;\n\n            self.callActions('beforeRunTests', arguments);\n\n            self.has.promises       = typeof window.Promise === 'function';\n            self.has.transitions    = self.transitionPrefix !== 'unsupported';\n\n            self.callActions('afterRunTests', arguments);\n\n            h.freeze(self.has);\n        },\n\n        /**\n         * @private\n         * @return  {void}\n         */\n\n        setPrefixes: function() {\n            var self = this;\n\n            self.callActions('beforeSetPrefixes', arguments);\n\n            self.transitionPrefix   = h.getPrefix(self.canary, 'Transition', self.VENDORS);\n            self.transformPrefix    = h.getPrefix(self.canary, 'Transform', self.VENDORS);\n            self.boxSizingPrefix    = h.getPrefix(self.canary, 'BoxSizing', self.VENDORS);\n\n            self.boxSizingProp = self.boxSizingPrefix ?\n                self.boxSizingPrefix + h.pascalCase(self.BOX_SIZING_PROP) : self.BOX_SIZING_PROP;\n\n            self.transitionProp = self.transitionPrefix ?\n                self.transitionPrefix + h.pascalCase(self.TRANSITION_PROP) : self.TRANSITION_PROP;\n\n            self.transformProp = self.transformPrefix ?\n                self.transformPrefix + h.pascalCase(self.TRANSFORM_PROP) : self.TRANSFORM_PROP;\n\n            self.transformRule = self.transformPrefix ?\n                '-' + self.transformPrefix + '-' + self.TRANSFORM_PROP : self.TRANSFORM_PROP;\n\n            self.perspectiveProp = self.transformPrefix ?\n                self.transformPrefix + h.pascalCase(self.PERSPECTIVE_PROP) : self.PERSPECTIVE_PROP;\n\n            self.perspectiveOriginProp = self.transformPrefix ?\n                self.transformPrefix + h.pascalCase(self.PERSPECTIVE_ORIGIN_PROP) :\n                self.PERSPECTIVE_ORIGIN_PROP;\n\n            self.callActions('afterSetPrefixes', arguments);\n        }\n    });\n\n    /**\n     * @constructor\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.Has = function() {\n        this.transitions    = false;\n        this.promises       = false;\n\n        h.seal(this);\n    };\n\n    // Assign a singleton instance to `mixitup.features` and initialise:\n\n    mixitup.features = new mixitup.Features();\n\n    mixitup.features.init();\n\n    /**\n     * A group of properties defining the mixer's animation and effects settings.\n     *\n     * @constructor\n     * @memberof    mixitup.Config\n     * @name        animation\n     * @namespace\n     * @public\n     * @since       2.0.0\n     */\n\n    mixitup.ConfigAnimation = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        /**\n         * A boolean dictating whether or not animation should be enabled for the MixItUp instance.\n         * If `false`, all operations will occur instantly and syncronously, although callback\n         * functions and any returned promises will still be fulfilled.\n         *\n         * @example <caption>Example: Create a mixer with all animations disabled</caption>\n         * var mixer = mixitup(containerEl, {\n         *     animation: {\n         *         enable: false\n         *     }\n         * });\n         *\n         * @name        enable\n         * @memberof    mixitup.Config.animation\n         * @instance\n         * @type        {boolean}\n         * @default     true\n         */\n\n        this.enable = true;\n\n        /**\n         * A string of one or more space-seperated properties to which transitions will be\n         * applied for all filtering animations.\n         *\n         * Properties can be listed any order or combination, although they will be applied in a specific\n         * predefined order to produce consistent results.\n         *\n         * To learn more about available effects, experiment with our <a href=\"https://www.kunkalabs.com/mixitup/\">\n         * sandbox demo</a> and try out the \"Export config\" button in the Animation options drop down.\n         *\n         * @example <caption>Example: Apply \"fade\" and \"translateZ\" effects to all animations</caption>\n         * // As targets are filtered in and out, they will fade between\n         * // opacity 1 and 0 and transform between translateZ(-100px) and\n         * // translateZ(0).\n         *\n         * var mixer = mixitup(containerEl, {\n         *     animation: {\n         *         effects: 'fade translateZ(-100px)'\n         *     }\n         * });\n         *\n         * @name        effects\n         * @memberof    mixitup.Config.animation\n         * @instance\n         * @type        {string}\n         * @default     'fade scale'\n         */\n\n        this.effects = 'fade scale';\n\n        /**\n         * A string of one or more space-seperated effects to be applied only to filter-in\n         * animations, overriding `config.animation.effects` if set.\n         *\n         * @example <caption>Example: Apply downwards vertical translate to targets being filtered in</caption>\n         *\n         * var mixer = mixitup(containerEl, {\n         *     animation: {\n         *         effectsIn: 'fade translateY(-100%)'\n         *     }\n         * });\n         *\n         * @name        effectsIn\n         * @memberof    mixitup.Config.animation\n         * @instance\n         * @type        {string}\n         * @default     ''\n         */\n\n        this.effectsIn = '';\n\n        /**\n         * A string of one or more space-seperated effects to be applied only to filter-out\n         * animations, overriding `config.animation.effects` if set.\n         *\n         * @example <caption>Example: Apply upwards vertical translate to targets being filtered out</caption>\n         *\n         * var mixer = mixitup(containerEl, {\n         *     animation: {\n         *         effectsOut: 'fade translateY(-100%)'\n         *     }\n         * });\n         *\n         * @name        effectsOut\n         * @memberof    mixitup.Config.animation\n         * @instance\n         * @type        {string}\n         * @default     ''\n         */\n\n        this.effectsOut = '';\n\n        /**\n         * An integer dictating the duration of all MixItUp animations in milliseconds, not\n         * including any additional delay apllied via the `'stagger'` effect.\n         *\n         * @example <caption>Example: Apply an animation duration of 200ms to all mixitup animations</caption>\n         *\n         * var mixer = mixitup(containerEl, {\n         *     animation: {\n         *         duration: 200\n         *     }\n         * });\n         *\n         * @name        duration\n         * @memberof    mixitup.Config.animation\n         * @instance\n         * @type        {number}\n         * @default     600\n         */\n\n        this.duration = 600;\n\n        /**\n         * A valid CSS3 transition-timing function or shorthand. For a full list of accepted\n         * values, visit <a href=\"http://easings.net\" target=\"_blank\">easings.net</a>.\n         *\n         * @example <caption>Example 1: Apply \"ease-in-out\" easing to all animations</caption>\n         *\n         * var mixer = mixitup(containerEl, {\n         *     animation: {\n         *         easing: 'ease-in-out'\n         *     }\n         * });\n         *\n         * @example <caption>Example 2: Apply a custom \"cubic-bezier\" easing function to all animations</caption>\n         * var mixer = mixitup(containerEl, {\n         *     animation: {\n         *         easing: 'cubic-bezier(0.645, 0.045, 0.355, 1)'\n         *     }\n         * });\n         *\n         * @name        easing\n         * @memberof    mixitup.Config.animation\n         * @instance\n         * @type        {string}\n         * @default     'ease'\n         */\n\n        this.easing = 'ease';\n\n        /**\n         * A boolean dictating whether or not to apply perspective to the MixItUp container\n         * during animations. By default, perspective is always applied and creates the\n         * illusion of three-dimensional space for effects such as `translateZ`, `rotateX`,\n         * and `rotateY`.\n         *\n         * You may wish to disable this and define your own perspective settings via CSS.\n         *\n         * @example <caption>Example: Prevent perspective from being applied to any 3D transforms</caption>\n         * var mixer = mixitup(containerEl, {\n         *     animation: {\n         *         applyPerspective: false\n         *     }\n         * });\n         *\n         * @name        applyPerspective\n         * @memberof    mixitup.Config.animation\n         * @instance\n         * @type        {bolean}\n         * @default     true\n         */\n\n        this.applyPerspective = true;\n\n        /**\n         * The perspective distance value to be applied to the container during animations,\n         * affecting any 3D-transform-based effects.\n         *\n         * @example <caption>Example: Set a perspective distance of 2000px</caption>\n         * var mixer = mixitup(containerEl, {\n         *     animation: {\n         *         effects: 'rotateY(-25deg)',\n         *         perspectiveDistance: '2000px'\n         *     }\n         * });\n         *\n         * @name        perspectiveDistance\n         * @memberof    mixitup.Config.animation\n         * @instance\n         * @type        {string}\n         * @default     '3000px'\n         */\n\n        this.perspectiveDistance = '3000px';\n\n        /**\n         * The perspective-origin value to be applied to the container during animations,\n         * affecting any 3D-transform-based effects.\n         *\n         * @example <caption>Example: Set a perspective origin in the top-right of the container</caption>\n         * var mixer = mixitup(containerEl, {\n         *     animation: {\n         *         effects: 'transateZ(-200px)',\n         *         perspectiveOrigin: '100% 0'\n         *     }\n         * });\n         *\n         * @name        perspectiveOrigin\n         * @memberof    mixitup.Config.animation\n         * @instance\n         * @type        {string}\n         * @default     '50% 50%'\n         */\n\n        this.perspectiveOrigin = '50% 50%';\n\n        /**\n         * A boolean dictating whether or not to enable the queuing of operations.\n         *\n         * If `true` (default), and a control is clicked or an API call is made while another\n         * operation is progress, the operation will go into the queue and will be automatically exectuted\n         * when the previous operaitons is finished.\n         *\n         * If `false`, any requested operations will be ignored, and the `onMixBusy` callback and `mixBusy`\n         * event will be fired. If `debug.showWarnings` is enabled, a console warning will also occur.\n         *\n         * @example <caption>Example: Disable queuing</caption>\n         * var mixer = mixitup(containerEl, {\n         *     animation: {\n         *         queue: false\n         *     }\n         * });\n         *\n         * @name        queue\n         * @memberof    mixitup.Config.animation\n         * @instance\n         * @type        {boolean}\n         * @default     true\n         */\n\n        this.queue = true;\n\n        /**\n         * An integer dictacting the maximum number of operations allowed in the queue at\n         * any time, when queuing is enabled.\n         *\n         * @example <caption>Example: Allow a maximum of 5 operations in the queue at any time</caption>\n         * var mixer = mixitup(containerEl, {\n         *     animation: {\n         *         queueLimit: 5\n         *     }\n         * });\n         *\n         * @name        queueLimit\n         * @memberof    mixitup.Config.animation\n         * @instance\n         * @type        {number}\n         * @default     3\n         */\n\n        this.queueLimit = 3;\n\n        /**\n         * A boolean dictating whether or not to transition the height and width of the\n         * container as elements are filtered in and out. If disabled, the container height\n         * will change abruptly.\n         *\n         * It may be desirable to disable this on mobile devices as the CSS `height` and\n         * `width` properties do not receive GPU-acceleration and can therefore cause stuttering.\n         *\n         * @example <caption>Example 1: Disable the transitioning of the container height and/or width</caption>\n         * var mixer = mixitup(containerEl, {\n         *     animation: {\n         *         animateResizeContainer: false\n         *     }\n         * });\n         *\n         * @example <caption>Example 2: Disable the transitioning of the container height and/or width for mobile devices only</caption>\n         * var mixer = mixitup(containerEl, {\n         *     animation: {\n         *         animateResizeContainer: myFeatureTests.isMobile ? false : true\n         *     }\n         * });\n         *\n         * @name        animateResizeContainer\n         * @memberof    mixitup.Config.animation\n         * @instance\n         * @type        {boolean}\n         * @default     true\n         */\n\n        this.animateResizeContainer = true;\n\n        /**\n         * A boolean dictating whether or not to transition the height and width of target\n         * elements as they change throughout the course of an animation.\n         *\n         * This is often a must for flex-box grid layouts where the size of target elements may change\n         * depending on final their position in relation to their siblings, or for `.changeLayout()`\n         * operations where the size of targets change between layouts.\n         *\n         * NB: This feature requires additional calculations and manipulation to non-hardware-accelerated\n         * properties which may adversely affect performance on slower devices, and is therefore\n         * disabled by default.\n         *\n         * @example <caption>Example: Enable the transitioning of target widths and heights</caption>\n         * var mixer = mixitup(containerEl, {\n         *     animation: {\n         *         animateResizeTargets: true\n         *     }\n         * });\n         *\n         * @name        animateResizeTargets\n         * @memberof    mixitup.Config.animation\n         * @instance\n         * @type        {boolean}\n         * @default     false\n         */\n\n        this.animateResizeTargets = false;\n\n        /**\n         * A custom function used to manipulate the order in which the stagger delay is\n         * incremented when using the ‘stagger’ effect.\n         *\n         * When using the 'stagger' effect, the delay applied to each target element is incremented\n         * based on its index. You may create a custom function to manipulate the order in which the\n         * delay is incremented and create engaging non-linear stagger effects.\n         *\n         * The function receives the index of the target element as a parameter, and must\n         * return an integer which serves as the multiplier for the stagger delay.\n         *\n         * @example <caption>Example 1: Stagger target elements by column in a 3-column grid</caption>\n         * var mixer = mixitup(containerEl, {\n         *     animation: {\n         *         effects: 'fade stagger(100ms)',\n         *         staggerSequence: function(i) {\n         *             return i % 3;\n         *         }\n         *     }\n         * });\n         *\n         * @example <caption>Example 2: Using an algorithm to produce a more complex sequence</caption>\n         * var mixer = mixitup(containerEl, {\n         *     animation: {\n         *         effects: 'fade stagger(100ms)',\n         *         staggerSequence: function(i) {\n         *             return (2*i) - (5*((i/3) - ((1/3) * (i%3))));\n         *         }\n         *     }\n         * });\n         *\n         * @name        staggerSequence\n         * @memberof    mixitup.Config.animation\n         * @instance\n         * @type        {function}\n         * @default     null\n         */\n\n        this.staggerSequence = null;\n\n        /**\n         * A boolean dictating whether or not to reverse the direction of `translate`\n         * and `rotate` transforms for elements being filtered out.\n         *\n         * It can be used to create carousel-like animations where elements enter and exit\n         * from opposite directions. If enabled, the effect `translateX(-100%)` for elements\n         * being filtered in would become `translateX(100%)` for targets being filtered out.\n         *\n         * This functionality can also be achieved by providing seperate effects\n         * strings for `config.animation.effectsIn` and `config.animation.effectsOut`.\n         *\n         * @example <caption>Example: Reverse the desired direction on any translate/rotate effect for targets being filtered out</caption>\n         * // Elements being filtered in will be translated from '100%' to '0' while\n         * // elements being filtered out will be translated from 0 to '-100%'\n         *\n         * var mixer = mixitup(containerEl, {\n         *     animation: {\n         *         effects: 'fade translateX(100%)',\n         *         reverseOut: true,\n         *         nudge: false // Disable nudging to create a carousel-like effect\n         *     }\n         * });\n         *\n         * @name        reverseOut\n         * @memberof    mixitup.Config.animation\n         * @instance\n         * @type        {boolean}\n         * @default     false\n         */\n\n        this.reverseOut = false;\n\n        /**\n         * A boolean dictating whether or not to \"nudge\" the animation path of targets\n         * when they are being filtered in and out simulatenously.\n         *\n         * This has been the default behavior of MixItUp since version 1, but it\n         * may be desirable to disable this effect when filtering directly from\n         * one exclusive set of targets to a different exclusive set of targets,\n         * to create a carousel-like effect, or a generally more subtle animation.\n         *\n         * @example <caption>Example: Disable the \"nudging\" of targets being filtered in and out simulatenously</caption>\n         *\n         * var mixer = mixitup(containerEl, {\n         *     animation: {\n         *         nudge: false\n         *     }\n         * });\n         *\n         * @name        nudge\n         * @memberof    mixitup.Config.animation\n         * @instance\n         * @type        {boolean}\n         * @default     true\n         */\n\n        this.nudge = true;\n\n        /**\n         * A boolean dictating whether or not to clamp the height of the container while MixItUp's\n         * geometry tests are carried out before an operation.\n         *\n         * To prevent scroll-bar flicker, clamping is turned on by default. But in the case where the\n         * height of the container might affect its vertical positioning in the viewport\n         * (e.g. a vertically-centered container), this should be turned off to ensure accurate\n         * test results and a smooth animation.\n         *\n         * @example <caption>Example: Disable container height-clamping</caption>\n         *\n         * var mixer = mixitup(containerEl, {\n         *     animation: {\n         *         clampHeight: false\n         *     }\n         * });\n         *\n         * @name        clampHeight\n         * @memberof    mixitup.Config.animation\n         * @instance\n         * @type        {boolean}\n         * @default     true\n         */\n\n        this.clampHeight = true;\n\n        /**\n         * A boolean dictating whether or not to clamp the width of the container while MixItUp's\n         * geometry tests are carried out before an operation.\n         *\n         * To prevent scroll-bar flicker, clamping is turned on by default. But in the case where the\n         * width of the container might affect its horitzontal positioning in the viewport\n         * (e.g. a horizontall-centered container), this should be turned off to ensure accurate\n         * test results and a smooth animation.\n         *\n         * @example <caption>Example: Disable container width-clamping</caption>\n         *\n         * var mixer = mixitup(containerEl, {\n         *     animation: {\n         *         clampWidth: false\n         *     }\n         * });\n         *\n         * @name        clampWidth\n         * @memberof    mixitup.Config.animation\n         * @instance\n         * @type        {boolean}\n         * @default     true\n         */\n\n        this.clampWidth = true;\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.ConfigAnimation);\n\n    mixitup.ConfigAnimation.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.ConfigAnimation.prototype.constructor = mixitup.ConfigAnimation;\n\n    /**\n     * A group of properties relating to the behavior of the Mixer.\n     *\n     * @constructor\n     * @memberof    mixitup.Config\n     * @name        behavior\n     * @namespace\n     * @public\n     * @since       3.1.12\n     */\n\n    mixitup.ConfigBehavior = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        /**\n         * A boolean dictating whether to allow \"live\" sorting of the mixer.\n         *\n         * Because of the expensive nature of sorting, MixItUp makes use of several\n         * internal optimizations to skip redundant sorting operations, such as when\n         * the newly requested sort command is the same as the active one. The caveat\n         * to this optimization is that \"live\" edits to the value of a target's sorting\n         * attribute will be ignored when requesting a re-sort by the same attribute.\n         *\n         * By setting to `behavior.liveSort` to `true`, the mixer will always re-sort\n         * regardless of whether or not the sorting attribute and order have changed.\n         *\n         * @example <caption>Example: Enabling `liveSort` to allow for re-sorting</caption>\n         *\n         * var mixer = mixitup(containerEl, {\n         *     behavior: {\n         *         liveSort: true\n         *     },\n         *     load: {\n         *         sort: 'edited:desc'\n         *     }\n         * });\n         *\n         * var target = containerEl.children[3];\n         *\n         * console.log(target.getAttribute('data-edited')); // '2015-04-24'\n         *\n         * target.setAttribute('data-edited', '2017-08-10'); // Update the target's edited date\n         *\n         * mixer.sort('edited:desc')\n         *     .then(function(state) {\n         *         // The target is now at the top of the list\n         *\n         *         console.log(state.targets[0] === target); // true\n         *     });\n         *\n         * @name        liveSort\n         * @memberof    mixitup.Config.behavior\n         * @instance\n         * @type        {boolean}\n         * @default     false\n         */\n\n        this.liveSort = false;\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.ConfigBehavior);\n\n    mixitup.ConfigBehavior.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.ConfigBehavior.prototype.constructor = mixitup.ConfigBehavior;\n\n    /**\n     * A group of optional callback functions to be invoked at various\n     * points within the lifecycle of a mixer operation.\n     *\n     * Each function is analogous to an event of the same name triggered from the\n     * container element, and is invoked immediately after it.\n     *\n     * All callback functions receive the current `state` object as their first\n     * argument, as well as other more specific arguments described below.\n     *\n     * @constructor\n     * @memberof    mixitup.Config\n     * @name        callbacks\n     * @namespace\n     * @public\n     * @since       2.0.0\n     */\n\n    mixitup.ConfigCallbacks = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        /**\n         * A callback function invoked immediately after any MixItUp operation is requested\n         * and before animations have begun.\n         *\n         * A second `futureState` argument is passed to the function which represents the final\n         * state of the mixer once the requested operation has completed.\n         *\n         * @example <caption>Example: Adding an `onMixStart` callback function</caption>\n         * var mixer = mixitup(containerEl, {\n         *     callbacks: {\n         *         onMixStart: function(state, futureState) {\n         *              console.log('Starting operation...');\n         *         }\n         *     }\n         * });\n         *\n         * @name        onMixStart\n         * @memberof    mixitup.Config.callbacks\n         * @instance\n         * @type        {function}\n         * @default     null\n         */\n\n        this.onMixStart = null;\n\n        /**\n         * A callback function invoked when a MixItUp operation is requested while another\n         * operation is in progress, and the animation queue is full, or queueing\n         * is disabled.\n         *\n         * @example <caption>Example: Adding an `onMixBusy` callback function</caption>\n         * var mixer = mixitup(containerEl, {\n         *     callbacks: {\n         *         onMixBusy: function(state) {\n         *              console.log('Mixer busy');\n         *         }\n         *     }\n         * });\n         *\n         * @name        onMixBusy\n         * @memberof    mixitup.Config.callbacks\n         * @instance\n         * @type        {function}\n         * @default     null\n         */\n\n        this.onMixBusy  = null;\n\n        /**\n         * A callback function invoked after any MixItUp operation has completed, and the\n         * state has been updated.\n         *\n         * @example <caption>Example: Adding an `onMixEnd` callback function</caption>\n         * var mixer = mixitup(containerEl, {\n         *     callbacks: {\n         *         onMixEnd: function(state) {\n         *              console.log('Operation complete');\n         *         }\n         *     }\n         * });\n         *\n         * @name        onMixEnd\n         * @memberof    mixitup.Config.callbacks\n         * @instance\n         * @type        {function}\n         * @default     null\n         */\n\n        this.onMixEnd   = null;\n\n        /**\n         * A callback function invoked whenever an operation \"fails\", i.e. no targets\n         * could be found matching the requested filter.\n         *\n         * @example <caption>Example: Adding an `onMixFail` callback function</caption>\n         * var mixer = mixitup(containerEl, {\n         *     callbacks: {\n         *         onMixFail: function(state) {\n         *              console.log('No items could be found matching the requested filter');\n         *         }\n         *     }\n         * });\n         *\n         * @name        onMixFail\n         * @memberof    mixitup.Config.callbacks\n         * @instance\n         * @type        {function}\n         * @default     null\n         */\n\n        this.onMixFail  = null;\n\n        /**\n         * A callback function invoked whenever a MixItUp control is clicked, and before its\n         * respective operation is requested.\n         *\n         * The clicked element is assigned to the `this` keyword within the function. The original\n         * click event is passed to the function as the second argument, which can be useful if\n         * using `<a>` tags as controls where the default behavior needs to be prevented.\n         *\n         * Returning `false` from the callback will prevent the control click from triggering\n         * an operation.\n         *\n         * @example <caption>Example 1: Adding an `onMixClick` callback function</caption>\n         * var mixer = mixitup(containerEl, {\n         *     callbacks: {\n         *         onMixClick: function(state, originalEvent) {\n         *              console.log('The control \"' + this.innerText + '\" was clicked');\n         *         }\n         *     }\n         * });\n         *\n         * @example <caption>Example 2: Using `onMixClick` to manipulate the original click event</caption>\n         * var mixer = mixitup(containerEl, {\n         *     callbacks: {\n         *         onMixClick: function(state, originalEvent) {\n         *              // Prevent original click event from bubbling up:\n         *              originalEvent.stopPropagation();\n         *\n         *              // Prevent default behavior of clicked element:\n         *              originalEvent.preventDefault();\n         *         }\n         *     }\n         * });\n         *\n         * @example <caption>Example 3: Using `onMixClick` to conditionally cancel operations</caption>\n         * var mixer = mixitup(containerEl, {\n         *     callbacks: {\n         *         onMixClick: function(state, originalEvent) {\n         *              // Perform some conditional check:\n         *\n         *              if (myApp.isLoading) {\n         *                  // By returning false, we can prevent the control click from triggering an operation.\n         *\n         *                  return false;\n         *              }\n         *         }\n         *     }\n         * });\n         *\n         * @name        onMixClick\n         * @memberof    mixitup.Config.callbacks\n         * @instance\n         * @type        {function}\n         * @default     null\n         */\n\n        this.onMixClick = null;\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.ConfigCallbacks);\n\n    mixitup.ConfigCallbacks.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.ConfigCallbacks.prototype.constructor = mixitup.ConfigCallbacks;\n\n    /**\n     * A group of properties relating to clickable control elements.\n     *\n     * @constructor\n     * @memberof    mixitup.Config\n     * @name        controls\n     * @namespace\n     * @public\n     * @since       2.0.0\n     */\n\n    mixitup.ConfigControls = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        /**\n         * A boolean dictating whether or not controls should be enabled for the mixer instance.\n         *\n         * If `true` (default behavior), MixItUp will search the DOM for any clickable elements with\n         * `data-filter`, `data-sort` or `data-toggle` attributes, and bind them for click events.\n         *\n         * If `false`, no click handlers will be bound, and all functionality must therefore be performed\n         * via the mixer's API methods.\n         *\n         * If you do not intend to use the default controls, setting this property to `false` will\n         * marginally improve the startup time of your mixer instance, and will also prevent any other active\n         * mixer instances in the DOM which are bound to controls from controlling the instance.\n         *\n         * @example <caption>Example: Disabling controls</caption>\n         * var mixer = mixitup(containerEl, {\n         *     controls: {\n         *         enable: false\n         *     }\n         * });\n         *\n         * // With the default controls disabled, we can only control\n         * // the mixer via its API methods, e.g.:\n         *\n         * mixer.filter('.cat-1');\n         *\n         * @name        enable\n         * @memberof    mixitup.Config.controls\n         * @instance\n         * @type        {boolean}\n         * @default     true\n         */\n\n        this.enable = true;\n\n        /**\n         * A boolean dictating whether or not to use event delegation when binding click events\n         * to the default controls.\n         *\n         * If `false` (default behavior), each control button in the DOM will be found and\n         * individually bound when a mixer is instantiated, with their corresponding actions\n         * cached for performance.\n         *\n         * If `true`, a single click handler will be applied to the `window` (or container element - see\n         * `config.controls.scope`), and any click events triggered by elements with `data-filter`,\n         * `data-sort` or `data-toggle` attributes present will be handled as they propagate upwards.\n         *\n         * If you require a user interface where control buttons may be added, removed, or changed during the\n         * lifetime of a mixer, `controls.live` should be set to `true`. There is a marginal but unavoidable\n         * performance deficit when using live controls, as the value of each control button must be read\n         * from the DOM in real time once the click event has propagated.\n         *\n         * @example <caption>Example: Setting live controls</caption>\n         * var mixer = mixitup(containerEl, {\n         *     controls: {\n         *         live: true\n         *     }\n         * });\n         *\n         * // Control buttons can now be added, remove and changed without breaking\n         * // the mixer's UI\n         *\n         * @name        live\n         * @memberof    mixitup.Config.controls\n         * @instance\n         * @type        {boolean}\n         * @default     true\n         */\n\n        this.live = false;\n\n        /**\n         * A string dictating the \"scope\" to use when binding or querying the default controls. The available\n         * values are `'global'` or `'local'`.\n         *\n         * When set to `'global'` (default behavior), MixItUp will query the entire document for control buttons\n         * to bind, or delegate click events from (see `config.controls.live`).\n         *\n         * When set to `'local'`, MixItUp will only query (or bind click events to) its own container element.\n         * This may be desireable if you require multiple active mixer instances within the same document, with\n         * controls that would otherwise intefere with each other if scoped globally.\n         *\n         * Conversely, if you wish to control multiple instances with a single UI, you would create one\n         * set of controls and keep the controls scope of each mixer set to `global`.\n         *\n         * @example <caption>Example: Setting 'local' scoped controls</caption>\n         * var mixerOne = mixitup(containerOne, {\n         *     controls: {\n         *         scope: 'local'\n         *     }\n         * });\n         *\n         * var mixerTwo = mixitup(containerTwo, {\n         *     controls: {\n         *         scope: 'local'\n         *     }\n         * });\n         *\n         * // Both mixers can now exist within the same document with\n         * // isolated controls placed within their container elements.\n         *\n         * @name        scope\n         * @memberof    mixitup.Config.controls\n         * @instance\n         * @type        {string}\n         * @default     'global'\n         */\n\n        this.scope = 'global'; // enum: ['local' ,'global']\n\n        /**\n         * A string dictating the type of logic to apply when concatenating the filter selectors of\n         * active toggle buttons (i.e. any clickable element with a `data-toggle` attribute).\n         *\n         * If set to `'or'` (default behavior), selectors will be concatenated together as\n         * a comma-seperated list. For example:\n         *\n         * `'.cat-1, .cat-2'` (shows any elements matching `'.cat-1'` OR `'.cat-2'`)\n         *\n         * If set to `'and'`, selectors will be directly concatenated together. For example:\n         *\n         * `'.cat-1.cat-2'` (shows any elements which match both `'.cat-1'` AND `'.cat-2'`)\n         *\n         * @example <caption>Example: Setting \"and\" toggle logic</caption>\n         * var mixer = mixitup(containerEl, {\n         *     controls: {\n         *         toggleLogic: 'and'\n         *     }\n         * });\n         *\n         * @name        toggleLogic\n         * @memberof    mixitup.Config.controls\n         * @instance\n         * @type        {string}\n         * @default     'or'\n         */\n\n        this.toggleLogic = 'or'; // enum: ['or', 'and']\n\n        /**\n         * A string dictating the filter behavior when all toggles are inactive.\n         *\n         * When set to `'all'` (default behavior), *all* targets will be shown by default\n         * when no toggles are active, or at the moment all active toggles are toggled off.\n         *\n         * When set to `'none'`, no targets will be shown by default when no toggles are\n         * active, or at the moment all active toggles are toggled off.\n         *\n         * @example <caption>Example 1: Setting the default toggle behavior to `'all'`</caption>\n         * var mixer = mixitup(containerEl, {\n         *     controls: {\n         *         toggleDefault: 'all'\n         *     }\n         * });\n         *\n         * mixer.toggleOn('.cat-2')\n         *     .then(function() {\n         *         // Deactivate all active toggles\n         *\n         *         return mixer.toggleOff('.cat-2')\n         *     })\n         *     .then(function(state) {\n         *          console.log(state.activeFilter.selector); // 'all'\n         *          console.log(state.totalShow); // 12\n         *     });\n         *\n         * @example <caption>Example 2: Setting the default toggle behavior to `'none'`</caption>\n         * var mixer = mixitup(containerEl, {\n         *     controls: {\n         *         toggleDefault: 'none'\n         *     }\n         * });\n         *\n         * mixer.toggleOn('.cat-2')\n         *     .then(function() {\n         *         // Deactivate all active toggles\n         *\n         *         return mixer.toggleOff('.cat-2')\n         *     })\n         *     .then(function(state) {\n         *          console.log(state.activeFilter.selector); // 'none'\n         *          console.log(state.totalShow); // 0\n         *     });\n         *\n         * @name        toggleDefault\n         * @memberof    mixitup.Config.controls\n         * @instance\n         * @type        {string}\n         * @default     'all'\n         */\n\n        this.toggleDefault = 'all'; // enum: ['all', 'none']\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.ConfigControls);\n\n    mixitup.ConfigControls.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.ConfigControls.prototype.constructor = mixitup.ConfigControls;\n\n    /**\n     * A group of properties defining the output and structure of class names programmatically\n     * added to controls and containers to reflect the state of the mixer.\n     *\n     * Most commonly, class names are added to controls by MixItUp to indicate that\n     * the control is active so that it can be styled accordingly - `'mixitup-control-active'` by default.\n     *\n     * Using a \"BEM\" like structure, each classname is broken into the three parts:\n     * a block namespace (`'mixitup'`), an element name (e.g. `'control'`), and an optional modifier\n     * name (e.g. `'active'`) reflecting the state of the element.\n     *\n     * By default, each part of the classname is concatenated together using single hyphens as\n     * delineators, but this can be easily customised to match the naming convention and style of\n     * your project.\n     *\n     * @constructor\n     * @memberof    mixitup.Config\n     * @name        classNames\n     * @namespace\n     * @public\n     * @since       3.0.0\n     */\n\n    mixitup.ConfigClassNames = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        /**\n         * The \"block\" portion, or top-level namespace added to the start of any class names created by MixItUp.\n         *\n         * @example <caption>Example 1: changing the `config.classNames.block` value</caption>\n         * var mixer = mixitup(containerEl, {\n         *     classNames: {\n         *         block: 'portfolio'\n         *     }\n         * });\n         *\n         * // Active control output: \"portfolio-control-active\"\n         *\n         * @example <caption>Example 2: Removing `config.classNames.block`</caption>\n         * var mixer = mixitup(containerEl, {\n         *     classNames: {\n         *         block: ''\n         *     }\n         * });\n         *\n         * // Active control output: \"control-active\"\n         *\n         * @name        block\n         * @memberof    mixitup.Config.classNames\n         * @instance\n         * @type        {string}\n         * @default     'mixitup'\n         */\n\n        this.block = 'mixitup';\n\n        /**\n         * The \"element\" portion of the class name added to container.\n         *\n         * @name        elementContainer\n         * @memberof    mixitup.Config.classNames\n         * @instance\n         * @type        {string}\n         * @default     'container'\n         */\n\n        this.elementContainer = 'container';\n\n        /**\n         * The \"element\" portion of the class name added to filter controls.\n         *\n         * By default, all filter, sort, multimix and toggle controls take the same element value of `'control'`, but\n         * each type's element value can be individually overwritten to match the unique classNames of your controls as needed.\n         *\n         * @example <caption>Example 1: changing the `config.classNames.elementFilter` value</caption>\n         * var mixer = mixitup(containerEl, {\n         *     classNames: {\n         *         elementFilter: 'filter'\n         *     }\n         * });\n         *\n         * // Active filter output: \"mixitup-filter-active\"\n         *\n         * @example <caption>Example 2: changing the `config.classNames.block` and `config.classNames.elementFilter` values</caption>\n         * var mixer = mixitup(containerEl, {\n         *     classNames: {\n         *         block: 'portfolio',\n         *         elementFilter: 'filter'\n         *     }\n         * });\n         *\n         * // Active filter output: \"portfolio-filter-active\"\n         *\n         * @name        elementFilter\n         * @memberof    mixitup.Config.classNames\n         * @instance\n         * @type        {string}\n         * @default     'control'\n         */\n\n        this.elementFilter = 'control';\n\n        /**\n         * The \"element\" portion of the class name added to sort controls.\n         *\n         * By default, all filter, sort, multimix and toggle controls take the same element value of `'control'`, but\n         * each type's element value can be individually overwritten to match the unique classNames of your controls as needed.\n         *\n         * @example <caption>Example 1: changing the `config.classNames.elementSort` value</caption>\n         * var mixer = mixitup(containerEl, {\n         *     classNames: {\n         *         elementSort: 'sort'\n         *     }\n         * });\n         *\n         * // Active sort output: \"mixitup-sort-active\"\n         *\n         * @example <caption>Example 2: changing the `config.classNames.block` and `config.classNames.elementSort` values</caption>\n         * var mixer = mixitup(containerEl, {\n         *     classNames: {\n         *         block: 'portfolio',\n         *         elementSort: 'sort'\n         *     }\n         * });\n         *\n         * // Active sort output: \"portfolio-sort-active\"\n         *\n         * @name        elementSort\n         * @memberof    mixitup.Config.classNames\n         * @instance\n         * @type        {string}\n         * @default     'control'\n         */\n\n        this.elementSort = 'control';\n\n        /**\n         * The \"element\" portion of the class name added to multimix controls.\n         *\n         * By default, all filter, sort, multimix and toggle controls take the same element value of `'control'`, but\n         * each type's element value can be individually overwritten to match the unique classNames of your controls as needed.\n         *\n         * @example <caption>Example 1: changing the `config.classNames.elementMultimix` value</caption>\n         * var mixer = mixitup(containerEl, {\n         *     classNames: {\n         *         elementMultimix: 'multimix'\n         *     }\n         * });\n         *\n         * // Active multimix output: \"mixitup-multimix-active\"\n         *\n         * @example <caption>Example 2: changing the `config.classNames.block` and `config.classNames.elementMultimix` values</caption>\n         * var mixer = mixitup(containerEl, {\n         *     classNames: {\n         *         block: 'portfolio',\n         *         elementSort: 'multimix'\n         *     }\n         * });\n         *\n         * // Active multimix output: \"portfolio-multimix-active\"\n         *\n         * @name        elementMultimix\n         * @memberof    mixitup.Config.classNames\n         * @instance\n         * @type        {string}\n         * @default     'control'\n         */\n\n        this.elementMultimix = 'control';\n\n        /**\n         * The \"element\" portion of the class name added to toggle controls.\n         *\n         * By default, all filter, sort, multimix and toggle controls take the same element value of `'control'`, but\n         * each type's element value can be individually overwritten to match the unique classNames of your controls as needed.\n         *\n         * @example <caption>Example 1: changing the `config.classNames.elementToggle` value</caption>\n         * var mixer = mixitup(containerEl, {\n         *     classNames: {\n         *         elementToggle: 'toggle'\n         *     }\n         * });\n         *\n         * // Active toggle output: \"mixitup-toggle-active\"\n         *\n         * @example <caption>Example 2: changing the `config.classNames.block` and `config.classNames.elementToggle` values</caption>\n         * var mixer = mixitup(containerEl, {\n         *     classNames: {\n         *         block: 'portfolio',\n         *         elementToggle: 'toggle'\n         *     }\n         * });\n         *\n         * // Active toggle output: \"portfolio-toggle-active\"\n         *\n         * @name        elementToggle\n         * @memberof    mixitup.Config.classNames\n         * @instance\n         * @type        {string}\n         * @default     'control'\n         */\n\n        this.elementToggle = 'control';\n\n        /**\n         * The \"modifier\" portion of the class name added to active controls.\n         * @name        modifierActive\n         * @memberof    mixitup.Config.classNames\n         * @instance\n         * @type        {string}\n         * @default     'active'\n         */\n\n        this.modifierActive = 'active';\n\n        /**\n         * The \"modifier\" portion of the class name added to disabled controls.\n         *\n         * @name        modifierDisabled\n         * @memberof    mixitup.Config.classNames\n         * @instance\n         * @type        {string}\n         * @default     'disabled'\n         */\n\n        this.modifierDisabled = 'disabled';\n\n        /**\n         * The \"modifier\" portion of the class name added to the container when in a \"failed\" state.\n         *\n         * @name        modifierFailed\n         * @memberof    mixitup.Config.classNames\n         * @instance\n         * @type        {string}\n         * @default     'failed'\n         */\n\n        this.modifierFailed = 'failed';\n\n        /**\n         * The delineator used between the \"block\" and \"element\" portions of any class name added by MixItUp.\n         *\n         * If the block portion is ommited by setting it to an empty string, no delineator will be added.\n         *\n         * @example <caption>Example: changing the delineator to match BEM convention</caption>\n         * var mixer = mixitup(containerEl, {\n         *     classNames: {\n         *         delineatorElement: '__'\n         *     }\n         * });\n         *\n         * // example active control output: \"mixitup__control-active\"\n         *\n         * @name        delineatorElement\n         * @memberof    mixitup.Config.classNames\n         * @instance\n         * @type        {string}\n         * @default     '-'\n         */\n\n        this.delineatorElement = '-';\n\n        /**\n         * The delineator used between the \"element\" and \"modifier\" portions of any class name added by MixItUp.\n         *\n         * If the element portion is ommited by setting it to an empty string, no delineator will be added.\n         *\n         * @example <caption>Example: changing both delineators to match BEM convention</caption>\n         * var mixer = mixitup(containerEl, {\n         *     classNames: {\n         *         delineatorElement: '__'\n         *         delineatorModifier: '--'\n         *     }\n         * });\n         *\n         * // Active control output: \"mixitup__control--active\"\n         *\n         * @name        delineatorModifier\n         * @memberof    mixitup.Config.classNames\n         * @instance\n         * @type        {string}\n         * @default     '-'\n         */\n\n        this.delineatorModifier = '-';\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.ConfigClassNames);\n\n    mixitup.ConfigClassNames.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.ConfigClassNames.prototype.constructor = mixitup.ConfigClassNames;\n\n    /**\n     * A group of properties relating to MixItUp's dataset API.\n     *\n     * @constructor\n     * @memberof    mixitup.Config\n     * @name        data\n     * @namespace\n     * @public\n     * @since       3.0.0\n     */\n\n    mixitup.ConfigData = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        /**\n         * A string specifying the name of the key containing your data model's unique\n         * identifier (UID). To use the dataset API, a UID key must be specified and\n         * be present and unique on all objects in the dataset you provide to MixItUp.\n         *\n         * For example, if your dataset is made up of MongoDB documents, the UID\n         * key would be `'id'` or `'_id'`.\n         *\n         * @example <caption>Example: Setting the UID to `'id'`</caption>\n         * var mixer = mixitup(containerEl, {\n         *     data: {\n         *         uidKey: 'id'\n         *     }\n         * });\n         *\n         * @name        uidKey\n         * @memberof    mixitup.Config.data\n         * @instance\n         * @type        {string}\n         * @default     ''\n         */\n\n        this.uidKey = '';\n\n        /**\n         * A boolean dictating whether or not MixItUp should \"dirty check\" each object in\n         * your dataset for changes whenever `.dataset()` is called, and re-render any targets\n         * for which a change is found.\n         *\n         * Depending on the complexity of your data model, dirty checking can be expensive\n         * and is therefore disabled by default.\n         *\n         * NB: For changes to be detected, a new immutable instance of the edited model must be\n         * provided to mixitup, rather than manipulating properties on the existing instance.\n         * If your changes are a result of a DB write and read, you will most likely be calling\n         * `.dataset()` with a clean set of objects each time, so this will not be an issue.\n         *\n         * @example <caption>Example: Enabling dirty checking</caption>\n         *\n         * var myDataset = [\n         *     {\n         *         id: 0,\n         *         title: \"Blog Post Title 0\"\n         *         ...\n         *     },\n         *     {\n         *         id: 1,\n         *         title: \"Blog Post Title 1\"\n         *         ...\n         *     }\n         * ];\n         *\n         * // Instantiate a mixer with a pre-loaded dataset, and a target renderer\n         * // function defined\n         *\n         * var mixer = mixitup(containerEl, {\n         *     data: {\n         *         uidKey: 'id',\n         *         dirtyCheck: true\n         *     },\n         *     load: {\n         *         dataset: myDataset\n         *     },\n         *     render: {\n         *         target: function() { ... }\n         *     }\n         * });\n         *\n         * // For illustration, we will clone and edit the second object in the dataset.\n         * // NB: this would typically be done server-side in response to a DB update,\n         * and then re-queried via an API.\n         *\n         * myDataset[1] = Object.assign({}, myDataset[1]);\n         *\n         * myDataset[1].title = 'Blog Post Title 11';\n         *\n         * mixer.dataset(myDataset)\n         *    .then(function() {\n         *        // the target with ID \"1\", will be re-rendered reflecting its new title\n         *    });\n         *\n         * @name        dirtyCheck\n         * @memberof    mixitup.Config.data\n         * @instance\n         * @type        {boolean}\n         * @default     false\n         */\n\n        this.dirtyCheck = false;\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.ConfigData);\n\n    mixitup.ConfigData.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.ConfigData.prototype.constructor = mixitup.ConfigData;\n\n    /**\n     * A group of properties allowing the toggling of various debug features.\n     *\n     * @constructor\n     * @memberof    mixitup.Config\n     * @name        debug\n     * @namespace\n     * @public\n     * @since       3.0.0\n     */\n\n    mixitup.ConfigDebug = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        /**\n         * A boolean dictating whether or not the mixer instance returned by the\n         * `mixitup()` factory function should expose private properties and methods.\n         *\n         * By default, mixer instances only expose their public API, but enabling\n         * debug mode will give you access to various mixer internals which may aid\n         * in debugging, or the authoring of extensions.\n         *\n         * @example <caption>Example: Enabling debug mode</caption>\n         *\n         * var mixer = mixitup(containerEl, {\n         *     debug: {\n         *         enable: true\n         *     }\n         * });\n         *\n         * // Private properties and methods will now be visible on the mixer instance:\n         *\n         * console.log(mixer);\n         *\n         * @name        enable\n         * @memberof    mixitup.Config.debug\n         * @instance\n         * @type        {boolean}\n         * @default     false\n         */\n\n        this.enable = false;\n\n        /**\n         * A boolean dictating whether or not warnings should be shown when various\n         * common gotchas occur.\n         *\n         * Warnings are intended to provide insights during development when something\n         * occurs that is not a fatal, but may indicate an issue with your integration,\n         * and are therefore turned on by default. However, you may wish to disable\n         * them in production.\n         *\n         * @example <caption>Example 1: Disabling warnings</caption>\n         *\n         * var mixer = mixitup(containerEl, {\n         *     debug: {\n         *         showWarnings: false\n         *     }\n         * });\n         *\n         * @example <caption>Example 2: Disabling warnings based on environment</caption>\n         *\n         * var showWarnings = myAppConfig.environment === 'development' ? true : false;\n         *\n         * var mixer = mixitup(containerEl, {\n         *     debug: {\n         *         showWarnings: showWarnings\n         *     }\n         * });\n         *\n         * @name        showWarnings\n         * @memberof    mixitup.Config.debug\n         * @instance\n         * @type        {boolean}\n         * @default     true\n         */\n\n        this.showWarnings = true;\n\n        /**\n         * Used for server-side testing only.\n         *\n         * @private\n         * @name        fauxAsync\n         * @memberof    mixitup.Config.debug\n         * @instance\n         * @type        {boolean}\n         * @default     false\n         */\n\n        this.fauxAsync = false;\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.ConfigDebug);\n\n    mixitup.ConfigDebug.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.ConfigDebug.prototype.constructor = mixitup.ConfigDebug;\n\n    /**\n     * A group of properties relating to the layout of the container.\n     *\n     * @constructor\n     * @memberof    mixitup.Config\n     * @name        layout\n     * @namespace\n     * @public\n     * @since       3.0.0\n     */\n\n    mixitup.ConfigLayout = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        /**\n         * A boolean dictating whether or not mixitup should query all descendants\n         * of the container for targets, or only immediate children.\n         *\n         * By default, mixitup will query all descendants matching the\n         * `selectors.target` selector when indexing targets upon instantiation.\n         * This allows for targets to be nested inside a sub-container which is\n         * useful when ring-fencing targets from locally scoped controls in your\n         * markup (see `controls.scope`).\n         *\n         * However, if you are building a more complex UI requiring the nesting\n         * of mixers within mixers, you will most likely want to limit targets to\n         * immediate children of the container by setting this property to `false`.\n         *\n         * @example <caption>Example: Restricting targets to immediate children</caption>\n         *\n         * var mixer = mixitup(containerEl, {\n         *     layout: {\n         *         allowNestedTargets: false\n         *     }\n         * });\n         *\n         * @name        allowNestedTargets\n         * @memberof    mixitup.Config.layout\n         * @instance\n         * @type        {boolean}\n         * @default     true\n         */\n\n        this.allowNestedTargets = true;\n\n        /**\n         * A string specifying an optional class name to apply to the container when in\n         * its default state.\n         *\n         * By changing this class name or adding a class name to the container via the\n         * `.changeLayout()` API method, the CSS layout of the container can be changed,\n         * and MixItUp will attemp to gracefully animate the container and its targets\n         * between states.\n         *\n         * @example <caption>Example 1: Specifying a container class name</caption>\n         *\n         * var mixer = mixitup(containerEl, {\n         *     layout: {\n         *         containerClassName: 'grid'\n         *     }\n         * });\n         *\n         * @example <caption>Example 2: Changing the default class name with `.changeLayout()`</caption>\n         *\n         * var mixer = mixitup(containerEl, {\n         *     layout: {\n         *         containerClassName: 'grid'\n         *     }\n         * });\n         *\n         * mixer.changeLayout('list')\n         *     .then(function(state) {\n         *          console.log(state.activeContainerClass); // \"list\"\n         *     });\n         *\n         * @name        containerClassName\n         * @memberof    mixitup.Config.layout\n         * @instance\n         * @type        {string}\n         * @default     ''\n         */\n\n        this.containerClassName = '';\n\n        /**\n         * A reference to a non-target sibling element after which to insert targets\n         * when there are no targets in the container.\n         *\n         * @example <caption>Example: Setting a `siblingBefore` reference element</caption>\n         *\n         * var addButton = containerEl.querySelector('button');\n         *\n         * var mixer = mixitup(containerEl, {\n         *     layout: {\n         *         siblingBefore: addButton\n         *     }\n         * });\n         *\n         * @name        siblingBefore\n         * @memberof    mixitup.Config.layout\n         * @instance\n         * @type        {HTMLElement}\n         * @default     null\n         */\n\n        this.siblingBefore = null;\n\n        /**\n         * A reference to a non-target sibling element before which to insert targets\n         * when there are no targets in the container.\n         *\n         * @example <caption>Example: Setting an `siblingAfter` reference element</caption>\n         *\n         * var gap = containerEl.querySelector('.gap');\n         *\n         * var mixer = mixitup(containerEl, {\n         *     layout: {\n         *         siblingAfter: gap\n         *     }\n         * });\n         *\n         * @name        siblingAfter\n         * @memberof    mixitup.Config.layout\n         * @instance\n         * @type        {HTMLElement}\n         * @default     null\n         */\n\n        this.siblingAfter = null;\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.ConfigLayout);\n\n    mixitup.ConfigLayout.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.ConfigLayout.prototype.constructor = mixitup.ConfigLayout;\n\n    /**\n     * A group of properties defining the initial state of the mixer on load (instantiation).\n     *\n     * @constructor\n     * @memberof    mixitup.Config\n     * @name        load\n     * @namespace\n     * @public\n     * @since       2.0.0\n     */\n\n    mixitup.ConfigLoad = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        /**\n         * A string defining any filtering to be statically applied to the mixer on load.\n         * As per the `.filter()` API, this can be any valid selector string, or the\n         * values `'all'` or `'none'`.\n         *\n         * @example <caption>Example 1: Defining an initial filter selector to be applied on load</caption>\n         *\n         * // The mixer will show only those targets matching '.category-a' on load.\n         *\n         * var mixer = mixitup(containerEl, {\n         *     load: {\n         *         filter: '.category-a'\n         *     }\n         * });\n         *\n         * @example <caption>Example 2: Hiding all targets on load</caption>\n         *\n         * // The mixer will show hide all targets on load.\n         *\n         * var mixer = mixitup(containerEl, {\n         *     load: {\n         *         filter: 'none'\n         *     }\n         * });\n         *\n         * @name        filter\n         * @memberof    mixitup.Config.load\n         * @instance\n         * @type        {string}\n         * @default     'all'\n         */\n\n        this.filter = 'all';\n\n        /**\n         * A string defining any sorting to be statically applied to the mixer on load.\n         * As per the `.sort()` API, this should be a valid \"sort string\" made up of\n         * an attribute to sort by (or `'default'`) followed by an optional sorting\n         * order, or the value `'random'`;\n         *\n         * @example <caption>Example: Defining sorting to be applied on load</caption>\n         *\n         * // The mixer will sort the container by the value of the `data-published-date`\n         * // attribute, in descending order.\n         *\n         * var mixer = mixitup(containerEl, {\n         *     load: {\n         *         sort: 'published-date:desc'\n         *     }\n         * });\n         *\n         * @name        sort\n         * @memberof    mixitup.Config.load\n         * @instance\n         * @type        {string}\n         * @default     'default:asc'\n         */\n\n        this.sort = 'default:asc';\n\n        /**\n         * An array of objects representing the underlying data of any pre-rendered targets,\n         * when using the `.dataset()` API.\n         *\n         * NB: If targets are pre-rendered when the mixer is instantiated, this must be set.\n         *\n         * @example <caption>Example: Defining the initial underyling dataset</caption>\n         *\n         * var myDataset = [\n         *     {\n         *         id: 0,\n         *         title: \"Blog Post Title 0\",\n         *         ...\n         *     },\n         *     {\n         *         id: 1,\n         *         title: \"Blog Post Title 1\",\n         *         ...\n         *     }\n         * ];\n         *\n         * var mixer = mixitup(containerEl, {\n         *     data: {\n         *         uidKey: 'id'\n         *     },\n         *     load: {\n         *         dataset: myDataset\n         *     }\n         * });\n         *\n         * @name        dataset\n         * @memberof    mixitup.Config.load\n         * @instance\n         * @type        {Array.<object>}\n         * @default     null\n         */\n\n        this.dataset = null;\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.ConfigLoad);\n\n    mixitup.ConfigLoad.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.ConfigLoad.prototype.constructor = mixitup.ConfigLoad;\n\n    /**\n     * A group of properties defining the selectors used to query elements within a mixitup container.\n     *\n     * @constructor\n     * @memberof    mixitup.Config\n     * @name        selectors\n     * @namespace\n     * @public\n     * @since       3.0.0\n     */\n\n    mixitup.ConfigSelectors = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        /**\n         * A selector string used to query and index target elements within the container.\n         *\n         * By default, the class selector `'.mix'` is used, but this can be changed to an\n         * attribute or element selector to match the style of your project.\n         *\n         * @example <caption>Example 1: Changing the target selector</caption>\n         *\n         * var mixer = mixitup(containerEl, {\n         *     selectors: {\n         *         target: '.portfolio-item'\n         *     }\n         * });\n         *\n         * @example <caption>Example 2: Using an attribute selector as a target selector</caption>\n         *\n         * // The mixer will search for any children with the attribute `data-ref=\"mix\"`\n         *\n         * var mixer = mixitup(containerEl, {\n         *     selectors: {\n         *         target: '[data-ref=\"mix\"]'\n         *     }\n         * });\n         *\n         * @name        target\n         * @memberof    mixitup.Config.selectors\n         * @instance\n         * @type        {string}\n         * @default     '.mix'\n         */\n\n        this.target = '.mix';\n\n        /**\n         * A optional selector string used to add further specificity to the querying of control elements,\n         * in addition to their mandatory data attribute (e.g. `data-filter`, `data-toggle`, `data-sort`).\n         *\n         * This can be used if other elements in your document must contain the above attributes\n         * (e.g. for use in third-party scripts), and would otherwise interfere with MixItUp. Adding\n         * an additional `control` selector of your choice allows MixItUp to restrict event handling\n         * to only those elements matching the defined selector.\n         *\n         * @name        control\n         * @memberof    mixitup.Config.selectors\n         * @instance\n         * @type        {string}\n         * @default     ''\n         *\n         * @example <caption>Example 1: Adding a `selectors.control` selector</caption>\n         *\n         * var mixer = mixitup(containerEl, {\n         *     selectors: {\n         *         control: '.mixitup-control'\n         *     }\n         * });\n         *\n         * // Will not be handled:\n         * // <button data-filter=\".category-a\"></button>\n         *\n         * // Will be handled:\n         * // <button class=\"mixitup-control\" data-filter=\".category-a\"></button>\n         */\n\n        this.control = '';\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.ConfigSelectors);\n\n    mixitup.ConfigSelectors.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.ConfigSelectors.prototype.constructor = mixitup.ConfigSelectors;\n\n    /**\n     * A group of optional render functions for creating and updating elements.\n     *\n     * All render functions receive a data object, and should return a valid HTML string.\n     *\n     * @constructor\n     * @memberof    mixitup.Config\n     * @name        render\n     * @namespace\n     * @public\n     * @since       3.0.0\n     */\n\n    mixitup.ConfigRender = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        /**\n         * A function returning an HTML string representing a target element, or a reference to a\n         * single DOM element.\n         *\n         * The function is invoked as part of the `.dataset()` API, whenever a new item is added\n         * to the dataset, or an item in the dataset changes (if `dataset.dirtyCheck` is enabled).\n         *\n         * The function receives the relevant dataset item as its first parameter.\n         *\n         * @example <caption>Example 1: Using string concatenation</caption>\n         *\n         * var mixer = mixitup(containerEl, {\n         *     render: {\n         *         target: function(item) {\n         *             return (\n         *                 '&lt;div class=\"mix\"&gt;' +\n         *                     '&lt;h2&gt;' + item.title + '&lt;/h2&gt;' +\n         *                 '&lt;/div&gt;'\n         *             );\n         *         }\n         *     }\n         * });\n         *\n         * @example <caption>Example 2: Using an ES2015 template literal</caption>\n         *\n         * var mixer = mixitup(containerEl, {\n         *     render: {\n         *         target: function(item) {\n         *             return (\n         *                 `&lt;div class=\"mix\"&gt;\n         *                     &lt;h2&gt;${item.title}&lt;/h2&gt;\n         *                  &lt;/div&gt;`\n         *             );\n         *         }\n         *     }\n         * });\n         *\n         * @example <caption>Example 3: Using a Handlebars template</caption>\n         *\n         * var targetTemplate = Handlebars.compile('&lt;div class=\"mix\"&gt;&lt;h2&gt;{{title}}&lt;/h2&gt;&lt;/div&gt;');\n         *\n         * var mixer = mixitup(containerEl, {\n         *     render: {\n         *         target: targetTemplate\n         *     }\n         * });\n         *\n         * @example <caption>Example 4: Returning a DOM element</caption>\n         *\n         * var mixer = mixitup(containerEl, {\n         *     render: {\n         *         target: function(item) {\n         *              // Create a single element using your framework's built-in renderer\n         *\n         *              var el = ...\n         *\n         *              return el;\n         *         }\n         *     }\n         * });\n         *\n         * @name        target\n         * @memberof    mixitup.Config.render\n         * @instance\n         * @type        {function}\n         * @default     'null'\n         */\n\n        this.target = null;\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.ConfigRender);\n\n    mixitup.ConfigRender.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.ConfigRender.prototype.constructor = mixitup.ConfigRender;\n\n    /**\n     * @constructor\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.ConfigTemplates = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.ConfigTemplates);\n\n    mixitup.ConfigTemplates.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.ConfigTemplates.prototype.constructor = mixitup.ConfigTemplates;\n\n    /**\n     * `mixitup.Config` is an interface used for customising the functionality of a\n     * mixer instance. It is organised into several semantically distinct sub-objects,\n     * each one pertaining to a particular aspect of MixItUp functionality.\n     *\n     * An object literal containing any or all of the available properies,\n     * known as the \"configuration object\", can be passed as the second parameter to\n     * the `mixitup` factory function when creating a mixer instance to customise its\n     * functionality as needed.\n     *\n     * If no configuration object is passed, the mixer instance will take on the default\n     * configuration values detailed below.\n     *\n     * @example <caption>Example 1: Creating and passing the configuration object</caption>\n     * // Create a configuration object with desired values\n     *\n     * var config = {\n     *     animation: {\n     *         enable: false\n     *     },\n     *     selectors: {\n     *         target: '.item'\n     *     }\n     * };\n     *\n     * // Pass the configuration object to the mixitup factory function\n     *\n     * var mixer = mixitup(containerEl, config);\n     *\n     * @example <caption>Example 2: Passing the configuration object inline</caption>\n     * // Typically, the configuration object is passed inline for brevity.\n     *\n     * var mixer = mixitup(containerEl, {\n     *     controls: {\n     *         live: true,\n     *         toggleLogic: 'and'\n     *     }\n     * });\n     *\n     *\n     * @constructor\n     * @memberof    mixitup\n     * @namespace\n     * @public\n     * @since       2.0.0\n     */\n\n    mixitup.Config = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.animation          = new mixitup.ConfigAnimation();\n        this.behavior           = new mixitup.ConfigBehavior();\n        this.callbacks          = new mixitup.ConfigCallbacks();\n        this.controls           = new mixitup.ConfigControls();\n        this.classNames         = new mixitup.ConfigClassNames();\n        this.data               = new mixitup.ConfigData();\n        this.debug              = new mixitup.ConfigDebug();\n        this.layout             = new mixitup.ConfigLayout();\n        this.load               = new mixitup.ConfigLoad();\n        this.selectors          = new mixitup.ConfigSelectors();\n        this.render             = new mixitup.ConfigRender();\n        this.templates          = new mixitup.ConfigTemplates();\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.Config);\n\n    mixitup.Config.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.Config.prototype.constructor = mixitup.Config;\n\n    /**\n     * @constructor\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.MixerDom = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.document               = null;\n        this.body                   = null;\n        this.container              = null;\n        this.parent                 = null;\n        this.targets                = [];\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.MixerDom);\n\n    mixitup.MixerDom.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.MixerDom.prototype.constructor = mixitup.MixerDom;\n\n    /**\n     * @constructor\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.UiClassNames = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.base       = '';\n        this.active     = '';\n        this.disabled   = '';\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.UiClassNames);\n\n    mixitup.UiClassNames.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.UiClassNames.prototype.constructor = mixitup.UiClassNames;\n\n    /**\n     * An object into which all arbitrary arguments sent to '.dataset()' are mapped.\n     *\n     * @constructor\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.CommandDataset = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.dataset = null;\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.CommandDataset);\n\n    mixitup.CommandDataset.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.CommandDataset.prototype.constructor = mixitup.CommandDataset;\n\n    /**\n     * An object into which all arbitrary arguments sent to '.multimix()' are mapped.\n     *\n     * @constructor\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.CommandMultimix = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.filter       = null;\n        this.sort         = null;\n        this.insert       = null;\n        this.remove       = null;\n        this.changeLayout = null;\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.CommandMultimix);\n\n    mixitup.CommandMultimix.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.CommandMultimix.prototype.constructor = mixitup.CommandMultimix;\n\n    /**\n     * An object into which all arbitrary arguments sent to '.filter()' are mapped.\n     *\n     * @constructor\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.CommandFilter = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.selector   = '';\n        this.collection = null;\n        this.action     = 'show'; // enum: ['show', 'hide']\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.CommandFilter);\n\n    mixitup.CommandFilter.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.CommandFilter.prototype.constructor = mixitup.CommandFilter;\n\n    /**\n     * An object into which all arbitrary arguments sent to '.sort()' are mapped.\n     *\n     * @constructor\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.CommandSort = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.sortString = '';\n        this.attribute  = '';\n        this.order      = 'asc';\n        this.collection = null;\n        this.next       = null;\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.CommandSort);\n\n    mixitup.CommandSort.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.CommandSort.prototype.constructor = mixitup.CommandSort;\n\n    /**\n     * An object into which all arbitrary arguments sent to '.insert()' are mapped.\n     *\n     * @constructor\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.CommandInsert = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.index      = 0;\n        this.collection = [];\n        this.position   = 'before'; // enum: ['before', 'after']\n        this.sibling    = null;\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.CommandInsert);\n\n    mixitup.CommandInsert.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.CommandInsert.prototype.constructor = mixitup.CommandInsert;\n\n    /**\n     * An object into which all arbitrary arguments sent to '.remove()' are mapped.\n     *\n     * @constructor\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.CommandRemove = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.targets    = [];\n        this.collection = [];\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.CommandRemove);\n\n    mixitup.CommandRemove.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.CommandRemove.prototype.constructor = mixitup.CommandRemove;\n\n    /**\n     * An object into which all arbitrary arguments sent to '.changeLayout()' are mapped.\n     *\n     * @constructor\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.CommandChangeLayout = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.containerClassName = '';\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.CommandChangeLayout);\n\n    mixitup.CommandChangeLayout.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.CommandChangeLayout.prototype.constructor = mixitup.CommandChangeLayout;\n\n    /**\n     * @constructor\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     * @param       {string}        type\n     * @param       {string}        selector\n     * @param       {boolean}       [live]\n     * @param       {string}        [parent]\n     *     An optional string representing the name of the mixer.dom property containing a reference to a parent element.\n     */\n\n    mixitup.ControlDefinition = function(type, selector, live, parent) {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.type    = type;\n        this.selector  = selector;\n        this.live      = live || false;\n        this.parent    = parent || '';\n\n        this.callActions('afterConstruct');\n\n        h.freeze(this);\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.ControlDefinition);\n\n    mixitup.ControlDefinition.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.ControlDefinition.prototype.constructor = mixitup.ControlDefinition;\n\n    mixitup.controlDefinitions = [];\n\n    mixitup.controlDefinitions.push(new mixitup.ControlDefinition('multimix', '[data-filter][data-sort]'));\n    mixitup.controlDefinitions.push(new mixitup.ControlDefinition('filter', '[data-filter]'));\n    mixitup.controlDefinitions.push(new mixitup.ControlDefinition('sort', '[data-sort]'));\n    mixitup.controlDefinitions.push(new mixitup.ControlDefinition('toggle', '[data-toggle]'));\n\n    /**\n     * @constructor\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.Control = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.el         = null;\n        this.selector   = '';\n        this.bound      = [];\n        this.pending    = -1;\n        this.type       = '';\n        this.status     = 'inactive'; // enum: ['inactive', 'active', 'disabled', 'live']\n        this.filter     = '';\n        this.sort       = '';\n        this.canDisable = false;\n        this.handler    = null;\n        this.classNames = new mixitup.UiClassNames();\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.Control);\n\n    mixitup.Control.prototype = Object.create(mixitup.Base.prototype);\n\n    h.extend(mixitup.Control.prototype,\n    /** @lends mixitup.Control */\n    {\n        constructor: mixitup.Control,\n\n        /**\n         * @private\n         * @param {HTMLElement} el\n         * @param {string}      type\n         * @param {string}      selector\n         */\n\n        init: function(el, type, selector) {\n            var self = this;\n\n            this.callActions('beforeInit', arguments);\n\n            self.el         = el;\n            self.type       = type;\n            self.selector   = selector;\n\n            if (self.selector) {\n                self.status = 'live';\n            } else {\n                self.canDisable = typeof self.el.disable === 'boolean';\n\n                switch (self.type) {\n                    case 'filter':\n                        self.filter = self.el.getAttribute('data-filter');\n\n                        break;\n                    case 'toggle':\n                        self.filter = self.el.getAttribute('data-toggle');\n\n                        break;\n                    case 'sort':\n                        self.sort   = self.el.getAttribute('data-sort');\n\n                        break;\n                    case 'multimix':\n                        self.filter = self.el.getAttribute('data-filter');\n                        self.sort   = self.el.getAttribute('data-sort');\n\n                        break;\n                }\n            }\n\n            self.bindClick();\n\n            mixitup.controls.push(self);\n\n            this.callActions('afterInit', arguments);\n        },\n\n        /**\n         * @private\n         * @param  {mixitup.Mixer} mixer\n         * @return {boolean}\n         */\n\n        isBound: function(mixer) {\n            var self    = this,\n                isBound = false;\n\n            this.callActions('beforeIsBound', arguments);\n\n            isBound = self.bound.indexOf(mixer) > -1;\n\n            return self.callFilters('afterIsBound', isBound, arguments);\n        },\n\n        /**\n         * @private\n         * @param  {mixitup.Mixer} mixer\n         * @return {void}\n         */\n\n        addBinding: function(mixer) {\n            var self = this;\n\n            this.callActions('beforeAddBinding', arguments);\n\n            if (!self.isBound()) {\n                self.bound.push(mixer);\n            }\n\n            this.callActions('afterAddBinding', arguments);\n        },\n\n        /**\n         * @private\n         * @param  {mixitup.Mixer} mixer\n         * @return {void}\n         */\n\n        removeBinding: function(mixer) {\n            var self        = this,\n                removeIndex = -1;\n\n            this.callActions('beforeRemoveBinding', arguments);\n\n            if ((removeIndex = self.bound.indexOf(mixer)) > -1) {\n                self.bound.splice(removeIndex, 1);\n            }\n\n            if (self.bound.length < 1) {\n                // No bindings exist, unbind event click handlers\n\n                self.unbindClick();\n\n                // Remove from `mixitup.controls` list\n\n                removeIndex = mixitup.controls.indexOf(self);\n\n                mixitup.controls.splice(removeIndex, 1);\n\n                if (self.status === 'active') {\n                    self.renderStatus(self.el, 'inactive');\n                }\n            }\n\n            this.callActions('afterRemoveBinding', arguments);\n        },\n\n        /**\n         * @private\n         * @return {void}\n         */\n\n        bindClick: function() {\n            var self = this;\n\n            this.callActions('beforeBindClick', arguments);\n\n            self.handler = function(e) {\n                self.handleClick(e);\n            };\n\n            h.on(self.el, 'click', self.handler);\n\n            this.callActions('afterBindClick', arguments);\n        },\n\n        /**\n         * @private\n         * @return {void}\n         */\n\n        unbindClick: function() {\n            var self = this;\n\n            this.callActions('beforeUnbindClick', arguments);\n\n            h.off(self.el, 'click', self.handler);\n\n            self.handler = null;\n\n            this.callActions('afterUnbindClick', arguments);\n        },\n\n        /**\n         * @private\n         * @param   {MouseEvent} e\n         * @return  {void}\n         */\n\n        handleClick: function(e) {\n            var self        = this,\n                button      = null,\n                mixer       = null,\n                isActive    = false,\n                returnValue = void(0),\n                command     = {},\n                clone       = null,\n                commands    = [],\n                i           = -1;\n\n            this.callActions('beforeHandleClick', arguments);\n\n            this.pending = 0;\n\n            mixer = self.bound[0];\n\n            if (!self.selector) {\n                button = self.el;\n            } else {\n                button = h.closestParent(e.target, mixer.config.selectors.control + self.selector, true, mixer.dom.document);\n            }\n\n            if (!button) {\n                self.callActions('afterHandleClick', arguments);\n\n                return;\n            }\n\n            switch (self.type) {\n                case 'filter':\n                    command.filter = self.filter || button.getAttribute('data-filter');\n\n                    break;\n                case 'sort':\n                    command.sort = self.sort || button.getAttribute('data-sort');\n\n                    break;\n                case 'multimix':\n                    command.filter  = self.filter || button.getAttribute('data-filter');\n                    command.sort    = self.sort || button.getAttribute('data-sort');\n\n                    break;\n                case 'toggle':\n                    command.filter  = self.filter || button.getAttribute('data-toggle');\n\n                    if (self.status === 'live') {\n                        isActive = h.hasClass(button, self.classNames.active);\n                    } else {\n                        isActive = self.status === 'active';\n                    }\n\n                    break;\n            }\n\n            for (i = 0; i < self.bound.length; i++) {\n                // Create a clone of the command for each bound mixer instance\n\n                clone = new mixitup.CommandMultimix();\n\n                h.extend(clone, command);\n\n                commands.push(clone);\n            }\n\n            commands = self.callFilters('commandsHandleClick', commands, arguments);\n\n            self.pending = self.bound.length;\n\n            for (i = 0; mixer = self.bound[i]; i++) {\n                command = commands[i];\n\n                if (!command) {\n                    // An extension may set a command null to indicate that the click should not be handled\n\n                    continue;\n                }\n\n                if (!mixer.lastClicked) {\n                    mixer.lastClicked = button;\n                }\n\n                mixitup.events.fire('mixClick', mixer.dom.container, {\n                    state: mixer.state,\n                    instance: mixer,\n                    originalEvent: e,\n                    control: mixer.lastClicked\n                }, mixer.dom.document);\n\n                if (typeof mixer.config.callbacks.onMixClick === 'function') {\n                    returnValue = mixer.config.callbacks.onMixClick.call(mixer.lastClicked, mixer.state, e, mixer);\n\n                    if (returnValue === false) {\n                        // User has returned `false` from the callback, so do not handle click\n\n                        continue;\n                    }\n                }\n\n                if (self.type === 'toggle') {\n                    isActive ? mixer.toggleOff(command.filter) : mixer.toggleOn(command.filter);\n                } else {\n                    mixer.multimix(command);\n                }\n            }\n\n            this.callActions('afterHandleClick', arguments);\n        },\n\n        /**\n         * @param   {object}          command\n         * @param   {Array<string>}   toggleArray\n         * @return  {void}\n         */\n\n        update: function(command, toggleArray) {\n            var self    = this,\n                actions = new mixitup.CommandMultimix();\n\n            self.callActions('beforeUpdate', arguments);\n\n            self.pending--;\n\n            self.pending = Math.max(0, self.pending);\n\n            if (self.pending > 0) return;\n\n            if (self.status === 'live') {\n                // Live control (status unknown)\n\n                self.updateLive(command, toggleArray);\n            } else {\n                // Static control\n\n                actions.sort    = self.sort;\n                actions.filter  = self.filter;\n\n                self.callFilters('actionsUpdate', actions, arguments);\n\n                self.parseStatusChange(self.el, command, actions, toggleArray);\n            }\n\n            self.callActions('afterUpdate', arguments);\n        },\n\n        /**\n         * @param   {mixitup.CommandMultimix} command\n         * @param   {Array<string>}           toggleArray\n         * @return  {void}\n         */\n\n        updateLive: function(command, toggleArray) {\n            var self            = this,\n                controlButtons  = null,\n                actions         = null,\n                button          = null,\n                i               = -1;\n\n            self.callActions('beforeUpdateLive', arguments);\n\n            if (!self.el) return;\n\n            controlButtons = self.el.querySelectorAll(self.selector);\n\n            for (i = 0; button = controlButtons[i]; i++) {\n                actions = new mixitup.CommandMultimix();\n\n                switch (self.type) {\n                    case 'filter':\n                        actions.filter = button.getAttribute('data-filter');\n\n                        break;\n                    case 'sort':\n                        actions.sort = button.getAttribute('data-sort');\n\n                        break;\n                    case 'multimix':\n                        actions.filter  = button.getAttribute('data-filter');\n                        actions.sort    = button.getAttribute('data-sort');\n\n                        break;\n                    case 'toggle':\n                        actions.filter  = button.getAttribute('data-toggle');\n\n                        break;\n                }\n\n                actions = self.callFilters('actionsUpdateLive', actions, arguments);\n\n                self.parseStatusChange(button, command, actions, toggleArray);\n            }\n\n            self.callActions('afterUpdateLive', arguments);\n        },\n\n        /**\n         * @param   {HTMLElement}             button\n         * @param   {mixitup.CommandMultimix} command\n         * @param   {mixitup.CommandMultimix} actions\n         * @param   {Array<string>}           toggleArray\n         * @return  {void}\n         */\n\n        parseStatusChange: function(button, command, actions, toggleArray) {\n            var self    = this,\n                alias   = '',\n                toggle  = '',\n                i       = -1;\n\n            self.callActions('beforeParseStatusChange', arguments);\n\n            switch (self.type) {\n                case 'filter':\n                    if (command.filter === actions.filter) {\n                        self.renderStatus(button, 'active');\n                    } else {\n                        self.renderStatus(button, 'inactive');\n                    }\n\n                    break;\n                case 'multimix':\n                    if (command.sort === actions.sort && command.filter === actions.filter) {\n                        self.renderStatus(button, 'active');\n                    } else {\n                        self.renderStatus(button, 'inactive');\n                    }\n\n                    break;\n                case 'sort':\n                    if (command.sort.match(/:asc/g)) {\n                        alias = command.sort.replace(/:asc/g, '');\n                    }\n\n                    if (command.sort === actions.sort || alias === actions.sort) {\n                        self.renderStatus(button, 'active');\n                    } else {\n                        self.renderStatus(button, 'inactive');\n                    }\n\n                    break;\n                case 'toggle':\n                    if (toggleArray.length < 1) self.renderStatus(button, 'inactive');\n\n                    if (command.filter === actions.filter) {\n                        self.renderStatus(button, 'active');\n                    }\n\n                    for (i = 0; i < toggleArray.length; i++) {\n                        toggle = toggleArray[i];\n\n                        if (toggle === actions.filter) {\n                            // Button matches one active toggle\n\n                            self.renderStatus(button, 'active');\n\n                            break;\n                        }\n\n                        self.renderStatus(button, 'inactive');\n                    }\n\n                    break;\n            }\n\n            self.callActions('afterParseStatusChange', arguments);\n        },\n\n        /**\n         * @param   {HTMLElement}   button\n         * @param   {string}        status\n         * @return  {void}\n         */\n\n        renderStatus: function(button, status) {\n            var self = this;\n\n            self.callActions('beforeRenderStatus', arguments);\n\n            switch (status) {\n                case 'active':\n                    h.addClass(button, self.classNames.active);\n                    h.removeClass(button, self.classNames.disabled);\n\n                    if (self.canDisable) self.el.disabled = false;\n\n                    break;\n                case 'inactive':\n                    h.removeClass(button, self.classNames.active);\n                    h.removeClass(button, self.classNames.disabled);\n\n                    if (self.canDisable) self.el.disabled = false;\n\n                    break;\n                case 'disabled':\n                    if (self.canDisable) self.el.disabled = true;\n\n                    h.addClass(button, self.classNames.disabled);\n                    h.removeClass(button, self.classNames.active);\n\n                    break;\n            }\n\n            if (self.status !== 'live') {\n                // Update the control's status propery if not live\n\n                self.status = status;\n            }\n\n            self.callActions('afterRenderStatus', arguments);\n        }\n    });\n\n    mixitup.controls = [];\n\n    /**\n     * @constructor\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.StyleData = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.x              = 0;\n        this.y              = 0;\n        this.top            = 0;\n        this.right          = 0;\n        this.bottom         = 0;\n        this.left           = 0;\n        this.width          = 0;\n        this.height         = 0;\n        this.marginRight    = 0;\n        this.marginBottom   = 0;\n        this.opacity        = 0;\n        this.scale          = new mixitup.TransformData();\n        this.translateX     = new mixitup.TransformData();\n        this.translateY     = new mixitup.TransformData();\n        this.translateZ     = new mixitup.TransformData();\n        this.rotateX        = new mixitup.TransformData();\n        this.rotateY        = new mixitup.TransformData();\n        this.rotateZ        = new mixitup.TransformData();\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.StyleData);\n\n    mixitup.StyleData.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.StyleData.prototype.constructor = mixitup.StyleData;\n\n    /**\n     * @constructor\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.TransformData = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.value  = 0;\n        this.unit   = '';\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.TransformData);\n\n    mixitup.TransformData.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.TransformData.prototype.constructor = mixitup.TransformData;\n\n    /**\n     * @constructor\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.TransformDefaults = function() {\n        mixitup.StyleData.apply(this);\n\n        this.callActions('beforeConstruct');\n\n        this.scale.value        = 0.01;\n        this.scale.unit         = '';\n\n        this.translateX.value   = 20;\n        this.translateX.unit    = 'px';\n\n        this.translateY.value   = 20;\n        this.translateY.unit    = 'px';\n\n        this.translateZ.value   = 20;\n        this.translateZ.unit    = 'px';\n\n        this.rotateX.value      = 90;\n        this.rotateX.unit       = 'deg';\n\n        this.rotateY.value      = 90;\n        this.rotateY.unit       = 'deg';\n\n        this.rotateX.value      = 90;\n        this.rotateX.unit       = 'deg';\n\n        this.rotateZ.value      = 180;\n        this.rotateZ.unit       = 'deg';\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.TransformDefaults);\n\n    mixitup.TransformDefaults.prototype = Object.create(mixitup.StyleData.prototype);\n\n    mixitup.TransformDefaults.prototype.constructor = mixitup.TransformDefaults;\n\n    /**\n     * @private\n     * @static\n     * @since   3.0.0\n     * @type    {mixitup.TransformDefaults}\n     */\n\n    mixitup.transformDefaults = new mixitup.TransformDefaults();\n\n    /**\n     * @constructor\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.EventDetail = function() {\n        this.state          = null;\n        this.futureState    = null;\n        this.instance       = null;\n        this.originalEvent  = null;\n    };\n\n    /**\n     * The `mixitup.Events` class contains all custom events dispatched by MixItUp at various\n     * points within the lifecycle of a mixer operation.\n     *\n     * Each event is analogous to the callback function of the same name defined in\n     * the `callbacks` configuration object, and is triggered immediately before it.\n     *\n     * Events are always triggered from the container element on which MixItUp is instantiated\n     * upon.\n     *\n     * As with any event, registered event handlers receive the event object as a parameter\n     * which includes a `detail` property containting references to the current `state`,\n     * the `mixer` instance, and other event-specific properties described below.\n     *\n     * @constructor\n     * @namespace\n     * @memberof    mixitup\n     * @public\n     * @since       3.0.0\n     */\n\n    mixitup.Events = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        /**\n         * A custom event triggered immediately after any MixItUp operation is requested\n         * and before animations have begun.\n         *\n         * The `mixStart` event also exposes a `futureState` property via the\n         * `event.detail` object, which represents the final state of the mixer once\n         * the requested operation has completed.\n         *\n         * @name        mixStart\n         * @memberof    mixitup.Events\n         * @static\n         * @type        {CustomEvent}\n         */\n\n        this.mixStart = null;\n\n        /**\n         * A custom event triggered when a MixItUp operation is requested while another\n         * operation is in progress, and the animation queue is full, or queueing\n         * is disabled.\n         *\n         * @name        mixBusy\n         * @memberof    mixitup.Events\n         * @static\n         * @type        {CustomEvent}\n         */\n\n        this.mixBusy = null;\n\n        /**\n         * A custom event triggered after any MixItUp operation has completed, and the\n         * state has been updated.\n         *\n         * @name        mixEnd\n         * @memberof    mixitup.Events\n         * @static\n         * @type        {CustomEvent}\n         */\n\n        this.mixEnd = null;\n\n        /**\n         * A custom event triggered whenever a filter operation \"fails\", i.e. no targets\n         * could be found matching the requested filter.\n         *\n         * @name        mixFail\n         * @memberof    mixitup.Events\n         * @static\n         * @type        {CustomEvent}\n         */\n\n        this.mixFail = null;\n\n        /**\n         * A custom event triggered whenever a MixItUp control is clicked, and before its\n         * respective operation is requested.\n         *\n         * This event also exposes an `originalEvent` property via the `event.detail`\n         * object, which holds a reference to the original click event.\n         *\n         * @name        mixClick\n         * @memberof    mixitup.Events\n         * @static\n         * @type        {CustomEvent}\n         */\n\n        this.mixClick = null;\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.Events);\n\n    mixitup.Events.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.Events.prototype.constructor = mixitup.Events;\n\n    /**\n     * @private\n     * @param   {string}      eventType\n     * @param   {Element}     el\n     * @param   {object}      detail\n     * @param   {Document}    [doc]\n     */\n\n    mixitup.Events.prototype.fire = function(eventType, el, detail, doc) {\n        var self        = this,\n            event       = null,\n            eventDetail = new mixitup.EventDetail();\n\n        self.callActions('beforeFire', arguments);\n\n        if (typeof self[eventType] === 'undefined') {\n            throw new Error('Event type \"' + eventType + '\" not found.');\n        }\n\n        eventDetail.state = new mixitup.State();\n\n        h.extend(eventDetail.state, detail.state);\n\n        if (detail.futureState) {\n            eventDetail.futureState = new mixitup.State();\n\n            h.extend(eventDetail.futureState, detail.futureState);\n        }\n\n        eventDetail.instance = detail.instance;\n\n        if (detail.originalEvent) {\n            eventDetail.originalEvent = detail.originalEvent;\n        }\n\n        event = h.getCustomEvent(eventType, eventDetail, doc);\n\n        self.callFilters('eventFire', event, arguments);\n\n        el.dispatchEvent(event);\n    };\n\n    // Asign a singleton instance to `mixitup.events`:\n\n    mixitup.events = new mixitup.Events();\n\n    /**\n     * @constructor\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.QueueItem = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.args           = [];\n        this.instruction    = null;\n        this.triggerElement = null;\n        this.deferred       = null;\n        this.isToggling     = false;\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.QueueItem);\n\n    mixitup.QueueItem.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.QueueItem.prototype.constructor = mixitup.QueueItem;\n\n    /**\n     * The `mixitup.Mixer` class is used to hold discreet, user-configured\n     * instances of MixItUp on a provided container element.\n     *\n     * Mixer instances are returned whenever the `mixitup()` factory function is called,\n     * which expose a range of methods enabling API-based filtering, sorting,\n     * insertion, removal and more.\n     *\n     * @constructor\n     * @namespace\n     * @memberof    mixitup\n     * @public\n     * @since       3.0.0\n     */\n\n    mixitup.Mixer = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.config            = new mixitup.Config();\n\n        this.id                = '';\n\n        this.isBusy            = false;\n        this.isToggling        = false;\n        this.incPadding        = true;\n\n        this.controls          = [];\n        this.targets           = [];\n        this.origOrder         = [];\n        this.cache             = {};\n\n        this.toggleArray       = [];\n\n        this.targetsMoved      = 0;\n        this.targetsImmovable  = 0;\n        this.targetsBound      = 0;\n        this.targetsDone       = 0;\n\n        this.staggerDuration   = 0;\n        this.effectsIn         = null;\n        this.effectsOut        = null;\n        this.transformIn       = [];\n        this.transformOut      = [];\n        this.queue             = [];\n\n        this.state             = null;\n        this.lastOperation     = null;\n        this.lastClicked       = null;\n        this.userCallback      = null;\n        this.userDeferred      = null;\n\n        this.dom               = new mixitup.MixerDom();\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.Mixer);\n\n    mixitup.Mixer.prototype = Object.create(mixitup.Base.prototype);\n\n    h.extend(mixitup.Mixer.prototype,\n    /** @lends mixitup.Mixer */\n    {\n        constructor: mixitup.Mixer,\n\n        /**\n         * @private\n         * @instance\n         * @since 3.0.0\n         * @param {HTMLElement} container\n         * @param {HTMLElement} document\n         * @param {string}      id\n         * @param {object}      [config]\n         */\n\n        attach: function(container, document, id, config) {\n            var self    = this,\n                target  = null,\n                i       = -1;\n\n            self.callActions('beforeAttach', arguments);\n\n            self.id = id;\n\n            if (config) {\n                h.extend(self.config, config, true, true);\n            }\n\n            self.sanitizeConfig();\n\n            self.cacheDom(container, document);\n\n            if (self.config.layout.containerClassName) {\n                h.addClass(self.dom.container, self.config.layout.containerClassName);\n            }\n\n            if (!mixitup.features.has.transitions) {\n                self.config.animation.enable = false;\n            }\n\n            if (typeof window.console === 'undefined') {\n                self.config.debug.showWarnings = false;\n            }\n\n            if (self.config.data.uidKey) {\n                // If the dataset API is in use, force disable controls\n\n                self.config.controls.enable = false;\n            }\n\n            self.indexTargets();\n\n            self.state = self.getInitialState();\n\n            for (i = 0; target = self.lastOperation.toHide[i]; i++) {\n                target.hide();\n            }\n\n            if (self.config.controls.enable) {\n                self.initControls();\n\n                self.buildToggleArray(null, self.state);\n\n                self.updateControls({\n                    filter: self.state.activeFilter,\n                    sort: self.state.activeSort\n                });\n            }\n\n            self.parseEffects();\n\n            self.callActions('afterAttach', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since 3.0.0\n         * @return {void}\n         */\n\n        sanitizeConfig: function() {\n            var self = this;\n\n            self.callActions('beforeSanitizeConfig', arguments);\n\n            // Sanitize enum/string config options\n\n            self.config.controls.scope          = self.config.controls.scope.toLowerCase().trim();\n            self.config.controls.toggleLogic    = self.config.controls.toggleLogic.toLowerCase().trim();\n            self.config.controls.toggleDefault  = self.config.controls.toggleDefault.toLowerCase().trim();\n\n            self.config.animation.effects       = self.config.animation.effects.trim();\n\n            self.callActions('afterSanitizeConfig', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @return  {mixitup.State}\n         */\n\n        getInitialState: function() {\n            var self        = this,\n                state       = new mixitup.State(),\n                operation   = new mixitup.Operation();\n\n            self.callActions('beforeGetInitialState', arguments);\n\n            // Map initial values into a mock state object in order to construct an operation\n\n            state.activeContainerClassName = self.config.layout.containerClassName;\n\n            if (self.config.load.dataset) {\n                // Dataset API\n\n                if (!self.config.data.uidKey || typeof self.config.data.uidKey !== 'string') {\n                    throw new TypeError(mixitup.messages.errorConfigDataUidKeyNotSet());\n                }\n\n                operation.startDataset = operation.newDataset = state.activeDataset = self.config.load.dataset.slice();\n                operation.startContainerClassName = operation.newContainerClassName = state.activeContainerClassName;\n                operation.show = self.targets.slice();\n\n                state = self.callFilters('stateGetInitialState', state, arguments);\n            } else {\n                // DOM API\n\n                state.activeFilter              = self.parseFilterArgs([self.config.load.filter]).command;\n                state.activeSort                = self.parseSortArgs([self.config.load.sort]).command;\n                state.totalTargets              = self.targets.length;\n\n                state = self.callFilters('stateGetInitialState', state, arguments);\n\n                if (\n                    state.activeSort.collection || state.activeSort.attribute ||\n                    state.activeSort.order === 'random' || state.activeSort.order === 'desc'\n                ) {\n                    // Sorting on load\n\n                    operation.newSort = state.activeSort;\n\n                    self.sortOperation(operation);\n\n                    self.printSort(false, operation);\n\n                    self.targets = operation.newOrder;\n                } else {\n                    operation.startOrder = operation.newOrder = self.targets;\n                }\n\n                operation.startFilter               = operation.newFilter               = state.activeFilter;\n                operation.startSort                 = operation.newSort                 = state.activeSort;\n                operation.startContainerClassName   = operation.newContainerClassName   = state.activeContainerClassName;\n\n                if (operation.newFilter.selector === 'all') {\n                    operation.newFilter.selector = self.config.selectors.target;\n                } else if (operation.newFilter.selector === 'none') {\n                    operation.newFilter.selector = '';\n                }\n            }\n\n            operation = self.callFilters('operationGetInitialState', operation, [state]);\n\n            self.lastOperation = operation;\n\n            if (operation.newFilter) {\n                self.filterOperation(operation);\n            }\n\n            state = self.buildState(operation);\n\n            return state;\n        },\n\n        /**\n         * Caches references of DOM elements neccessary for the mixer's functionality.\n         *\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {HTMLElement}       el\n         * @param   {HTMLHtmlElement}   document\n         * @return  {void}\n         */\n\n        cacheDom: function(el, document) {\n            var self    = this;\n\n            self.callActions('beforeCacheDom', arguments);\n\n            self.dom.document  = document;\n            self.dom.body      = self.dom.document.querySelector('body');\n            self.dom.container = el;\n            self.dom.parent    = el;\n\n            self.callActions('afterCacheDom', arguments);\n        },\n\n        /**\n         * Indexes all child elements of the mixer matching the `selectors.target`\n         * selector, instantiating a mixitup.Target for each one.\n         *\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @return  {void}\n         */\n\n        indexTargets: function() {\n            var self            = this,\n                target          = null,\n                el              = null,\n                dataset         = null,\n                i               = -1;\n\n            self.callActions('beforeIndexTargets', arguments);\n\n            self.dom.targets = self.config.layout.allowNestedTargets ?\n                self.dom.container.querySelectorAll(self.config.selectors.target) :\n                h.children(self.dom.container, self.config.selectors.target, self.dom.document);\n\n            self.dom.targets = h.arrayFromList(self.dom.targets);\n\n            self.targets = [];\n\n            if ((dataset = self.config.load.dataset) && dataset.length !== self.dom.targets.length) {\n                throw new Error(mixitup.messages.errorDatasetPrerenderedMismatch());\n            }\n\n            if (self.dom.targets.length) {\n                for (i = 0; el = self.dom.targets[i]; i++) {\n                    target = new mixitup.Target();\n\n                    target.init(el, self, dataset ? dataset[i] : void(0));\n\n                    target.isInDom = true;\n\n                    self.targets.push(target);\n                }\n\n                self.dom.parent = self.dom.targets[0].parentElement === self.dom.container ?\n                    self.dom.container :\n                    self.dom.targets[0].parentElement;\n            }\n\n            self.origOrder = self.targets;\n\n            self.callActions('afterIndexTargets', arguments);\n        },\n\n        initControls: function() {\n            var self                = this,\n                definition          = '',\n                controlElements     = null,\n                el                  = null,\n                parent              = null,\n                delagators          = null,\n                control             = null,\n                i                   = -1,\n                j                   = -1;\n\n            self.callActions('beforeInitControls', arguments);\n\n            switch (self.config.controls.scope) {\n                case 'local':\n                    parent = self.dom.container;\n\n                    break;\n                case 'global':\n                    parent = self.dom.document;\n\n                    break;\n                default:\n                    throw new Error(mixitup.messages.errorConfigInvalidControlsScope());\n            }\n\n            for (i = 0; definition = mixitup.controlDefinitions[i]; i++) {\n                if (self.config.controls.live || definition.live) {\n                    if (definition.parent) {\n                        delagators = self.dom[definition.parent];\n\n                        if (!delagators || delagators.length < 0) continue;\n\n                        if (typeof delagators.length !== 'number') {\n                            delagators = [delagators];\n                        }\n                    } else {\n                        delagators = [parent];\n                    }\n\n                    for (j = 0; (el = delagators[j]); j++) {\n                        control = self.getControl(el,  definition.type, definition.selector);\n\n                        self.controls.push(control);\n                    }\n                } else {\n                    controlElements = parent.querySelectorAll(self.config.selectors.control + definition.selector);\n\n                    for (j = 0; (el = controlElements[j]); j++) {\n                        control = self.getControl(el, definition.type, '');\n\n                        if (!control) continue;\n\n                        self.controls.push(control);\n                    }\n                }\n            }\n\n            self.callActions('afterInitControls', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {HTMLElement} el\n         * @param   {string}      type\n         * @param   {string}      selector\n         * @return  {mixitup.Control|null}\n         */\n\n        getControl: function(el, type, selector) {\n            var self    = this,\n                control = null,\n                i       = -1;\n\n            self.callActions('beforeGetControl', arguments);\n\n            if (!selector) {\n                // Static controls only\n\n                for (i = 0; control = mixitup.controls[i]; i++) {\n                    if (control.el === el && control.isBound(self)) {\n                        // Control already bound to this mixer (as another type).\n\n                        // NB: This prevents duplicate controls from being registered where a selector\n                        // might collide, eg: \"[data-filter]\" and \"[data-filter][data-sort]\"\n\n                        return self.callFilters('controlGetControl', null, arguments);\n                    } else if (control.el === el && control.type === type && control.selector === selector) {\n                        // Another mixer is already using this control, add this mixer as a binding\n\n                        control.addBinding(self);\n\n                        return self.callFilters('controlGetControl', control, arguments);\n                    }\n                }\n            }\n\n            // Create new control\n\n            control = new mixitup.Control();\n\n            control.init(el, type, selector);\n\n            control.classNames.base     = h.getClassname(self.config.classNames, type);\n            control.classNames.active   = h.getClassname(self.config.classNames, type, self.config.classNames.modifierActive);\n            control.classNames.disabled = h.getClassname(self.config.classNames, type, self.config.classNames.modifierDisabled);\n\n            // Add a reference to this mixer as a binding\n\n            control.addBinding(self);\n\n            return self.callFilters('controlGetControl', control, arguments);\n        },\n\n        /**\n         * Creates a compound selector by joining the `toggleArray` value as per the\n         * defined toggle logic.\n         *\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @return  {string}\n         */\n\n        getToggleSelector: function() {\n            var self            = this,\n                delineator      = self.config.controls.toggleLogic === 'or' ? ', ' : '',\n                toggleSelector  = '';\n\n            self.callActions('beforeGetToggleSelector', arguments);\n\n            self.toggleArray = h.clean(self.toggleArray);\n\n            toggleSelector = self.toggleArray.join(delineator);\n\n            if (toggleSelector === '') {\n                toggleSelector = self.config.controls.toggleDefault;\n            }\n\n            return self.callFilters('selectorGetToggleSelector', toggleSelector, arguments);\n        },\n\n        /**\n         * Breaks compound selector strings in an array of discreet selectors,\n         * as per the active `controls.toggleLogic` configuration option. Accepts\n         * either a dynamic command object, or a state object.\n         *\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {object}        [command]\n         * @param   {mixitup.State} [state]\n         * @return  {void}\n         */\n\n        buildToggleArray: function(command, state) {\n            var self                    = this,\n                activeFilterSelector    = '';\n\n            self.callActions('beforeBuildToggleArray', arguments);\n\n            if (command && command.filter) {\n                activeFilterSelector = command.filter.selector.replace(/\\s/g, '');\n            } else if (state) {\n                activeFilterSelector = state.activeFilter.selector.replace(/\\s/g, '');\n            } else {\n                return;\n            }\n\n            if (activeFilterSelector === self.config.selectors.target || activeFilterSelector === 'all') {\n                activeFilterSelector = '';\n            }\n\n            if (self.config.controls.toggleLogic === 'or') {\n                self.toggleArray = activeFilterSelector.split(',');\n            } else {\n                self.toggleArray = self.splitCompoundSelector(activeFilterSelector);\n            }\n\n            self.toggleArray = h.clean(self.toggleArray);\n\n            self.callActions('afterBuildToggleArray', arguments);\n        },\n\n        /**\n         * Takes a compound selector (e.g. `.cat-1.cat-2`, `[data-cat=\"1\"][data-cat=\"2\"]`)\n         * and breaks into its individual selectors.\n         *\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {string} compoundSelector\n         * @return  {string[]}\n         */\n\n        splitCompoundSelector: function(compoundSelector) {\n            // Break at a `.` or `[`, capturing the delineator\n\n            var partials    = compoundSelector.split(/([\\.\\[])/g),\n                toggleArray = [],\n                selector    = '',\n                i           = -1;\n\n            if (partials[0] === '') {\n                partials.shift();\n            }\n\n            for (i = 0; i < partials.length; i++) {\n                if (i % 2 === 0) {\n                    selector = '';\n                }\n\n                selector += partials[i];\n\n                if (i % 2 !== 0) {\n                    toggleArray.push(selector);\n                }\n            }\n\n            return toggleArray;\n        },\n\n        /**\n         * Updates controls to their active/inactive state based on the command or\n         * current state of the mixer.\n         *\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {object} command\n         * @return  {void}\n         */\n\n        updateControls: function(command) {\n            var self    = this,\n                control = null,\n                output  = new mixitup.CommandMultimix(),\n                i       = -1;\n\n            self.callActions('beforeUpdateControls', arguments);\n\n            // Sanitise to defaults\n\n            if (command.filter) {\n                output.filter = command.filter.selector;\n            } else {\n                output.filter = self.state.activeFilter.selector;\n            }\n\n            if (command.sort) {\n                output.sort = self.buildSortString(command.sort);\n            } else {\n                output.sort = self.buildSortString(self.state.activeSort);\n            }\n\n            if (output.filter === self.config.selectors.target) {\n                output.filter = 'all';\n            }\n\n            if (output.filter === '') {\n                output.filter = 'none';\n            }\n\n            h.freeze(output);\n\n            for (i = 0; control = self.controls[i]; i++) {\n                control.update(output, self.toggleArray);\n            }\n\n            self.callActions('afterUpdateControls', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {mixitup.CommandSort}   command\n         * @return  {string}\n         */\n\n        buildSortString: function(command) {\n            var self    = this;\n            var output  = '';\n\n            output += command.sortString;\n\n            if (command.next) {\n                output += ' ' + self.buildSortString(command.next);\n            }\n\n            return output;\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {object}        command\n         * @param   {Operation}     operation\n         * @return  {Promise.<mixitup.State>}\n         */\n\n        insertTargets: function(command, operation) {\n            var self            = this,\n                nextSibling     = null,\n                insertionIndex  = -1,\n                frag            = null,\n                target          = null,\n                el              = null,\n                i               = -1;\n\n            self.callActions('beforeInsertTargets', arguments);\n\n            if (typeof command.index === 'undefined') command.index = 0;\n\n            nextSibling = self.getNextSibling(command.index, command.sibling, command.position);\n            frag        = self.dom.document.createDocumentFragment();\n\n            if (nextSibling) {\n                insertionIndex = h.index(nextSibling, self.config.selectors.target);\n            } else {\n                insertionIndex = self.targets.length;\n            }\n\n            if (command.collection) {\n                for (i = 0; el = command.collection[i]; i++) {\n                    if (self.dom.targets.indexOf(el) > -1) {\n                        throw new Error(mixitup.messages.errorInsertPreexistingElement());\n                    }\n\n                    // Ensure elements are hidden when they are added to the DOM, so they can\n                    // be animated in gracefully\n\n                    el.style.display = 'none';\n\n                    frag.appendChild(el);\n                    frag.appendChild(self.dom.document.createTextNode(' '));\n\n                    if (!h.isElement(el, self.dom.document) || !el.matches(self.config.selectors.target)) continue;\n\n                    target = new mixitup.Target();\n\n                    target.init(el, self);\n\n                    target.isInDom = true;\n\n                    self.targets.splice(insertionIndex, 0, target);\n\n                    insertionIndex++;\n                }\n\n                self.dom.parent.insertBefore(frag, nextSibling);\n            }\n\n            // Since targets have been added, the original order must be updated\n\n            operation.startOrder = self.origOrder = self.targets;\n\n            self.callActions('afterInsertTargets', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {Number}      [index]\n         * @param   {Element}     [sibling]\n         * @param   {string}      [position]\n         * @return  {Element}\n         */\n\n        getNextSibling: function(index, sibling, position) {\n            var self    = this,\n                element = null;\n\n            index = Math.max(index, 0);\n\n            if (sibling && position === 'before') {\n                // Explicit sibling\n\n                element = sibling;\n            } else if (sibling && position === 'after') {\n                // Explicit sibling\n\n                element = sibling.nextElementSibling || null;\n            } else if (self.targets.length > 0 && typeof index !== 'undefined') {\n                // Index and targets exist\n\n                element = (index < self.targets.length || !self.targets.length) ?\n                    self.targets[index].dom.el :\n                    self.targets[self.targets.length - 1].dom.el.nextElementSibling;\n            } else if (self.targets.length === 0 && self.dom.parent.children.length > 0) {\n                // No targets but other siblings\n\n                if (self.config.layout.siblingAfter) {\n                    element = self.config.layout.siblingAfter;\n                } else if (self.config.layout.siblingBefore) {\n                    element = self.config.layout.siblingBefore.nextElementSibling;\n                } else {\n                    self.dom.parent.children[0];\n                }\n            } else {\n                element === null;\n            }\n\n            return self.callFilters('elementGetNextSibling', element, arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {Operation}     operation\n         * @return  {void}\n         */\n\n        filterOperation: function(operation) {\n            var self        = this,\n                testResult  = false,\n                index       = -1,\n                action      = '',\n                target      = null,\n                i           = -1;\n\n            self.callActions('beforeFilterOperation', arguments);\n\n            action = operation.newFilter.action;\n\n            for (i = 0; target = operation.newOrder[i]; i++) {\n                if (operation.newFilter.collection) {\n                    // show via collection\n\n                    testResult = operation.newFilter.collection.indexOf(target.dom.el) > -1;\n                } else {\n                    // show via selector\n\n                    if (operation.newFilter.selector === '') {\n                        testResult = false;\n                    } else {\n                        testResult = target.dom.el.matches(operation.newFilter.selector);\n                    }\n                }\n\n                self.evaluateHideShow(testResult, target, action, operation);\n            }\n\n            if (operation.toRemove.length) {\n                for (i = 0; target = operation.show[i]; i++) {\n                    if (operation.toRemove.indexOf(target) > -1) {\n                        // If any shown targets should be removed, move them into the toHide array\n\n                        operation.show.splice(i, 1);\n\n                        if ((index = operation.toShow.indexOf(target)) > -1) {\n                            operation.toShow.splice(index, 1);\n                        }\n\n                        operation.toHide.push(target);\n                        operation.hide.push(target);\n\n                        i--;\n                    }\n                }\n            }\n\n            operation.matching = operation.show.slice();\n\n            if (operation.show.length === 0 && operation.newFilter.selector !== '' && self.targets.length !== 0) {\n                operation.hasFailed = true;\n            }\n\n            self.callActions('afterFilterOperation', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {boolean}   testResult\n         * @param   {Element}   target\n         * @param   {string}    action\n         * @param   {Operation} operation\n         * @return  {void}\n         */\n\n        evaluateHideShow: function(testResult, target, action, operation) {\n            var self = this,\n                filteredTestResult = false,\n                args = Array.prototype.slice.call(arguments, 1);\n\n            filteredTestResult = self.callFilters('testResultEvaluateHideShow', testResult, args);\n\n            self.callActions('beforeEvaluateHideShow', arguments);\n\n            if (\n                filteredTestResult === true && action === 'show' ||\n                filteredTestResult === false && action === 'hide'\n            ) {\n                operation.show.push(target);\n\n                !target.isShown && operation.toShow.push(target);\n            } else {\n                operation.hide.push(target);\n\n                target.isShown && operation.toHide.push(target);\n            }\n\n            self.callActions('afterEvaluateHideShow', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {Operation}     operation\n         * @return  {void}\n         */\n\n        sortOperation: function(operation) {\n            var self     = this,\n                newOrder = [],\n                target   = null,\n                el       = null,\n                i        = -1;\n\n            self.callActions('beforeSortOperation', arguments);\n\n            operation.startOrder = self.targets;\n\n            if (operation.newSort.collection) {\n                // Sort by collection\n\n                newOrder = [];\n\n                for (i = 0; (el = operation.newSort.collection[i]); i++) {\n                    if (self.dom.targets.indexOf(el) < 0) {\n                        throw new Error(mixitup.messages.errorSortNonExistentElement());\n                    }\n\n                    target = new mixitup.Target();\n\n                    target.init(el, self);\n\n                    target.isInDom = true;\n\n                    newOrder.push(target);\n                }\n\n                operation.newOrder = newOrder;\n            } else if (operation.newSort.order === 'random') {\n                // Sort random\n\n                operation.newOrder = h.arrayShuffle(operation.startOrder);\n            } else if (operation.newSort.attribute === '') {\n                // Sort by default\n\n                operation.newOrder = self.origOrder.slice();\n\n                if (operation.newSort.order === 'desc') {\n                    operation.newOrder.reverse();\n                }\n            } else {\n                // Sort by attribute\n\n                operation.newOrder = operation.startOrder.slice();\n\n                operation.newOrder.sort(function(a, b) {\n                    return self.compare(a, b, operation.newSort);\n                });\n            }\n\n            if (h.isEqualArray(operation.newOrder, operation.startOrder)) {\n                operation.willSort = false;\n            }\n\n            self.callActions('afterSortOperation', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {mixitup.Target}        a\n         * @param   {mixitup.Target}        b\n         * @param   {mixitup.CommandSort}   command\n         * @return  {Number}\n         */\n\n        compare: function(a, b, command) {\n            var self        = this,\n                order       = command.order,\n                attrA       = self.getAttributeValue(a, command.attribute),\n                attrB       = self.getAttributeValue(b, command.attribute);\n\n            if (isNaN(attrA * 1) || isNaN(attrB * 1)) {\n                attrA = attrA.toLowerCase();\n                attrB = attrB.toLowerCase();\n            } else {\n                attrA = attrA * 1;\n                attrB = attrB * 1;\n            }\n\n            if (attrA < attrB) {\n                return order === 'asc' ? -1 : 1;\n            }\n\n            if (attrA > attrB) {\n                return order === 'asc' ? 1 : -1;\n            }\n\n            if (attrA === attrB && command.next) {\n                return self.compare(a, b, command.next);\n            }\n\n            return 0;\n        },\n\n        /**\n         * Reads the values of any data attributes present the provided target element\n         * which match the current sort command.\n         *\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {mixitup.Target}    target\n         * @param   {string}            [attribute]\n         * @return  {(String|Number)}\n         */\n\n        getAttributeValue: function(target, attribute) {\n            var self    = this,\n                value   = '';\n\n            value = target.dom.el.getAttribute('data-' + attribute);\n\n            if (value === null) {\n                if (self.config.debug.showWarnings) {\n                    // Encourage users to assign values to all targets to avoid erroneous sorting\n                    // when types are mixed\n\n                    console.warn(mixitup.messages.warningInconsistentSortingAttributes({\n                        attribute: 'data-' + attribute\n                    }));\n                }\n            }\n\n            // If an attribute is not present, return 0 as a safety value\n\n            return self.callFilters('valueGetAttributeValue', value || 0, arguments);\n        },\n\n        /**\n         * Inserts elements into the DOM in the appropriate\n         * order using a document fragment for minimal\n         * DOM thrashing\n         *\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {boolean}   isResetting\n         * @param   {Operation} operation\n         * @return  {void}\n         */\n\n        printSort: function(isResetting, operation) {\n            var self        = this,\n                startOrder  = isResetting ? operation.newOrder : operation.startOrder,\n                newOrder    = isResetting ? operation.startOrder : operation.newOrder,\n                nextSibling = startOrder.length ? startOrder[startOrder.length - 1].dom.el.nextElementSibling : null,\n                frag        = window.document.createDocumentFragment(),\n                whitespace  = null,\n                target      = null,\n                el          = null,\n                i           = -1;\n\n            self.callActions('beforePrintSort', arguments);\n\n            // Empty the container\n\n            for (i = 0; target = startOrder[i]; i++) {\n                el = target.dom.el;\n\n                if (el.style.position === 'absolute') continue;\n\n                h.removeWhitespace(el.previousSibling);\n\n                el.parentElement.removeChild(el);\n            }\n\n            whitespace = nextSibling ? nextSibling.previousSibling : self.dom.parent.lastChild;\n\n            if (whitespace && whitespace.nodeName === '#text') {\n                h.removeWhitespace(whitespace);\n            }\n\n            for (i = 0; target = newOrder[i]; i++) {\n                // Add targets into a document fragment\n\n                el = target.dom.el;\n\n                if (h.isElement(frag.lastChild)) {\n                    frag.appendChild(window.document.createTextNode(' '));\n                }\n\n                frag.appendChild(el);\n            }\n\n            // Insert the document fragment into the container\n            // before any other non-target elements\n\n            if (self.dom.parent.firstChild && self.dom.parent.firstChild !== nextSibling) {\n                frag.insertBefore(window.document.createTextNode(' '), frag.childNodes[0]);\n            }\n\n            if (nextSibling) {\n                frag.appendChild(window.document.createTextNode(' '));\n\n                self.dom.parent.insertBefore(frag, nextSibling);\n            } else {\n                self.dom.parent.appendChild(frag);\n            }\n\n            self.callActions('afterPrintSort', arguments);\n        },\n\n        /**\n         * Parses user-defined sort strings (i.e. `default:asc`) into sort commands objects.\n         *\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {string}                sortString\n         * @param   {mixitup.CommandSort}   command\n         * @return  {mixitup.CommandSort}\n         */\n\n        parseSortString: function(sortString, command) {\n            var self        = this,\n                rules       = sortString.split(' '),\n                current     = command,\n                rule        = [],\n                i           = -1;\n\n            // command.sortString = sortString;\n\n            for (i = 0; i < rules.length; i++) {\n                rule = rules[i].split(':');\n\n                current.sortString  = rules[i];\n                current.attribute   = h.dashCase(rule[0]);\n                current.order       = rule[1] || 'asc';\n\n                switch (current.attribute) {\n                    case 'default':\n                        // treat \"default\" as sorting by no attribute\n\n                        current.attribute = '';\n\n                        break;\n                    case 'random':\n                        // treat \"random\" as an order not an attribute\n\n                        current.attribute   = '';\n                        current.order       = 'random';\n\n                        break;\n                }\n\n                if (!current.attribute || current.order === 'random') break;\n\n                if (i < rules.length - 1) {\n                    // Embed reference to the next command\n\n                    current.next = new mixitup.CommandSort();\n\n                    h.freeze(current);\n\n                    current = current.next;\n                }\n            }\n\n            return self.callFilters('commandsParseSort', command, arguments);\n        },\n\n        /**\n         * Parses all effects out of the user-defined `animation.effects` string into\n         * their respective properties and units.\n         *\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @return  {void}\n         */\n\n        parseEffects: function() {\n            var self            = this,\n                transformName   = '',\n                effectsIn       = self.config.animation.effectsIn || self.config.animation.effects,\n                effectsOut      = self.config.animation.effectsOut || self.config.animation.effects;\n\n            self.callActions('beforeParseEffects', arguments);\n\n            self.effectsIn      = new mixitup.StyleData();\n            self.effectsOut     = new mixitup.StyleData();\n            self.transformIn    = [];\n            self.transformOut   = [];\n\n            self.effectsIn.opacity = self.effectsOut.opacity = 1;\n\n            self.parseEffect('fade', effectsIn, self.effectsIn, self.transformIn);\n            self.parseEffect('fade', effectsOut, self.effectsOut, self.transformOut, true);\n\n            for (transformName in mixitup.transformDefaults) {\n                if (!(mixitup.transformDefaults[transformName] instanceof mixitup.TransformData)) {\n                    continue;\n                }\n\n                self.parseEffect(transformName, effectsIn, self.effectsIn, self.transformIn);\n                self.parseEffect(transformName, effectsOut, self.effectsOut, self.transformOut, true);\n            }\n\n            self.parseEffect('stagger', effectsIn, self.effectsIn, self.transformIn);\n            self.parseEffect('stagger', effectsOut, self.effectsOut, self.transformOut, true);\n\n            self.callActions('afterParseEffects', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {string}    effectName\n         * @param   {string}    effectString\n         * @param   {StyleData} effects\n         * @param   {String[]}  transform\n         * @param   {boolean}   [isOut]\n         */\n\n        parseEffect: function(effectName, effectString, effects, transform, isOut) {\n            var self        = this,\n                re          = /\\(([^)]+)\\)/,\n                propIndex   = -1,\n                str         = '',\n                match       = [],\n                val         = '',\n                units       = ['%', 'px', 'em', 'rem', 'vh', 'vw', 'deg'],\n                unit        = '',\n                i           = -1;\n\n            self.callActions('beforeParseEffect', arguments);\n\n            if (typeof effectString !== 'string') {\n                throw new TypeError(mixitup.messages.errorConfigInvalidAnimationEffects());\n            }\n\n            if (effectString.indexOf(effectName) < 0) {\n                // The effect is not present in the effects string\n\n                if (effectName === 'stagger') {\n                    // Reset stagger to 0\n\n                    self.staggerDuration = 0;\n                }\n\n                return;\n            }\n\n            // The effect is present\n\n            propIndex = effectString.indexOf(effectName + '(');\n\n            if (propIndex > -1) {\n                // The effect has a user defined value in parentheses\n\n                // Extract from the first parenthesis to the end of string\n\n                str = effectString.substring(propIndex);\n\n                // Match any number of characters between \"(\" and \")\"\n\n                match = re.exec(str);\n\n                val = match[1];\n            }\n\n            switch (effectName) {\n                case 'fade':\n                    effects.opacity = val ? parseFloat(val) : 0;\n\n                    break;\n                case 'stagger':\n                    self.staggerDuration = val ? parseFloat(val) : 100;\n\n                    // TODO: Currently stagger must be applied globally, but\n                    // if seperate values are specified for in/out, this should\n                    // be respected\n\n                    break;\n                default:\n                    // All other effects are transforms following the same structure\n\n                    if (isOut && self.config.animation.reverseOut && effectName !== 'scale') {\n                        effects[effectName].value =\n                            (val ? parseFloat(val) : mixitup.transformDefaults[effectName].value) * -1;\n                    } else {\n                        effects[effectName].value =\n                            (val ? parseFloat(val) : mixitup.transformDefaults[effectName].value);\n                    }\n\n                    if (val) {\n                        for (i = 0; unit = units[i]; i++) {\n                            if (val.indexOf(unit) > -1) {\n                                effects[effectName].unit = unit;\n\n                                break;\n                            }\n                        }\n                    } else {\n                        effects[effectName].unit = mixitup.transformDefaults[effectName].unit;\n                    }\n\n                    transform.push(\n                        effectName +\n                        '(' +\n                        effects[effectName].value +\n                        effects[effectName].unit +\n                        ')'\n                    );\n            }\n\n            self.callActions('afterParseEffect', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {Operation}     operation\n         * @return  {State}\n         */\n\n        buildState: function(operation) {\n            var self        = this,\n                state       = new mixitup.State(),\n                target      = null,\n                i           = -1;\n\n            self.callActions('beforeBuildState', arguments);\n\n            // Map target elements into state arrays.\n            // the real target objects should never be exposed\n\n            for (i = 0; target = self.targets[i]; i++) {\n                if (!operation.toRemove.length || operation.toRemove.indexOf(target) < 0) {\n                    state.targets.push(target.dom.el);\n                }\n            }\n\n            for (i = 0; target = operation.matching[i]; i++) {\n                state.matching.push(target.dom.el);\n            }\n\n            for (i = 0; target = operation.show[i]; i++) {\n                state.show.push(target.dom.el);\n            }\n\n            for (i = 0; target = operation.hide[i]; i++) {\n                if (!operation.toRemove.length || operation.toRemove.indexOf(target) < 0) {\n                    state.hide.push(target.dom.el);\n                }\n            }\n\n            state.id                        = self.id;\n            state.container                 = self.dom.container;\n            state.activeFilter              = operation.newFilter;\n            state.activeSort                = operation.newSort;\n            state.activeDataset             = operation.newDataset;\n            state.activeContainerClassName  = operation.newContainerClassName;\n            state.hasFailed                 = operation.hasFailed;\n            state.totalTargets              = self.targets.length;\n            state.totalShow                 = operation.show.length;\n            state.totalHide                 = operation.hide.length;\n            state.totalMatching             = operation.matching.length;\n            state.triggerElement            = operation.triggerElement;\n\n            return self.callFilters('stateBuildState', state, arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {boolean}   shouldAnimate\n         * @param   {Operation} operation\n         * @return  {void}\n         */\n\n        goMix: function(shouldAnimate, operation) {\n            var self        = this,\n                deferred    = null;\n\n            self.callActions('beforeGoMix', arguments);\n\n            // If the animation duration is set to 0ms,\n            // or no effects specified,\n            // or the container is hidden\n            // then abort animation\n\n            if (\n                !self.config.animation.duration || !self.config.animation.effects || !h.isVisible(self.dom.container)\n            ) {\n                shouldAnimate = false;\n            }\n\n            if (\n                !operation.toShow.length &&\n                !operation.toHide.length &&\n                !operation.willSort &&\n                !operation.willChangeLayout\n            ) {\n                // If nothing to show or hide, and not sorting or\n                // changing layout\n\n                shouldAnimate = false;\n            }\n\n            if (\n                !operation.startState.show.length &&\n                !operation.show.length\n            ) {\n                // If nothing currently shown, nothing to show\n\n                shouldAnimate = false;\n            }\n\n            mixitup.events.fire('mixStart', self.dom.container, {\n                state: operation.startState,\n                futureState: operation.newState,\n                instance: self\n            }, self.dom.document);\n\n            if (typeof self.config.callbacks.onMixStart === 'function') {\n                self.config.callbacks.onMixStart.call(\n                    self.dom.container,\n                    operation.startState,\n                    operation.newState,\n                    self\n                );\n            }\n\n            h.removeClass(self.dom.container, h.getClassname(self.config.classNames, 'container', self.config.classNames.modifierFailed));\n\n            if (!self.userDeferred) {\n                // Queue empty, no pending operations\n\n                deferred = self.userDeferred = h.defer(mixitup.libraries);\n            } else {\n                // Use existing deferred\n\n                deferred = self.userDeferred;\n            }\n\n            self.isBusy = true;\n\n            if (!shouldAnimate || !mixitup.features.has.transitions) {\n                // Abort\n\n                if (self.config.debug.fauxAsync) {\n                    setTimeout(function() {\n                        self.cleanUp(operation);\n                    }, self.config.animation.duration);\n                } else {\n                    self.cleanUp(operation);\n                }\n\n                return self.callFilters('promiseGoMix', deferred.promise, arguments);\n            }\n\n            // If we should animate and the platform supports transitions, go for it\n\n            if (window.pageYOffset !== operation.docState.scrollTop) {\n                window.scrollTo(operation.docState.scrollLeft, operation.docState.scrollTop);\n            }\n\n            if (self.config.animation.applyPerspective) {\n                self.dom.parent.style[mixitup.features.perspectiveProp] =\n                    self.config.animation.perspectiveDistance;\n\n                self.dom.parent.style[mixitup.features.perspectiveOriginProp] =\n                    self.config.animation.perspectiveOrigin;\n            }\n\n            if (\n                self.config.animation.animateResizeContainer &&\n                operation.startHeight !== operation.newHeight &&\n                operation.viewportDeltaY !== operation.startHeight - operation.newHeight\n            ) {\n                self.dom.parent.style.height = operation.startHeight + 'px';\n            }\n\n            if (\n                self.config.animation.animateResizeContainer &&\n                operation.startWidth !== operation.newWidth &&\n                operation.viewportDeltaX !== operation.startWidth - operation.newWidth\n            ) {\n                self.dom.parent.style.width = operation.startWidth + 'px';\n            }\n\n            if (operation.startHeight === operation.newHeight) {\n                self.dom.parent.style.height = operation.startHeight + 'px';\n            }\n\n            if (operation.startWidth === operation.newWidth) {\n                self.dom.parent.style.width = operation.startWidth + 'px';\n            }\n\n            if (operation.startHeight === operation.newHeight && operation.startWidth === operation.newWidth) {\n                self.dom.parent.style.overflow = 'hidden';\n            }\n\n            requestAnimationFrame(function() {\n                self.moveTargets(operation);\n            });\n\n            return self.callFilters('promiseGoMix', deferred.promise, arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {Operation}     operation\n         * @return  {void}\n         */\n\n        getStartMixData: function(operation) {\n            var self        = this,\n                parentStyle = window.getComputedStyle(self.dom.parent),\n                parentRect  = self.dom.parent.getBoundingClientRect(),\n                target      = null,\n                data        = {},\n                i           = -1,\n                boxSizing   = parentStyle[mixitup.features.boxSizingProp];\n\n            self.incPadding = (boxSizing === 'border-box');\n\n            self.callActions('beforeGetStartMixData', arguments);\n\n            for (i = 0; target = operation.show[i]; i++) {\n                data = target.getPosData();\n\n                operation.showPosData[i] = {\n                    startPosData: data\n                };\n            }\n\n            for (i = 0; target = operation.toHide[i]; i++) {\n                data = target.getPosData();\n\n                operation.toHidePosData[i] = {\n                    startPosData: data\n                };\n            }\n\n            operation.startX = parentRect.left;\n            operation.startY = parentRect.top;\n\n            operation.startHeight = self.incPadding ?\n                parentRect.height :\n                parentRect.height -\n                    parseFloat(parentStyle.paddingTop) -\n                    parseFloat(parentStyle.paddingBottom) -\n                    parseFloat(parentStyle.borderTop) -\n                    parseFloat(parentStyle.borderBottom);\n\n            operation.startWidth = self.incPadding ?\n                parentRect.width :\n                parentRect.width -\n                    parseFloat(parentStyle.paddingLeft) -\n                    parseFloat(parentStyle.paddingRight) -\n                    parseFloat(parentStyle.borderLeft) -\n                    parseFloat(parentStyle.borderRight);\n\n            self.callActions('afterGetStartMixData', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {Operation}     operation\n         * @return  {void}\n         */\n\n        setInter: function(operation) {\n            var self    = this,\n                target  = null,\n                i       = -1;\n\n            self.callActions('beforeSetInter', arguments);\n\n            // Prevent scrollbar flicker on non-inertial scroll platforms by clamping height/width\n\n            if (self.config.animation.clampHeight) {\n                self.dom.parent.style.height    = operation.startHeight + 'px';\n                self.dom.parent.style.overflow  = 'hidden';\n            }\n\n            if (self.config.animation.clampWidth) {\n                self.dom.parent.style.width     = operation.startWidth + 'px';\n                self.dom.parent.style.overflow  = 'hidden';\n            }\n\n            for (i = 0; target = operation.toShow[i]; i++) {\n                target.show();\n            }\n\n            if (operation.willChangeLayout) {\n                h.removeClass(self.dom.container, operation.startContainerClassName);\n                h.addClass(self.dom.container, operation.newContainerClassName);\n            }\n\n            self.callActions('afterSetInter', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {Operation}     operation\n         * @return  {void}\n         */\n\n        getInterMixData: function(operation) {\n            var self    = this,\n                target  = null,\n                i       = -1;\n\n            self.callActions('beforeGetInterMixData', arguments);\n\n            for (i = 0; target = operation.show[i]; i++) {\n                operation.showPosData[i].interPosData = target.getPosData();\n            }\n\n            for (i = 0; target = operation.toHide[i]; i++) {\n                operation.toHidePosData[i].interPosData = target.getPosData();\n            }\n\n            self.callActions('afterGetInterMixData', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {Operation}     operation\n         * @return  {void}\n         */\n\n        setFinal: function(operation) {\n            var self    = this,\n                target  = null,\n                i       = -1;\n\n            self.callActions('beforeSetFinal', arguments);\n\n            operation.willSort && self.printSort(false, operation);\n\n            for (i = 0; target = operation.toHide[i]; i++) {\n                target.hide();\n            }\n\n            self.callActions('afterSetFinal', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {Operation}     operation\n         * @return  {void}\n         */\n\n        getFinalMixData: function(operation) {\n            var self        = this,\n                parentStyle = null,\n                parentRect  = null,\n                target      = null,\n                i           = -1;\n\n            self.callActions('beforeGetFinalMixData', arguments);\n\n            for (i = 0; target = operation.show[i]; i++) {\n                operation.showPosData[i].finalPosData = target.getPosData();\n            }\n\n            for (i = 0; target = operation.toHide[i]; i++) {\n                operation.toHidePosData[i].finalPosData = target.getPosData();\n            }\n\n            // Remove clamping\n\n            if (self.config.animation.clampHeight || self.config.animation.clampWidth) {\n                self.dom.parent.style.height    =\n                self.dom.parent.style.width     =\n                self.dom.parent.style.overflow  = '';\n            }\n\n            if (!self.incPadding) {\n                parentStyle = window.getComputedStyle(self.dom.parent);\n            }\n\n            parentRect  = self.dom.parent.getBoundingClientRect();\n\n            operation.newX = parentRect.left;\n            operation.newY = parentRect.top;\n\n            operation.newHeight = self.incPadding ?\n                parentRect.height :\n                parentRect.height -\n                    parseFloat(parentStyle.paddingTop) -\n                    parseFloat(parentStyle.paddingBottom) -\n                    parseFloat(parentStyle.borderTop) -\n                    parseFloat(parentStyle.borderBottom);\n\n            operation.newWidth = self.incPadding ?\n                parentRect.width :\n                parentRect.width -\n                    parseFloat(parentStyle.paddingLeft) -\n                    parseFloat(parentStyle.paddingRight) -\n                    parseFloat(parentStyle.borderLeft) -\n                    parseFloat(parentStyle.borderRight);\n\n            operation.viewportDeltaX = operation.docState.viewportWidth - this.dom.document.documentElement.clientWidth;\n            operation.viewportDeltaY = operation.docState.viewportHeight - this.dom.document.documentElement.clientHeight;\n\n            if (operation.willSort) {\n                self.printSort(true, operation);\n            }\n\n            for (i = 0; target = operation.toShow[i]; i++) {\n                target.hide();\n            }\n\n            for (i = 0; target = operation.toHide[i]; i++) {\n                target.show();\n            }\n\n            if (operation.willChangeLayout) {\n                h.removeClass(self.dom.container, operation.newContainerClassName);\n                h.addClass(self.dom.container, self.config.layout.containerClassName);\n            }\n\n            self.callActions('afterGetFinalMixData', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since    3.0.0\n         * @param    {Operation}     operation\n         */\n\n        getTweenData: function(operation) {\n            var self            = this,\n                target          = null,\n                posData         = null,\n                effectNames     = Object.getOwnPropertyNames(self.effectsIn),\n                effectName      = '',\n                effect          = null,\n                widthChange     = -1,\n                heightChange    = -1,\n                i               = -1,\n                j               = -1;\n\n            self.callActions('beforeGetTweenData', arguments);\n\n            for (i = 0; target = operation.show[i]; i++) {\n                posData             = operation.showPosData[i];\n                posData.posIn       = new mixitup.StyleData();\n                posData.posOut      = new mixitup.StyleData();\n                posData.tweenData   = new mixitup.StyleData();\n\n                // Process x and y\n\n                if (target.isShown) {\n                    posData.posIn.x = posData.startPosData.x - posData.interPosData.x;\n                    posData.posIn.y = posData.startPosData.y - posData.interPosData.y;\n                } else {\n                    posData.posIn.x = posData.posIn.y = 0;\n                }\n\n                posData.posOut.x = posData.finalPosData.x - posData.interPosData.x;\n                posData.posOut.y = posData.finalPosData.y - posData.interPosData.y;\n\n                // Process opacity\n\n                posData.posIn.opacity       = target.isShown ? 1 : self.effectsIn.opacity;\n                posData.posOut.opacity      = 1;\n                posData.tweenData.opacity   = posData.posOut.opacity - posData.posIn.opacity;\n\n                // Adjust x and y if not nudging\n\n                if (!target.isShown && !self.config.animation.nudge) {\n                    posData.posIn.x = posData.posOut.x;\n                    posData.posIn.y = posData.posOut.y;\n                }\n\n                posData.tweenData.x = posData.posOut.x - posData.posIn.x;\n                posData.tweenData.y = posData.posOut.y - posData.posIn.y;\n\n                // Process width, height, and margins\n\n                if (self.config.animation.animateResizeTargets) {\n                    posData.posIn.width     = posData.startPosData.width;\n                    posData.posIn.height    = posData.startPosData.height;\n\n                    // \"||\" Prevents width/height change from including 0 width/height if hiding or showing\n\n                    widthChange = (posData.startPosData.width || posData.finalPosData.width) - posData.interPosData.width;\n\n                    posData.posIn.marginRight = posData.startPosData.marginRight - widthChange;\n\n                    heightChange = (posData.startPosData.height || posData.finalPosData.height) - posData.interPosData.height;\n\n                    posData.posIn.marginBottom = posData.startPosData.marginBottom - heightChange;\n\n                    posData.posOut.width    = posData.finalPosData.width;\n                    posData.posOut.height   = posData.finalPosData.height;\n\n                    widthChange = (posData.finalPosData.width || posData.startPosData.width) - posData.interPosData.width;\n\n                    posData.posOut.marginRight = posData.finalPosData.marginRight - widthChange;\n\n                    heightChange = (posData.finalPosData.height || posData.startPosData.height) - posData.interPosData.height;\n\n                    posData.posOut.marginBottom = posData.finalPosData.marginBottom - heightChange;\n\n                    posData.tweenData.width         = posData.posOut.width - posData.posIn.width;\n                    posData.tweenData.height        = posData.posOut.height - posData.posIn.height;\n                    posData.tweenData.marginRight   = posData.posOut.marginRight - posData.posIn.marginRight;\n                    posData.tweenData.marginBottom  = posData.posOut.marginBottom - posData.posIn.marginBottom;\n                }\n\n                // Process transforms\n\n                for (j = 0; effectName = effectNames[j]; j++) {\n                    effect = self.effectsIn[effectName];\n\n                    if (!(effect instanceof mixitup.TransformData) || !effect.value) continue;\n\n                    posData.posIn[effectName].value     = effect.value;\n                    posData.posOut[effectName].value    = 0;\n\n                    posData.tweenData[effectName].value =\n                        posData.posOut[effectName].value - posData.posIn[effectName].value;\n\n                    posData.posIn[effectName].unit =\n                        posData.posOut[effectName].unit =\n                        posData.tweenData[effectName].unit =\n                        effect.unit;\n                }\n            }\n\n            for (i = 0; target = operation.toHide[i]; i++) {\n                posData             = operation.toHidePosData[i];\n                posData.posIn       = new mixitup.StyleData();\n                posData.posOut      = new mixitup.StyleData();\n                posData.tweenData   = new mixitup.StyleData();\n\n                // Process x and y\n\n                posData.posIn.x     = target.isShown ? posData.startPosData.x - posData.interPosData.x : 0;\n                posData.posIn.y     = target.isShown ? posData.startPosData.y - posData.interPosData.y : 0;\n                posData.posOut.x    = self.config.animation.nudge ? 0 : posData.posIn.x;\n                posData.posOut.y    = self.config.animation.nudge ? 0 : posData.posIn.y;\n                posData.tweenData.x = posData.posOut.x - posData.posIn.x;\n                posData.tweenData.y = posData.posOut.y - posData.posIn.y;\n\n                // Process width, height, and margins\n\n                if (self.config.animation.animateResizeTargets) {\n                    posData.posIn.width         = posData.startPosData.width;\n                    posData.posIn.height        = posData.startPosData.height;\n\n                    widthChange = posData.startPosData.width - posData.interPosData.width;\n\n                    posData.posIn.marginRight = posData.startPosData.marginRight - widthChange;\n\n                    heightChange = posData.startPosData.height - posData.interPosData.height;\n\n                    posData.posIn.marginBottom = posData.startPosData.marginBottom - heightChange;\n                }\n\n                // Process opacity\n\n                posData.posIn.opacity       = 1;\n                posData.posOut.opacity      = self.effectsOut.opacity;\n                posData.tweenData.opacity   = posData.posOut.opacity - posData.posIn.opacity;\n\n                // Process transforms\n\n                for (j = 0; effectName = effectNames[j]; j++) {\n                    effect = self.effectsOut[effectName];\n\n                    if (!(effect instanceof mixitup.TransformData) || !effect.value) continue;\n\n                    posData.posIn[effectName].value     = 0;\n                    posData.posOut[effectName].value    = effect.value;\n\n                    posData.tweenData[effectName].value =\n                        posData.posOut[effectName].value - posData.posIn[effectName].value;\n\n                    posData.posIn[effectName].unit =\n                        posData.posOut[effectName].unit =\n                        posData.tweenData[effectName].unit =\n                        effect.unit;\n                }\n            }\n\n            self.callActions('afterGetTweenData', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {Operation}     operation\n         * @return  {void}\n         */\n\n        moveTargets: function(operation) {\n            var self            = this,\n                target          = null,\n                moveData        = null,\n                posData         = null,\n                statusChange    = '',\n                willTransition  = false,\n                staggerIndex    = -1,\n                i               = -1,\n                checkProgress   = self.checkProgress.bind(self);\n\n            self.callActions('beforeMoveTargets', arguments);\n\n            // TODO: this is an extra loop in addition to the calcs\n            // done in getOperation, could some of this be done there?\n\n            for (i = 0; target = operation.show[i]; i++) {\n                moveData    = new mixitup.IMoveData();\n                posData     = operation.showPosData[i];\n\n                statusChange = target.isShown ? 'none' : 'show';\n\n                willTransition = self.willTransition(\n                    statusChange,\n                    operation.hasEffect,\n                    posData.posIn,\n                    posData.posOut\n                );\n\n                if (willTransition) {\n                    // Prevent non-transitioning targets from incrementing the staggerIndex\n\n                    staggerIndex++;\n                }\n\n                target.show();\n\n                moveData.posIn          = posData.posIn;\n                moveData.posOut         = posData.posOut;\n                moveData.statusChange   = statusChange;\n                moveData.staggerIndex   = staggerIndex;\n                moveData.operation      = operation;\n                moveData.callback       = willTransition ? checkProgress : null;\n\n                target.move(moveData);\n            }\n\n            for (i = 0; target = operation.toHide[i]; i++) {\n                posData  = operation.toHidePosData[i];\n                moveData = new mixitup.IMoveData();\n\n                statusChange = 'hide';\n\n                willTransition = self.willTransition(statusChange, posData.posIn, posData.posOut);\n\n                moveData.posIn          = posData.posIn;\n                moveData.posOut         = posData.posOut;\n                moveData.statusChange   = statusChange;\n                moveData.staggerIndex   = i;\n                moveData.operation      = operation;\n                moveData.callback       = willTransition ? checkProgress : null;\n\n                target.move(moveData);\n            }\n\n            if (self.config.animation.animateResizeContainer) {\n                self.dom.parent.style[mixitup.features.transitionProp] =\n                    'height ' + self.config.animation.duration + 'ms ease, ' +\n                    'width ' + self.config.animation.duration + 'ms ease ';\n\n                requestAnimationFrame(function() {\n                    if (\n                        operation.startHeight !== operation.newHeight &&\n                        operation.viewportDeltaY !== operation.startHeight - operation.newHeight\n                    ) {\n                        self.dom.parent.style.height = operation.newHeight + 'px';\n                    }\n\n                    if (\n                        operation.startWidth !== operation.newWidth &&\n                        operation.viewportDeltaX !== operation.startWidth - operation.newWidth\n                    ) {\n                        self.dom.parent.style.width = operation.newWidth + 'px';\n                    }\n                });\n            }\n\n            if (operation.willChangeLayout) {\n                h.removeClass(self.dom.container, self.config.layout.ContainerClassName);\n                h.addClass(self.dom.container, operation.newContainerClassName);\n            }\n\n            self.callActions('afterMoveTargets', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @return  {boolean}\n         */\n\n        hasEffect: function() {\n            var self        = this,\n                EFFECTABLES = [\n                    'scale',\n                    'translateX', 'translateY', 'translateZ',\n                    'rotateX', 'rotateY', 'rotateZ'\n                ],\n                effectName  = '',\n                effect      = null,\n                result      = false,\n                value       = -1,\n                i           = -1;\n\n            if (self.effectsIn.opacity !== 1) {\n                return self.callFilters('resultHasEffect', true, arguments);\n            }\n\n            for (i = 0; effectName = EFFECTABLES[i]; i++) {\n                effect  = self.effectsIn[effectName];\n                value   = (typeof effect && effect.value !== 'undefined') ?\n                    effect.value : effect;\n\n                if (value !== 0) {\n                    result = true;\n\n                    break;\n                }\n            }\n\n            return self.callFilters('resultHasEffect', result, arguments);\n        },\n\n        /**\n         * Determines if a target element will transition in\n         * some fasion and therefore requires binding of\n         * transitionEnd\n         *\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {string}        statusChange\n         * @param   {boolean}       hasEffect\n         * @param   {StyleData}     posIn\n         * @param   {StyleData}     posOut\n         * @return  {boolean}\n         */\n\n        willTransition: function(statusChange, hasEffect, posIn, posOut) {\n            var self    = this,\n                result  = false;\n\n            if (!h.isVisible(self.dom.container)) {\n                // If the container is not visible, the transitionEnd\n                // event will not occur and MixItUp will hang\n\n                result = false;\n            } else if (\n                (statusChange !== 'none' && hasEffect) ||\n                posIn.x !== posOut.x ||\n                posIn.y !== posOut.y\n            ) {\n                // If opacity and/or translate will change\n\n                result = true;\n            } else if (self.config.animation.animateResizeTargets) {\n                // Check if width, height or margins will change\n\n                result = (\n                    posIn.width !== posOut.width ||\n                    posIn.height !== posOut.height ||\n                    posIn.marginRight !== posOut.marginRight ||\n                    posIn.marginTop !== posOut.marginTop\n                );\n            } else {\n                result = false;\n            }\n\n            return self.callFilters('resultWillTransition', result, arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {Operation}     operation\n         * @return  {void}\n         */\n\n        checkProgress: function(operation) {\n            var self = this;\n\n            self.targetsDone++;\n\n            if (self.targetsBound === self.targetsDone) {\n                self.cleanUp(operation);\n            }\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {Operation}     operation\n         * @return  {void}\n         */\n\n        cleanUp: function(operation) {\n            var self                = this,\n                target              = null,\n                whitespaceBefore    = null,\n                whitespaceAfter     = null,\n                nextInQueue         = null,\n                i                   = -1;\n\n            self.callActions('beforeCleanUp', arguments);\n\n            self.targetsMoved          =\n                self.targetsImmovable  =\n                self.targetsBound      =\n                self.targetsDone       = 0;\n\n            for (i = 0; target = operation.show[i]; i++) {\n                target.cleanUp();\n\n                target.show();\n            }\n\n            for (i = 0; target = operation.toHide[i]; i++) {\n                target.cleanUp();\n\n                target.hide();\n            }\n\n            if (operation.willSort) {\n                self.printSort(false, operation);\n            }\n\n            // Remove any styles applied to the parent container\n\n            self.dom.parent.style[mixitup.features.transitionProp]             =\n                self.dom.parent.style.height                                   =\n                self.dom.parent.style.width                                    =\n                self.dom.parent.style.overflow                                 =\n                self.dom.parent.style[mixitup.features.perspectiveProp]        =\n                self.dom.parent.style[mixitup.features.perspectiveOriginProp]  = '';\n\n            if (operation.willChangeLayout) {\n                h.removeClass(self.dom.container, operation.startContainerClassName);\n                h.addClass(self.dom.container, operation.newContainerClassName);\n            }\n\n            if (operation.toRemove.length) {\n                for (i = 0; target = self.targets[i]; i++) {\n                    if (operation.toRemove.indexOf(target) > -1) {\n                        if (\n                            (whitespaceBefore = target.dom.el.previousSibling) && whitespaceBefore.nodeName === '#text' &&\n                            (whitespaceAfter = target.dom.el.nextSibling) && whitespaceAfter.nodeName === '#text'\n                        ) {\n                            h.removeWhitespace(whitespaceBefore);\n                        }\n\n                        if (!operation.willSort) {\n                            // NB: Sorting will remove targets as a bi-product of `printSort()`\n\n                            self.dom.parent.removeChild(target.dom.el);\n                        }\n\n                        self.targets.splice(i, 1);\n\n                        target.isInDom = false;\n\n                        i--;\n                    }\n                }\n\n                // Since targets have been removed, the original order must be updated\n\n                self.origOrder = self.targets;\n            }\n\n            if (operation.willSort) {\n                self.targets = operation.newOrder;\n            }\n\n            self.state = operation.newState;\n            self.lastOperation = operation;\n\n            self.dom.targets = self.state.targets;\n\n            // mixEnd\n\n            mixitup.events.fire('mixEnd', self.dom.container, {\n                state: self.state,\n                instance: self\n            }, self.dom.document);\n\n            if (typeof self.config.callbacks.onMixEnd === 'function') {\n                self.config.callbacks.onMixEnd.call(self.dom.container, self.state, self);\n            }\n\n            if (operation.hasFailed) {\n                // mixFail\n\n                mixitup.events.fire('mixFail', self.dom.container, {\n                    state: self.state,\n                    instance: self\n                }, self.dom.document);\n\n                if (typeof self.config.callbacks.onMixFail === 'function') {\n                    self.config.callbacks.onMixFail.call(self.dom.container, self.state, self);\n                }\n\n                h.addClass(self.dom.container, h.getClassname(self.config.classNames, 'container', self.config.classNames.modifierFailed));\n            }\n\n            // User-defined callback function\n\n            if (typeof self.userCallback === 'function') {\n                self.userCallback.call(self.dom.container, self.state, self);\n            }\n\n            if (typeof self.userDeferred.resolve === 'function') {\n                self.userDeferred.resolve(self.state);\n            }\n\n            self.userCallback  = null;\n            self.userDeferred  = null;\n            self.lastClicked   = null;\n            self.isToggling    = false;\n            self.isBusy        = false;\n\n            if (self.queue.length) {\n                self.callActions('beforeReadQueueCleanUp', arguments);\n\n                nextInQueue = self.queue.shift();\n\n                // Update non-public API properties stored in queue\n\n                self.userDeferred  = nextInQueue.deferred;\n                self.isToggling    = nextInQueue.isToggling;\n                self.lastClicked   = nextInQueue.triggerElement;\n\n                if (nextInQueue.instruction.command instanceof mixitup.CommandMultimix) {\n                    self.multimix.apply(self, nextInQueue.args);\n                } else {\n                    self.dataset.apply(self, nextInQueue.args);\n                }\n            }\n\n            self.callActions('afterCleanUp', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {Array<*>}  args\n         * @return  {mixitup.UserInstruction}\n         */\n\n        parseMultimixArgs: function(args) {\n            var self        = this,\n                instruction = new mixitup.UserInstruction(),\n                arg         = null,\n                i           = -1;\n\n            instruction.animate = self.config.animation.enable;\n            instruction.command = new mixitup.CommandMultimix();\n\n            for (i = 0; i < args.length; i++) {\n                arg = args[i];\n\n                if (arg === null) continue;\n\n                if (typeof arg === 'object') {\n                    h.extend(instruction.command, arg);\n                } else if (typeof arg === 'boolean') {\n                    instruction.animate = arg;\n                } else if (typeof arg === 'function') {\n                    instruction.callback = arg;\n                }\n            }\n\n            // Coerce arbitrary command arguments into typed command objects\n\n            if (instruction.command.insert && !(instruction.command.insert instanceof mixitup.CommandInsert)) {\n                instruction.command.insert = self.parseInsertArgs([instruction.command.insert]).command;\n            }\n\n            if (instruction.command.remove && !(instruction.command.remove instanceof mixitup.CommandRemove)) {\n                instruction.command.remove = self.parseRemoveArgs([instruction.command.remove]).command;\n            }\n\n            if (instruction.command.filter && !(instruction.command.filter instanceof mixitup.CommandFilter)) {\n                instruction.command.filter = self.parseFilterArgs([instruction.command.filter]).command;\n            }\n\n            if (instruction.command.sort && !(instruction.command.sort instanceof mixitup.CommandSort)) {\n                instruction.command.sort = self.parseSortArgs([instruction.command.sort]).command;\n            }\n\n            if (instruction.command.changeLayout && !(instruction.command.changeLayout instanceof mixitup.CommandChangeLayout)) {\n                instruction.command.changeLayout = self.parseChangeLayoutArgs([instruction.command.changeLayout]).command;\n            }\n\n            instruction = self.callFilters('instructionParseMultimixArgs', instruction, arguments);\n\n            h.freeze(instruction);\n\n            return instruction;\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {Array<*>}  args\n         * @return  {mixitup.UserInstruction}\n         */\n\n        parseFilterArgs: function(args) {\n            var self        = this,\n                instruction = new mixitup.UserInstruction(),\n                arg         = null,\n                i           = -1;\n\n            instruction.animate = self.config.animation.enable;\n            instruction.command = new mixitup.CommandFilter();\n\n            for (i = 0; i < args.length; i++) {\n                arg = args[i];\n\n                if (typeof arg === 'string') {\n                    // Selector\n\n                    instruction.command.selector = arg;\n                } else if (arg === null) {\n                    instruction.command.collection = [];\n                } else if (typeof arg === 'object' && h.isElement(arg, self.dom.document)) {\n                    // Single element\n\n                    instruction.command.collection = [arg];\n                } else if (typeof arg === 'object' && typeof arg.length !== 'undefined') {\n                    // Multiple elements in array, NodeList or jQuery collection\n\n                    instruction.command.collection = h.arrayFromList(arg);\n                } else if (typeof arg === 'object') {\n                    // Filter command\n\n                    h.extend(instruction.command, arg);\n                } else if (typeof arg === 'boolean') {\n                    instruction.animate = arg;\n                } else if (typeof arg === 'function') {\n                    instruction.callback = arg;\n                }\n            }\n\n            if (instruction.command.selector && instruction.command.collection) {\n                throw new Error(mixitup.messages.errorFilterInvalidArguments());\n            }\n\n            instruction = self.callFilters('instructionParseFilterArgs', instruction, arguments);\n\n            h.freeze(instruction);\n\n            return instruction;\n        },\n\n        parseSortArgs: function(args) {\n            var self        = this,\n                instruction = new mixitup.UserInstruction(),\n                arg         = null,\n                sortString  = '',\n                i           = -1;\n\n            instruction.animate = self.config.animation.enable;\n            instruction.command = new mixitup.CommandSort();\n\n            for (i = 0; i < args.length; i++) {\n                arg = args[i];\n\n                if (arg === null) continue;\n\n                switch (typeof arg) {\n                    case 'string':\n                        // Sort string\n\n                        sortString = arg;\n\n                        break;\n                    case 'object':\n                        // Array of element references\n\n                        if (arg.length) {\n                            instruction.command.collection = h.arrayFromList(arg);\n                        }\n\n                        break;\n                    case 'boolean':\n                        instruction.animate = arg;\n\n                        break;\n                    case 'function':\n                        instruction.callback = arg;\n\n                        break;\n                }\n            }\n\n            if (sortString) {\n                instruction.command = self.parseSortString(sortString, instruction.command);\n            }\n\n            instruction = self.callFilters('instructionParseSortArgs', instruction, arguments);\n\n            h.freeze(instruction);\n\n            return instruction;\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {Array<*>}  args\n         * @return  {mixitup.UserInstruction}\n         */\n\n        parseInsertArgs: function(args) {\n            var self        = this,\n                instruction = new mixitup.UserInstruction(),\n                arg         = null,\n                i           = -1;\n\n            instruction.animate = self.config.animation.enable;\n            instruction.command = new mixitup.CommandInsert();\n\n            for (i = 0; i < args.length; i++) {\n                arg = args[i];\n\n                if (arg === null) continue;\n\n                if (typeof arg === 'number') {\n                    // Insert index\n\n                    instruction.command.index = arg;\n                } else if (typeof arg === 'string' && ['before', 'after'].indexOf(arg) > -1) {\n                    // 'before'/'after'\n\n                    instruction.command.position = arg;\n                } else if (typeof arg === 'string') {\n                    // Markup\n\n                    instruction.command.collection =\n                        h.arrayFromList(h.createElement(arg).childNodes);\n                } else if (typeof arg === 'object' && h.isElement(arg, self.dom.document)) {\n                    // Single element\n\n                    !instruction.command.collection.length ?\n                        (instruction.command.collection = [arg]) :\n                        (instruction.command.sibling = arg);\n                } else if (typeof arg === 'object' && arg.length) {\n                    // Multiple elements in array or jQuery collection\n\n                    !instruction.command.collection.length ?\n                        (instruction.command.collection = arg) :\n                        instruction.command.sibling = arg[0];\n                } else if (typeof arg === 'object' && arg.childNodes && arg.childNodes.length) {\n                    // Document fragment\n\n                    !instruction.command.collection.length ?\n                        instruction.command.collection = h.arrayFromList(arg.childNodes) :\n                        instruction.command.sibling = arg.childNodes[0];\n                } else if (typeof arg === 'object') {\n                    // Insert command\n\n                    h.extend(instruction.command, arg);\n                } else if (typeof arg === 'boolean') {\n                    instruction.animate = arg;\n                } else if (typeof arg === 'function') {\n                    instruction.callback = arg;\n                }\n            }\n\n            if (instruction.command.index && instruction.command.sibling) {\n                throw new Error(mixitup.messages.errorInsertInvalidArguments());\n            }\n\n            if (!instruction.command.collection.length && self.config.debug.showWarnings) {\n                console.warn(mixitup.messages.warningInsertNoElements());\n            }\n\n            instruction = self.callFilters('instructionParseInsertArgs', instruction, arguments);\n\n            h.freeze(instruction);\n\n            return instruction;\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {Array<*>}  args\n         * @return  {mixitup.UserInstruction}\n         */\n\n        parseRemoveArgs: function(args) {\n            var self        = this,\n                instruction = new mixitup.UserInstruction(),\n                target      = null,\n                arg         = null,\n                i           = -1;\n\n            instruction.animate = self.config.animation.enable;\n            instruction.command = new mixitup.CommandRemove();\n\n            for (i = 0; i < args.length; i++) {\n                arg = args[i];\n\n                if (arg === null) continue;\n\n                switch (typeof arg) {\n                    case 'number':\n                        if (self.targets[arg]) {\n                            instruction.command.targets[0] = self.targets[arg];\n                        }\n\n                        break;\n                    case 'string':\n                        instruction.command.collection = h.arrayFromList(self.dom.parent.querySelectorAll(arg));\n\n                        break;\n                    case 'object':\n                        if (arg && arg.length) {\n                            instruction.command.collection = arg;\n                        } else if (h.isElement(arg, self.dom.document)) {\n                            instruction.command.collection = [arg];\n                        } else {\n                            // Remove command\n\n                            h.extend(instruction.command, arg);\n                        }\n\n                        break;\n                    case 'boolean':\n                        instruction.animate = arg;\n\n                        break;\n                    case 'function':\n                        instruction.callback = arg;\n\n                        break;\n                }\n            }\n\n            if (instruction.command.collection.length) {\n                for (i = 0; target = self.targets[i]; i++) {\n                    if (instruction.command.collection.indexOf(target.dom.el) > -1) {\n                        instruction.command.targets.push(target);\n                    }\n                }\n            }\n\n            if (!instruction.command.targets.length && self.config.debug.showWarnings) {\n                console.warn(mixitup.messages.warningRemoveNoElements());\n            }\n\n            h.freeze(instruction);\n\n            return instruction;\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {Array<*>}  args\n         * @return  {mixitup.UserInstruction}\n         */\n\n        parseDatasetArgs: function(args) {\n            var self        = this,\n                instruction = new mixitup.UserInstruction(),\n                arg         = null,\n                i           = -1;\n\n            instruction.animate = self.config.animation.enable;\n            instruction.command = new mixitup.CommandDataset();\n\n            for (i = 0; i < args.length; i++) {\n                arg = args[i];\n\n                if (arg === null) continue;\n\n                switch (typeof arg) {\n                    case 'object':\n                        if (Array.isArray(arg) || typeof arg.length === 'number') {\n                            instruction.command.dataset = arg;\n                        } else {\n                            // Change layout command\n\n                            h.extend(instruction.command, arg);\n                        }\n\n                        break;\n                    case 'boolean':\n                        instruction.animate = arg;\n\n                        break;\n                    case 'function':\n                        instruction.callback = arg;\n\n                        break;\n                }\n            }\n\n            h.freeze(instruction);\n\n            return instruction;\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {Array<*>}  args\n         * @return  {mixitup.UserInstruction}\n         */\n\n        parseChangeLayoutArgs: function(args) {\n            var self        = this,\n                instruction = new mixitup.UserInstruction(),\n                arg         = null,\n                i           = -1;\n\n            instruction.animate = self.config.animation.enable;\n            instruction.command = new mixitup.CommandChangeLayout();\n\n            for (i = 0; i < args.length; i++) {\n                arg = args[i];\n\n                if (arg === null) continue;\n\n                switch (typeof arg) {\n                    case 'string':\n                        instruction.command.containerClassName = arg;\n\n                        break;\n                    case 'object':\n                        // Change layout command\n\n                        h.extend(instruction.command, arg);\n\n                        break;\n                    case 'boolean':\n                        instruction.animate = arg;\n\n                        break;\n                    case 'function':\n                        instruction.callback = arg;\n\n                        break;\n                }\n            }\n\n            h.freeze(instruction);\n\n            return instruction;\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since       3.0.0\n         * @param       {mixitup.QueueItem}         queueItem\n         * @return      {Promise.<mixitup.State>}\n         */\n\n        queueMix: function(queueItem) {\n            var self            = this,\n                deferred        = null,\n                toggleSelector  = '';\n\n            self.callActions('beforeQueueMix', arguments);\n\n            deferred = h.defer(mixitup.libraries);\n\n            if (self.config.animation.queue && self.queue.length < self.config.animation.queueLimit) {\n                queueItem.deferred = deferred;\n\n                self.queue.push(queueItem);\n\n                // Keep controls in sync with user interactions. Mixer will catch up as it drains the queue.\n\n                if (self.config.controls.enable) {\n                    if (self.isToggling) {\n                        self.buildToggleArray(queueItem.instruction.command);\n\n                        toggleSelector = self.getToggleSelector();\n\n                        self.updateControls({\n                            filter: {\n                                selector: toggleSelector\n                            }\n                        });\n                    } else {\n                        self.updateControls(queueItem.instruction.command);\n                    }\n                }\n            } else {\n                if (self.config.debug.showWarnings) {\n                    console.warn(mixitup.messages.warningMultimixInstanceQueueFull());\n                }\n\n                deferred.resolve(self.state);\n\n                mixitup.events.fire('mixBusy', self.dom.container, {\n                    state: self.state,\n                    instance: self\n                }, self.dom.document);\n\n                if (typeof self.config.callbacks.onMixBusy === 'function') {\n                    self.config.callbacks.onMixBusy.call(self.dom.container, self.state, self);\n                }\n            }\n\n            return self.callFilters('promiseQueueMix', deferred.promise, arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {Array.<object>}    newDataset\n         * @return  {Operation}\n         */\n\n        getDataOperation: function(newDataset) {\n            var self                = this,\n                operation           = new mixitup.Operation(),\n                startDataset        = [];\n\n            operation = self.callFilters('operationUnmappedGetDataOperation', operation, arguments);\n\n            if (self.dom.targets.length && !(startDataset = (self.state.activeDataset || [])).length) {\n                throw new Error(mixitup.messages.errorDatasetNotSet());\n            }\n\n            operation.id            = h.randomHex();\n            operation.startState    = self.state;\n            operation.startDataset  = startDataset;\n            operation.newDataset    = newDataset.slice();\n\n            self.diffDatasets(operation);\n\n            operation.startOrder = self.targets;\n            operation.newOrder = operation.show;\n\n            if (self.config.animation.enable) {\n                self.getStartMixData(operation);\n                self.setInter(operation);\n\n                operation.docState = h.getDocumentState(self.dom.document);\n\n                self.getInterMixData(operation);\n                self.setFinal(operation);\n                self.getFinalMixData(operation);\n\n                self.parseEffects();\n\n                operation.hasEffect = self.hasEffect();\n\n                self.getTweenData(operation);\n            }\n\n            self.targets = operation.show.slice();\n\n            operation.newState = self.buildState(operation);\n\n            // NB: Targets to be removed must be included in `self.targets` for removal during clean up,\n            // but are added after state is built so that state is accurate\n\n            Array.prototype.push.apply(self.targets, operation.toRemove);\n\n            operation = self.callFilters('operationMappedGetDataOperation', operation, arguments);\n\n            return operation;\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {mixitup.Operation} operation\n         * @return  {void}\n         */\n\n        diffDatasets: function(operation) {\n            var self                = this,\n                persistantStartIds  = [],\n                persistantNewIds    = [],\n                insertedTargets     = [],\n                data                = null,\n                target              = null,\n                el                  = null,\n                frag                = null,\n                nextEl              = null,\n                uids                = {},\n                id                  = '',\n                i                   = -1;\n\n            self.callActions('beforeDiffDatasets', arguments);\n\n            for (i = 0; data = operation.newDataset[i]; i++) {\n                if (typeof (id = data[self.config.data.uidKey]) === 'undefined' || id.toString().length < 1) {\n                    throw new TypeError(mixitup.messages.errorDatasetInvalidUidKey({\n                        uidKey: self.config.data.uidKey\n                    }));\n                }\n\n                if (!uids[id]) {\n                    uids[id] = true;\n                } else {\n                    throw new Error(mixitup.messages.errorDatasetDuplicateUid({\n                        uid: id\n                    }));\n                }\n\n                if ((target = self.cache[id]) instanceof mixitup.Target) {\n                    // Already in cache\n\n                    if (self.config.data.dirtyCheck && !h.deepEquals(data, target.data)) {\n                        // change detected\n\n                        el = target.render(data);\n\n                        target.data = data;\n\n                        if (el !== target.dom.el) {\n                            // Update target element reference\n\n                            if (target.isInDom) {\n                                target.unbindEvents();\n\n                                self.dom.parent.replaceChild(el, target.dom.el);\n                            }\n\n                            if (!target.isShown) {\n                                el.style.display = 'none';\n                            }\n\n                            target.dom.el = el;\n\n                            if (target.isInDom) {\n                                target.bindEvents();\n                            }\n                        }\n                    }\n\n                    el = target.dom.el;\n                } else {\n                    // New target\n\n                    target = new mixitup.Target();\n\n                    target.init(null, self, data);\n\n                    target.hide();\n                }\n\n                if (!target.isInDom) {\n                    // Adding to DOM\n\n                    if (!frag) {\n                        // Open frag\n\n                        frag = self.dom.document.createDocumentFragment();\n                    }\n\n                    if (frag.lastElementChild) {\n                        frag.appendChild(self.dom.document.createTextNode(' '));\n                    }\n\n                    frag.appendChild(target.dom.el);\n\n                    target.isInDom = true;\n\n                    target.unbindEvents();\n                    target.bindEvents();\n                    target.hide();\n\n                    operation.toShow.push(target);\n\n                    insertedTargets.push(target);\n                } else {\n                    // Already in DOM\n\n                    nextEl = target.dom.el.nextElementSibling;\n\n                    persistantNewIds.push(id);\n\n                    if (frag) {\n                        // Close and insert previously opened frag\n\n                        if (frag.lastElementChild) {\n                            frag.appendChild(self.dom.document.createTextNode(' '));\n                        }\n\n                        self.insertDatasetFrag(frag, target.dom.el, insertedTargets);\n\n                        frag = null;\n                    }\n                }\n\n                operation.show.push(target);\n            }\n\n            if (frag) {\n                // Unclosed frag remaining\n\n                nextEl = nextEl || self.config.layout.siblingAfter;\n\n                if (nextEl) {\n                    frag.appendChild(self.dom.document.createTextNode(' '));\n                }\n\n                self.insertDatasetFrag(frag, nextEl, insertedTargets);\n            }\n\n            for (i = 0; data = operation.startDataset[i]; i++) {\n                id = data[self.config.data.uidKey];\n\n                target = self.cache[id];\n\n                if (operation.show.indexOf(target) < 0) {\n                    // Previously shown but now absent\n\n                    operation.hide.push(target);\n                    operation.toHide.push(target);\n                    operation.toRemove.push(target);\n                } else {\n                    persistantStartIds.push(id);\n                }\n            }\n\n            if (!h.isEqualArray(persistantStartIds, persistantNewIds)) {\n                operation.willSort = true;\n            }\n\n            self.callActions('afterDiffDatasets', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.1.5\n         * @param   {DocumentFragment}          frag\n         * @param   {(HTMLElement|null)}        nextEl\n         * @param   {Array.<mixitup.Target>}    targets\n         * @return  {void}\n         */\n\n        insertDatasetFrag: function(frag, nextEl, targets) {\n            var self = this;\n            var insertAt = nextEl ? h.arrayFromList(self.dom.parent.children).indexOf(nextEl) : self.targets.length;\n\n            self.dom.parent.insertBefore(frag, nextEl);\n\n            while (targets.length) {\n                self.targets.splice(insertAt, 0, targets.shift());\n\n                insertAt++;\n            }\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {mixitup.CommandSort} sortCommandA\n         * @param   {mixitup.CommandSort} sortCommandB\n         * @return  {boolean}\n         */\n\n        willSort: function(sortCommandA, sortCommandB) {\n            var self    = this,\n                result  = false;\n\n            if (\n                self.config.behavior.liveSort ||\n                sortCommandA.order       === 'random' ||\n                sortCommandA.attribute   !== sortCommandB.attribute ||\n                sortCommandA.order       !== sortCommandB.order ||\n                sortCommandA.collection  !== sortCommandB.collection ||\n                (sortCommandA.next === null && sortCommandB.next) ||\n                (sortCommandA.next && sortCommandB.next === null)\n            ) {\n                result = true;\n            } else if (sortCommandA.next && sortCommandB.next) {\n                result = self.willSort(sortCommandA.next, sortCommandB.next);\n            } else {\n                result = false;\n            }\n\n            return self.callFilters('resultWillSort', result, arguments);\n        },\n\n        /**\n         * A shorthand method for `.filter('all')`. Shows all targets in the container.\n         *\n         * @example\n         *\n         * .show()\n         *\n         * @example <caption>Example: Showing all targets</caption>\n         *\n         * mixer.show()\n         *     .then(function(state) {\n         *         console.log(state.totalShow === state.totalTargets); // true\n         *     });\n         *\n         * @public\n         * @instance\n         * @since       3.0.0\n         * @return      {Promise.<mixitup.State>}\n         */\n\n        show: function() {\n            var self = this;\n\n            return self.filter('all');\n        },\n\n        /**\n         * A shorthand method for `.filter('none')`. Hides all targets in the container.\n         *\n         * @example\n         *\n         * .hide()\n         *\n         * @example <caption>Example: Hiding all targets</caption>\n         *\n         * mixer.hide()\n         *     .then(function(state) {\n         *         console.log(state.totalShow === 0); // true\n         *         console.log(state.totalHide === state.totalTargets); // true\n         *     });\n         *\n         * @public\n         * @instance\n         * @since       3.0.0\n         * @return      {Promise.<mixitup.State>}\n         */\n\n        hide: function() {\n            var self = this;\n\n            return self.filter('none');\n        },\n\n        /**\n         * Returns a boolean indicating whether or not a MixItUp operation is\n         * currently in progress.\n         *\n         * @example\n         *\n         * .isMixing()\n         *\n         * @example <caption>Example: Checking the status of a mixer</caption>\n         *\n         * mixer.sort('random', function() {\n         *     console.log(mixer.isMixing()) // false\n         * });\n         *\n         * console.log(mixer.isMixing()) // true\n         *\n         * @public\n         * @instance\n         * @since   2.0.0\n         * @return  {boolean}\n         */\n\n        isMixing: function() {\n            var self = this;\n\n            return self.isBusy;\n        },\n\n        /**\n         * Filters all targets in the container by a provided selector string, or the values `'all'`\n         * or `'none'`. Only targets matching the selector will be shown.\n         *\n         * @example\n         *\n         * .filter(selector [, animate] [, callback])\n         *\n         * @example <caption>Example 1: Filtering targets by a class selector</caption>\n         *\n         * mixer.filter('.category-a')\n         *     .then(function(state) {\n         *         console.log(state.totalShow === containerEl.querySelectorAll('.category-a').length); // true\n         *     });\n         *\n         * @example <caption>Example 2: Filtering targets by an attribute selector</caption>\n         *\n         * mixer.filter('[data-category~=\"a\"]')\n         *     .then(function(state) {\n         *         console.log(state.totalShow === containerEl.querySelectorAll('[data-category~=\"a\"]').length); // true\n         *     });\n         *\n         * @example <caption>Example 3: Filtering targets by a compound selector</caption>\n         *\n         * // Show only those targets with the classes 'category-a' AND 'category-b'\n         *\n         * mixer.filter('.category-a.category-c')\n         *     .then(function(state) {\n         *         console.log(state.totalShow === containerEl.querySelectorAll('.category-a.category-c').length); // true\n         *     });\n         *\n         * @example <caption>Example 4: Filtering via an element collection</caption>\n         *\n         * var collection = Array.from(container.querySelectorAll('.mix'));\n         *\n         * console.log(collection.length); // 34\n         *\n         * // Filter the collection manually using Array.prototype.filter\n         *\n         * var filtered = collection.filter(function(target) {\n         *    return parseInt(target.getAttribute('data-price')) > 10;\n         * });\n         *\n         * console.log(filtered.length); // 22\n         *\n         * // Pass the filtered collection to MixItUp\n         *\n         * mixer.filter(filtered)\n         *    .then(function(state) {\n         *        console.log(state.activeFilter.collection.length === 22); // true\n         *    });\n         *\n         * @public\n         * @instance\n         * @since       2.0.0\n         * @param       {(string|HTMLElement|Array.<HTMLElement>)} selector\n         *      Any valid CSS selector (i.e. `'.category-a'`), or the values `'all'` or `'none'`. The filter method also accepts a reference to single target element or a collection of target elements to show.\n         * @param       {boolean}   [animate=true]\n         *      An optional boolean dictating whether the operation should animate, or occur syncronously with no animation. `true` by default.\n         * @param       {function}  [callback=null]\n         *      An optional callback function to be invoked after the operation has completed.\n         * @return      {Promise.<mixitup.State>}\n         *      A promise resolving with the current state object.\n         */\n\n        filter: function() {\n            var self        = this,\n                instruction = self.parseFilterArgs(arguments);\n\n            return self.multimix({\n                filter: instruction.command\n            }, instruction.animate, instruction.callback);\n        },\n\n        /**\n         * Adds an additional selector to the currently active filter selector, concatenating\n         * as per the logic defined in `controls.toggleLogic`.\n         *\n         * @example\n         *\n         * .toggleOn(selector [, animate] [, callback])\n         *\n         * @example <caption>Example: Toggling on a filter selector</caption>\n         *\n         * console.log(mixer.getState().activeFilter.selector); // '.category-a'\n         *\n         * mixer.toggleOn('.category-b')\n         *     .then(function(state) {\n         *         console.log(state.activeFilter.selector); // '.category-a, .category-b'\n         *     });\n         *\n         * @public\n         * @instance\n         * @since       3.0.0\n         * @param       {string}    selector\n         *      Any valid CSS selector (i.e. `'.category-a'`)\n         * @param       {boolean}   [animate=true]\n         *      An optional boolean dictating whether the operation should animate, or occur syncronously with no animation. `true` by default.\n         * @param       {function}  [callback=null]\n         *      An optional callback function to be invoked after the operation has completed.\n         * @return      {Promise.<mixitup.State>}\n         *      A promise resolving with the current state object.\n         */\n\n        toggleOn: function() {\n            var self            = this,\n                instruction     = self.parseFilterArgs(arguments),\n                selector        = instruction.command.selector,\n                toggleSelector  = '';\n\n            self.isToggling = true;\n\n            if (self.toggleArray.indexOf(selector) < 0) {\n                self.toggleArray.push(selector);\n            }\n\n            toggleSelector = self.getToggleSelector();\n\n            return self.multimix({\n                filter: toggleSelector\n            }, instruction.animate, instruction.callback);\n        },\n\n        /**\n         * Removes a selector from the active filter selector.\n         *\n         * @example\n         *\n         * .toggleOff(selector [, animate] [, callback])\n         *\n         * @example <caption>Example: Toggling off a filter selector</caption>\n         *\n         * console.log(mixer.getState().activeFilter.selector); // '.category-a, .category-b'\n         *\n         * mixer.toggleOff('.category-b')\n         *     .then(function(state) {\n         *         console.log(state.activeFilter.selector); // '.category-a'\n         *     });\n         *\n         * @public\n         * @instance\n         * @since       3.0.0\n         * @param       {string}    selector\n         *      Any valid CSS selector (i.e. `'.category-a'`)\n         * @param       {boolean}   [animate=true]\n         *      An optional boolean dictating whether the operation should animate, or occur syncronously with no animation. `true` by default.\n         * @param       {function}  [callback=null]\n         *      An optional callback function to be invoked after the operation has completed.\n         * @return      {Promise.<mixitup.State>}\n         *      A promise resolving with the current state object.\n         */\n\n        toggleOff: function() {\n            var self            = this,\n                instruction     = self.parseFilterArgs(arguments),\n                selector        = instruction.command.selector,\n                selectorIndex   = self.toggleArray.indexOf(selector),\n                toggleSelector  = '';\n\n            self.isToggling = true;\n\n            if (selectorIndex > -1) {\n                self.toggleArray.splice(selectorIndex, 1);\n            }\n\n            toggleSelector = self.getToggleSelector();\n\n            return self.multimix({\n                filter: toggleSelector\n            }, instruction.animate, instruction.callback);\n        },\n\n        /**\n         * Sorts all targets in the container according to a provided sort string.\n         *\n         * @example\n         *\n         * .sort(sortString [, animate] [, callback])\n         *\n         * @example <caption>Example 1: Sorting by the default DOM order</caption>\n         *\n         * // Reverse the default order of the targets\n         *\n         * mixer.sort('default:desc')\n         *     .then(function(state) {\n         *         console.log(state.activeSort.attribute === 'default'); // true\n         *         console.log(state.activeSort.order === 'desc'); // true\n         *     });\n         *\n         * @example <caption>Example 2: Sorting by a custom data-attribute</caption>\n         *\n         * // Sort the targets by the value of a `data-published-date` attribute\n         *\n         * mixer.sort('published-date:asc')\n         *     .then(function(state) {\n         *         console.log(state.activeSort.attribute === 'published-date'); // true\n         *         console.log(state.activeSort.order === 'asc'); // true\n         *     });\n         *\n         * @example <caption>Example 3: Sorting by multiple attributes</caption>\n         *\n         * // Sort the targets by the value of a `data-published-date` attribute, then by `data-title`\n         *\n         * mixer.sort('published-date:desc data-title:asc')\n         *     .then(function(state) {\n         *         console.log(state.activeSort.attribute === 'published-date'); // true\n         *         console.log(state.activeSort.order === 'desc'); // true\n         *\n         *         console.log(state.activeSort.next.attribute === 'title'); // true\n         *         console.log(state.activeSort.next.order === 'asc'); // true\n         *     });\n         *\n         * @example <caption>Example 4: Sorting by random</caption>\n         *\n         * mixer.sort('random')\n         *     .then(function(state) {\n         *         console.log(state.activeSort.order === 'random') // true\n         *     });\n         *\n         * @example <caption>Example 5: Sorting via an element collection</caption>\n         *\n         * var collection = Array.from(container.querySelectorAll('.mix'));\n         *\n         * // Swap the position of two elements in the collection:\n         *\n         * var temp = collection[1];\n         *\n         * collection[1] = collection[0];\n         * collection[0] = temp;\n         *\n         * // Pass the sorted collection to MixItUp\n         *\n         * mixer.sort(collection)\n         *     .then(function(state) {\n         *         console.log(state.targets[0] === collection[0]); // true\n         *     });\n         *\n         * @public\n         * @instance\n         * @since       2.0.0\n         * @param       {(string|Array.<HTMLElement>)}    sortString\n         *      A valid sort string (e.g. `'default'`, `'published-date:asc'`, or `'random'`). The sort method also accepts an array of all target elements in a user-defined order.\n         * @param       {boolean}   [animate=true]\n         *      An optional boolean dictating whether the operation should animate, or occur syncronously with no animation. `true` by default.\n         * @param       {function}  [callback=null]\n         *      An optional callback function to be invoked after the operation has completed.\n         * @return      {Promise.<mixitup.State>}\n         *      A promise resolving with the current state object.\n         */\n\n        sort: function() {\n            var self        = this,\n                instruction = self.parseSortArgs(arguments);\n\n            return self.multimix({\n                sort: instruction.command\n            }, instruction.animate, instruction.callback);\n        },\n\n        /**\n         * Changes the layout of the container by adding, removing or updating a\n         * layout-specific class name. If `animation.animateResizetargets` is\n         * enabled, MixItUp will attempt to gracefully animate the width, height,\n         * and position of targets between layout states.\n         *\n         * @example\n         *\n         * .changeLayout(containerClassName [, animate] [, callback])\n         *\n         * @example <caption>Example 1: Adding a new class name to the container</caption>\n         *\n         * mixer.changeLayout('container-list')\n         *      .then(function(state) {\n         *          console.log(state.activeContainerClass === 'container-list'); // true\n         *      });\n         *\n         * @example <caption>Example 2: Removing a previously added class name from the container</caption>\n         *\n         * mixer.changeLayout('')\n         *      .then(function(state) {\n         *          console.log(state.activeContainerClass === ''); // true\n         *      });\n         *\n         * @public\n         * @instance\n         * @since       2.0.0\n         * @param       {string}    containerClassName\n         *      A layout-specific class name to add to the container.\n         * @param       {boolean}   [animate=true]\n         *      An optional boolean dictating whether the operation should animate, or occur syncronously with no animation. `true` by default.\n         * @param       {function}  [callback=null]\n         *      An optional callback function to be invoked after the operation has completed.\n         * @return      {Promise.<mixitup.State>}\n         *      A promise resolving with the current state object.\n         */\n\n        changeLayout: function() {\n            var self        = this,\n                instruction = self.parseChangeLayoutArgs(arguments);\n\n            return self.multimix({\n                changeLayout: instruction.command\n            }, instruction.animate, instruction.callback);\n        },\n\n        /**\n         * Updates the contents and order of the container to reflect the provided dataset,\n         * if the dataset API is in use.\n         *\n         * The dataset API is designed for use in API-driven JavaScript applications, and\n         * can be used instead of DOM-based methods such as `.filter()`, `.sort()`,\n         * `.insert()`, etc. When used, insertion, removal, sorting and pagination can be\n         * achieved purely via changes to your data model, without the uglyness of having\n         * to interact with or query the DOM directly.\n         *\n         * @example\n         *\n         * .dataset(dataset [, animate] [, callback])\n         *\n         * @example <caption>Example 1: Rendering a dataset</caption>\n         *\n         * var myDataset = [\n         *     {id: 1, ...},\n         *     {id: 2, ...},\n         *     {id: 3, ...}\n         * ];\n         *\n         * mixer.dataset(myDataset)\n         *     .then(function(state) {\n         *         console.log(state.totalShow === 3); // true\n         *     });\n         *\n         * @example <caption>Example 2: Sorting a dataset</caption>\n         *\n         * // Create a new dataset in reverse order\n         *\n         * var newDataset = myDataset.slice().reverse();\n         *\n         * mixer.dataset(newDataset)\n         *     .then(function(state) {\n         *         console.log(state.activeDataset[0] === myDataset[2]); // true\n         *     });\n         *\n         * @example <caption>Example 3: Removing an item from the dataset</caption>\n         *\n         * console.log(myDataset.length); // 3\n         *\n         * // Create a new dataset with the last item removed.\n         *\n         * var newDataset = myDataset.slice().pop();\n         *\n         * mixer.dataset(newDataset)\n         *     .then(function(state) {\n         *         console.log(state.totalShow === 2); // true\n         *     });\n         *\n         * @public\n         * @instance\n         * @since       3.0.0\n         * @param       {Array.<object>}    dataset\n         *      An array of objects, each one representing the underlying data model of a target to be rendered.\n         * @param       {boolean}           [animate=true]\n         *      An optional boolean dictating whether the operation should animate, or occur syncronously with no animation. `true` by default.\n         * @param       {function}          [callback=null]\n         *      An optional callback function to be invoked after the operation has completed.\n         * @return      {Promise.<mixitup.State>}\n         *      A promise resolving with the current state object.\n         */\n\n        dataset: function() {\n            var self        = this,\n                instruction = self.parseDatasetArgs(arguments),\n                operation   = null,\n                queueItem   = null,\n                animate     = false;\n\n            self.callActions('beforeDataset', arguments);\n\n            if (!self.isBusy) {\n                if (instruction.callback) self.userCallback = instruction.callback;\n\n                animate = (instruction.animate ^ self.config.animation.enable) ? instruction.animate : self.config.animation.enable;\n\n                operation = self.getDataOperation(instruction.command.dataset);\n\n                return self.goMix(animate, operation);\n            } else {\n                queueItem = new mixitup.QueueItem();\n\n                queueItem.args          = arguments;\n                queueItem.instruction   = instruction;\n\n                return self.queueMix(queueItem);\n            }\n        },\n\n        /**\n         * Performs simultaneous `filter`, `sort`, `insert`, `remove` and `changeLayout`\n         * operations as requested.\n         *\n         * @example\n         *\n         * .multimix(multimixCommand [, animate] [, callback])\n         *\n         * @example <caption>Example 1: Performing simultaneous filtering and sorting</caption>\n         *\n         * mixer.multimix({\n         *     filter: '.category-b',\n         *     sort: 'published-date:desc'\n         * })\n         *     .then(function(state) {\n         *         console.log(state.activeFilter.selector === '.category-b'); // true\n         *         console.log(state.activeSort.attribute === 'published-date'); // true\n         *     });\n         *\n         * @example <caption>Example 2: Performing simultaneous sorting, insertion, and removal</caption>\n         *\n         * console.log(mixer.getState().totalShow); // 6\n         *\n         * // NB: When inserting via `multimix()`, an object should be provided as the value\n         * // for the `insert` portion of the command, allowing for a collection of elements\n         * // and an insertion index to be specified.\n         *\n         * mixer.multimix({\n         *     sort: 'published-date:desc', // Sort the container, including any new elements\n         *     insert: {\n         *         collection: [newElementReferenceA, newElementReferenceB], // Add 2 new elements at index 5\n         *         index: 5\n         *     },\n         *     remove: existingElementReference // Remove 1 existing element\n         * })\n         *     .then(function(state) {\n         *         console.log(state.activeSort.attribute === 'published-date'); // true\n         *         console.log(state.totalShow === 7); // true\n         *     });\n         *\n         * @public\n         * @instance\n         * @since       2.0.0\n         * @param       {object}    multimixCommand\n         *      An object containing one or more things to do\n         * @param       {boolean}   [animate=true]\n         *      An optional boolean dictating whether the operation should animate, or occur syncronously with no animation. `true` by default.\n         * @param       {function}  [callback=null]\n         *      An optional callback function to be invoked after the operation has completed.\n         * @return      {Promise.<mixitup.State>}\n         *      A promise resolving with the current state object.\n         */\n\n        multimix: function() {\n            var self        = this,\n                operation   = null,\n                animate     = false,\n                queueItem   = null,\n                instruction = self.parseMultimixArgs(arguments);\n\n            self.callActions('beforeMultimix', arguments);\n\n            if (!self.isBusy) {\n                operation = self.getOperation(instruction.command);\n\n                if (self.config.controls.enable) {\n                    // Update controls for API calls\n\n                    if (instruction.command.filter && !self.isToggling) {\n                        // As we are not toggling, reset the toggle array\n                        // so new filter overrides existing toggles\n\n                        self.toggleArray.length = 0;\n                        self.buildToggleArray(operation.command);\n                    }\n\n                    if (self.queue.length < 1) {\n                        self.updateControls(operation.command);\n                    }\n                }\n\n                if (instruction.callback) self.userCallback = instruction.callback;\n\n                // Always allow the instruction to override the instance setting\n\n                animate = (instruction.animate ^ self.config.animation.enable) ?\n                    instruction.animate :\n                    self.config.animation.enable;\n\n                self.callFilters('operationMultimix', operation, arguments);\n\n                return self.goMix(animate, operation);\n            } else {\n                queueItem = new mixitup.QueueItem();\n\n                queueItem.args           = arguments;\n                queueItem.instruction    = instruction;\n                queueItem.triggerElement = self.lastClicked;\n                queueItem.isToggling     = self.isToggling;\n\n                return self.queueMix(queueItem);\n            }\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {object}            multimixCommand\n         * @param   {boolean}           [isPreFetch]\n         *      An optional boolean indicating that the operation is being pre-fetched for execution at a later time.\n         * @return  {Operation|null}\n         */\n\n        getOperation: function(multimixCommand) {\n            var self                = this,\n                sortCommand         = multimixCommand.sort,\n                filterCommand       = multimixCommand.filter,\n                changeLayoutCommand = multimixCommand.changeLayout,\n                removeCommand       = multimixCommand.remove,\n                insertCommand       = multimixCommand.insert,\n                operation           = new mixitup.Operation();\n\n            operation = self.callFilters('operationUnmappedGetOperation', operation, arguments);\n\n            operation.id                = h.randomHex();\n            operation.command           = multimixCommand;\n            operation.startState        = self.state;\n            operation.triggerElement    = self.lastClicked;\n\n            if (self.isBusy) {\n                if (self.config.debug.showWarnings) {\n                    console.warn(mixitup.messages.warningGetOperationInstanceBusy());\n                }\n\n                return null;\n            }\n\n            if (insertCommand) {\n                self.insertTargets(insertCommand, operation);\n            }\n\n            if (removeCommand) {\n                operation.toRemove = removeCommand.targets;\n            }\n\n            operation.startSort = operation.newSort = operation.startState.activeSort;\n            operation.startOrder = operation.newOrder = self.targets;\n\n            if (sortCommand) {\n                operation.startSort = operation.startState.activeSort;\n                operation.newSort   = sortCommand;\n\n                operation.willSort = self.willSort(sortCommand, operation.startState.activeSort);\n\n                if (operation.willSort) {\n                    self.sortOperation(operation);\n                }\n            }\n\n            operation.startFilter = operation.startState.activeFilter;\n\n            if (filterCommand) {\n                operation.newFilter = filterCommand;\n            } else {\n                operation.newFilter = h.extend(new mixitup.CommandFilter(), operation.startFilter);\n            }\n\n            if (operation.newFilter.selector === 'all') {\n                operation.newFilter.selector = self.config.selectors.target;\n            } else if (operation.newFilter.selector === 'none') {\n                operation.newFilter.selector = '';\n            }\n\n            self.filterOperation(operation);\n\n            operation.startContainerClassName = operation.startState.activeContainerClassName;\n\n            if (changeLayoutCommand) {\n                operation.newContainerClassName = changeLayoutCommand.containerClassName;\n\n                if (operation.newContainerClassName !== operation.startContainerClassName) {\n                    operation.willChangeLayout = true;\n                }\n            } else {\n                operation.newContainerClassName = operation.startContainerClassName;\n            }\n\n            if (self.config.animation.enable) {\n                // Populate the operation's position data\n\n                self.getStartMixData(operation);\n                self.setInter(operation);\n\n                operation.docState = h.getDocumentState(self.dom.document);\n\n                self.getInterMixData(operation);\n                self.setFinal(operation);\n                self.getFinalMixData(operation);\n\n                self.parseEffects();\n\n                operation.hasEffect = self.hasEffect();\n\n                self.getTweenData(operation);\n            }\n\n            if (operation.willSort) {\n                self.targets = operation.newOrder;\n            }\n\n            operation.newState = self.buildState(operation);\n\n            return self.callFilters('operationMappedGetOperation', operation, arguments);\n        },\n\n        /**\n         * Renders a previously created operation at a specific point in its path, as\n         * determined by a multiplier between 0 and 1.\n         *\n         * @example\n         * .tween(operation, multiplier)\n         *\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {mixitup.Operation}     operation\n         *      An operation object created via the `getOperation` method\n         *\n         * @param   {Float}                 multiplier\n         *      Any number between 0 and 1 representing the percentage complete of the operation\n         * @return  {void}\n         */\n\n        tween: function(operation, multiplier) {\n            var target          = null,\n                posData         = null,\n                toHideIndex     = -1,\n                i               = -1;\n\n            multiplier = Math.min(multiplier, 1);\n            multiplier = Math.max(multiplier, 0);\n\n            for (i = 0; target = operation.show[i]; i++) {\n                posData = operation.showPosData[i];\n\n                target.applyTween(posData, multiplier);\n            }\n\n            for (i = 0; target = operation.hide[i]; i++) {\n                if (target.isShown) {\n                    target.hide();\n                }\n\n                if ((toHideIndex = operation.toHide.indexOf(target)) > -1) {\n                    posData = operation.toHidePosData[toHideIndex];\n\n                    if (!target.isShown) {\n                        target.show();\n                    }\n\n                    target.applyTween(posData, multiplier);\n                }\n            }\n        },\n\n        /**\n         * Inserts one or more new target elements into the container at a specified\n         * index.\n         *\n         * To be indexed as targets, new elements must match the `selectors.target`\n         * selector (`'.mix'` by default).\n         *\n         * @example\n         *\n         * .insert(newElements [, index] [, animate], [, callback])\n         *\n         * @example <caption>Example 1: Inserting a single element via reference</caption>\n         *\n         * console.log(mixer.getState().totalShow); // 0\n         *\n         * // Create a new element\n         *\n         * var newElement = document.createElement('div');\n         * newElement.classList.add('mix');\n         *\n         * mixer.insert(newElement)\n         *     .then(function(state) {\n         *         console.log(state.totalShow === 1); // true\n         *     });\n         *\n         * @example <caption>Example 2: Inserting a single element via HTML string</caption>\n         *\n         * console.log(mixer.getState().totalShow); // 1\n         *\n         * // Create a new element via reference\n         *\n         * var newElementHtml = '&lt;div class=\"mix\"&gt;&lt;/div&gt;';\n         *\n         * // Create and insert the new element at index 1\n         *\n         * mixer.insert(newElementHtml, 1)\n         *     .then(function(state) {\n         *         console.log(state.totalShow === 2); // true\n         *         console.log(state.show[1].outerHTML === newElementHtml); // true\n         *     });\n         *\n         * @example <caption>Example 3: Inserting multiple elements via reference</caption>\n         *\n         * console.log(mixer.getState().totalShow); // 2\n         *\n         * // Create an array of new elements to insert.\n         *\n         * var newElement1 = document.createElement('div');\n         * var newElement2 = document.createElement('div');\n         *\n         * newElement1.classList.add('mix');\n         * newElement2.classList.add('mix');\n         *\n         * var newElementsCollection = [newElement1, newElement2];\n         *\n         * // Insert the new elements starting at index 1\n         *\n         * mixer.insert(newElementsCollection, 1)\n         *     .then(function(state) {\n         *         console.log(state.totalShow === 4); // true\n         *         console.log(state.show[1] === newElement1); // true\n         *         console.log(state.show[2] === newElement2); // true\n         *     });\n         *\n         * @example <caption>Example 4: Inserting a jQuery collection object containing one or more elements</caption>\n         *\n         * console.log(mixer.getState().totalShow); // 4\n         *\n         * var $newElement = $('&lt;div class=\"mix\"&gt;&lt;/div&gt;');\n         *\n         * // Insert the new elements starting at index 3\n         *\n         * mixer.insert($newElement, 3)\n         *     .then(function(state) {\n         *         console.log(state.totalShow === 5); // true\n         *         console.log(state.show[3] === $newElement[0]); // true\n         *     });\n         *\n         * @public\n         * @instance\n         * @since       2.0.0\n         * @param       {(HTMLElement|Array.<HTMLElement>|string)}    newElements\n         *      A reference to a single element to insert, an array-like collection of elements, or an HTML string representing a single element.\n         * @param       {number}    index=0\n         *      The index at which to insert the new element(s). `0` by default.\n         * @param       {boolean}   [animate=true]\n         *      An optional boolean dictating whether the operation should animate, or occur syncronously with no animation. `true` by default.\n         * @param       {function}  [callback=null]\n         *      An optional callback function to be invoked after the operation has completed.\n         * @return      {Promise.<mixitup.State>}\n         *      A promise resolving with the current state object.\n         */\n\n        insert: function() {\n            var self = this,\n                args = self.parseInsertArgs(arguments);\n\n            return self.multimix({\n                insert: args.command\n            }, args.animate, args.callback);\n        },\n\n        /**\n         * Inserts one or more new elements before a provided reference element.\n         *\n         * @example\n         *\n         * .insertBefore(newElements, referenceElement [, animate] [, callback])\n         *\n         * @example <caption>Example: Inserting a new element before a reference element</caption>\n         *\n         * // An existing reference element is chosen at index 2\n         *\n         * var referenceElement = mixer.getState().show[2];\n         *\n         * // Create a new element\n         *\n         * var newElement = document.createElement('div');\n         * newElement.classList.add('mix');\n         *\n         * mixer.insertBefore(newElement, referenceElement)\n         *     .then(function(state) {\n         *         // The new element is inserted into the container at index 2, before the reference element\n         *\n         *         console.log(state.show[2] === newElement); // true\n         *\n         *         // The reference element is now at index 3\n         *\n         *         console.log(state.show[3] === referenceElement); // true\n         *     });\n         *\n         * @public\n         * @instance\n         * @since       3.0.0\n         * @param       {(HTMLElement|Array.<HTMLElement>|string)}    newElements\n         *      A reference to a single element to insert, an array-like collection of elements, or an HTML string representing a single element.\n         * @param       {HTMLElement}    referenceElement\n         *      A reference to an existing element in the container to insert new elements before.\n         *@param       {boolean}   [animate=true]\n         *      An optional boolean dictating whether the operation should animate, or occur syncronously with no animation. `true` by default.\n         * @param       {function}  [callback=null]\n         *      An optional callback function to be invoked after the operation has completed.\n         * @return      {Promise.<mixitup.State>}\n         *      A promise resolving with the current state object.\n         */\n\n        insertBefore: function() {\n            var self = this,\n                args = self.parseInsertArgs(arguments);\n\n            return self.insert(args.command.collection, 'before', args.command.sibling, args.animate, args.callback);\n        },\n\n        /**\n         * Inserts one or more new elements after a provided reference element.\n         *\n         * @example\n         *\n         * .insertAfter(newElements, referenceElement [, animate] [, callback])\n         *\n         * @example <caption>Example: Inserting a new element after a reference element</caption>\n         *\n         * // An existing reference element is chosen at index 2\n         *\n         * var referenceElement = mixer.getState().show[2];\n         *\n         * // Create a new element\n         *\n         * var newElement = document.createElement('div');\n         * newElement.classList.add('mix');\n         *\n         * mixer.insertAfter(newElement, referenceElement)\n         *     .then(function(state) {\n         *         // The new element is inserted into the container at index 3, after the reference element\n         *\n         *         console.log(state.show[3] === newElement); // true\n         *     });\n         *\n         * @public\n         * @instance\n         * @since       3.0.0\n         * @param       {(HTMLElement|Array.<HTMLElement>|string)}    newElements\n         *      A reference to a single element to insert, an array-like collection of elements, or an HTML string representing a single element.\n         * @param       {HTMLElement}    referenceElement\n         *      A reference to an existing element in the container to insert new elements after.\n         * @param       {boolean}   [animate=true]\n         *      An optional boolean dictating whether the operation should animate, or occur syncronously with no animation. `true` by default.\n         * @param       {function}  [callback=null]\n         *      An optional callback function to be invoked after the operation has completed.\n         * @return      {Promise.<mixitup.State>}\n         *      A promise resolving with the current state object.\n         */\n\n        insertAfter: function() {\n            var self = this,\n                args = self.parseInsertArgs(arguments);\n\n            return self.insert(args.command.collection, 'after', args.command.sibling, args.animate, args.callback);\n        },\n\n        /**\n         * Inserts one or more new elements into the container before all existing targets.\n         *\n         * @example\n         *\n         * .prepend(newElements [,animate] [,callback])\n         *\n         * @example <caption>Example: Prepending a new element</caption>\n         *\n         * // Create a new element\n         *\n         * var newElement = document.createElement('div');\n         * newElement.classList.add('mix');\n         *\n         * // Insert the element into the container\n         *\n         * mixer.prepend(newElement)\n         *     .then(function(state) {\n         *         console.log(state.show[0] === newElement); // true\n         *     });\n         *\n         * @public\n         * @instance\n         * @since       3.0.0\n         * @param       {(HTMLElement|Array.<HTMLElement>|string)}    newElements\n         *      A reference to a single element to insert, an array-like collection of elements, or an HTML string representing a single element.\n         * @param       {boolean}   [animate=true]\n         *      An optional boolean dictating whether the operation should animate, or occur syncronously with no animation. `true` by default.\n         * @param       {function}  [callback=null]\n         *      An optional callback function to be invoked after the operation has completed.\n         * @return      {Promise.<mixitup.State>}\n         *      A promise resolving with the current state object.\n         */\n\n        prepend: function() {\n            var self = this,\n                args = self.parseInsertArgs(arguments);\n\n            return self.insert(0, args.command.collection, args.animate, args.callback);\n        },\n\n        /**\n         * Inserts one or more new elements into the container after all existing targets.\n         *\n         * @example\n         *\n         * .append(newElements [,animate] [,callback])\n         *\n         * @example <caption>Example: Appending a new element</caption>\n         *\n         * // Create a new element\n         *\n         * var newElement = document.createElement('div');\n         * newElement.classList.add('mix');\n         *\n         * // Insert the element into the container\n         *\n         * mixer.append(newElement)\n         *     .then(function(state) {\n         *         console.log(state.show[state.show.length - 1] === newElement); // true\n         *     });\n         *\n         * @public\n         * @instance\n         * @since       3.0.0\n         * @param       {(HTMLElement|Array.<HTMLElement>|string)}    newElements\n         *      A reference to a single element to insert, an array-like collection of elements, or an HTML string representing a single element.\n         * @param       {boolean}   [animate=true]\n         *      An optional boolean dictating whether the operation should animate, or occur syncronously with no animation. `true` by default.\n         * @param       {function}  [callback=null]\n         *      An optional callback function to be invoked after the operation has completed.\n         * @return      {Promise.<mixitup.State>}\n         *      A promise resolving with the current state object.\n         */\n\n        append: function() {\n            var self = this,\n                args = self.parseInsertArgs(arguments);\n\n            return self.insert(self.state.totalTargets, args.command.collection, args.animate, args.callback);\n        },\n\n        /**\n         * Removes one or more existing target elements from the container.\n         *\n         * @example\n         *\n         * .remove(elements [, animate] [, callback])\n         *\n         * @example <caption>Example 1: Removing an element by reference</caption>\n         *\n         * var elementToRemove = containerEl.firstElementChild;\n         *\n         * mixer.remove(elementToRemove)\n         *      .then(function(state) {\n         *          console.log(state.targets.indexOf(elementToRemove) === -1); // true\n         *      });\n         *\n         * @example <caption>Example 2: Removing a collection of elements by reference</caption>\n         *\n         * var elementsToRemove = containerEl.querySelectorAll('.category-a');\n         *\n         * console.log(elementsToRemove.length) // 3\n         *\n         * mixer.remove(elementsToRemove)\n         *      .then(function() {\n         *          console.log(containerEl.querySelectorAll('.category-a').length); // 0\n         *      });\n         *\n         * @example <caption>Example 3: Removing one or more elements by selector</caption>\n         *\n         * mixer.remove('.category-a')\n         *      .then(function() {\n         *          console.log(containerEl.querySelectorAll('.category-a').length); // 0\n         *      });\n         *\n         * @example <caption>Example 4: Removing an element by index</caption>\n         *\n         * console.log(mixer.getState.totalShow); // 4\n         *\n         * // Remove the element at index 3\n         *\n         * mixer.remove(3)\n         *      .then(function(state) {\n         *          console.log(state.totalShow); // 3\n         *          console.log(state.show[3]); // undefined\n         *      });\n         *\n         *\n         * @public\n         * @instance\n         * @since       3.0.0\n         * @param       {(HTMLElement|Array.<HTMLElement>|string|number)}    elements\n         *      A reference to a single element to remove, an array-like collection of elements, a selector string, or the index of an element to remove.\n         * @param       {boolean}   [animate=true]\n         *      An optional boolean dictating whether the operation should animate, or occur syncronously with no animation. `true` by default.\n         * @param       {function}  [callback=null]\n         *      An optional callback function to be invoked after the operation has completed.\n         * @return      {Promise.<mixitup.State>}\n         *      A promise resolving with the current state object.\n         */\n\n        remove: function() {\n            var self = this,\n                args = self.parseRemoveArgs(arguments);\n\n            return self.multimix({\n                remove: args.command\n            }, args.animate, args.callback);\n        },\n\n        /**\n         * Retrieves the the value of any property or sub-object within the current\n         * mixitup configuration, or the whole configuration object.\n         *\n         * @example\n         *\n         * .getConfig([stringKey])\n         *\n         * @example <caption>Example 1: retrieve the entire configuration object</caption>\n         *\n         * var config = mixer.getConfig(); // Config { ... }\n         *\n         * @example <caption>Example 2: retrieve a named sub-object of configuration object</caption>\n         *\n         * var animation = mixer.getConfig('animation'); // ConfigAnimation { ... }\n         *\n         * @example <caption>Example 3: retrieve a value of configuration object via a dot-notation string key</caption>\n         *\n         * var effects = mixer.getConfig('animation.effects'); // 'fade scale'\n         *\n         * @public\n         * @instance\n         * @since       2.0.0\n         * @param       {string}    [stringKey]    A \"dot-notation\" string key\n         * @return      {*}\n         */\n\n        getConfig: function(stringKey) {\n            var self    = this,\n                value   = null;\n\n            if (!stringKey) {\n                value = self.config;\n            } else {\n                value = h.getProperty(self.config, stringKey);\n            }\n\n            return self.callFilters('valueGetConfig', value, arguments);\n        },\n\n        /**\n         * Updates the configuration of the mixer, after it has been instantiated.\n         *\n         * See the Configuration Object documentation for a full list of avilable\n         * configuration options.\n         *\n         * @example\n         *\n         * .configure(config)\n         *\n         * @example <caption>Example 1: Updating animation options</caption>\n         *\n         * mixer.configure({\n         *     animation: {\n         *         effects: 'fade translateX(-100%)',\n         *         duration: 300\n         *     }\n         * });\n         *\n         * @example <caption>Example 2: Removing a callback after it has been set</caption>\n         *\n         * var mixer;\n         *\n         * function handleMixEndOnce() {\n         *     // Do something ..\n         *\n         *     // Then nullify the callback\n         *\n         *     mixer.configure({\n         *         callbacks: {\n         *             onMixEnd: null\n         *         }\n         *     });\n         * };\n         *\n         * // Instantiate a mixer with a callback defined\n         *\n         * mixer = mixitup(containerEl, {\n         *     callbacks: {\n         *         onMixEnd: handleMixEndOnce\n         *     }\n         * });\n         *\n         * @public\n         * @instance\n         * @since       3.0.0\n         * @param       {object}    config\n         *      An object containing one of more configuration options.\n         * @return      {void}\n         */\n\n        configure: function(config) {\n            var self = this;\n\n            self.callActions('beforeConfigure', arguments);\n\n            h.extend(self.config, config, true, true);\n\n            self.callActions('afterConfigure', arguments);\n        },\n\n        /**\n         * Returns an object containing information about the current state of the\n         * mixer. See the State Object documentation for more information.\n         *\n         * NB: State objects are immutable and should therefore be regenerated\n         * after any operation.\n         *\n         * @example\n         *\n         * .getState();\n         *\n         * @example <caption>Example: Retrieving a state object</caption>\n         *\n         * var state = mixer.getState();\n         *\n         * console.log(state.totalShow + 'targets are currently shown');\n         *\n         * @public\n         * @instance\n         * @since       2.0.0\n         * @return      {mixitup.State} An object reflecting the current state of the mixer.\n         */\n\n        getState: function() {\n            var self    = this,\n                state   = null;\n\n            state = new mixitup.State();\n\n            h.extend(state, self.state);\n\n            h.freeze(state);\n\n            return self.callFilters('stateGetState', state, arguments);\n        },\n\n        /**\n         * Forces the re-indexing all targets within the container.\n         *\n         * This should only be used if some other piece of code in your application\n         * has manipulated the contents of your container, which should be avoided.\n         *\n         * If you need to add or remove target elements from the container, use\n         * the built-in `.insert()` or `.remove()` methods, and MixItUp will keep\n         * itself up to date.\n         *\n         * @example\n         *\n         * .forceRefresh()\n         *\n         * @example <caption>Example: Force refreshing the mixer after external DOM manipulation</caption>\n         *\n         * console.log(mixer.getState().totalShow); // 3\n         *\n         * // An element is removed from the container via some external DOM manipulation code:\n         *\n         * containerEl.removeChild(containerEl.firstElementChild);\n         *\n         * // The mixer does not know that the number of targets has changed:\n         *\n         * console.log(mixer.getState().totalShow); // 3\n         *\n         * mixer.forceRefresh();\n         *\n         * // After forceRefresh, the mixer is in sync again:\n         *\n         * console.log(mixer.getState().totalShow); // 2\n         *\n         * @public\n         * @instance\n         * @since 2.1.2\n         * @return {void}\n         */\n\n        forceRefresh: function() {\n            var self = this;\n\n            self.indexTargets();\n        },\n\n        /**\n         * Forces the re-rendering of all targets when using the Dataset API.\n         *\n         * By default, targets are only re-rendered when `data.dirtyCheck` is\n         * enabled, and an item's data has changed when `dataset()` is called.\n         *\n         * The `forceRender()` method allows for the re-rendering of all targets\n         * in response to some arbitrary event, such as the changing of the target\n         * render function.\n         *\n         * Targets are rendered against their existing data.\n         *\n         * @example\n         *\n         * .forceRender()\n         *\n         * @example <caption>Example: Force render targets after changing the target render function</caption>\n         *\n         * console.log(container.innerHTML); // ... &lt;span class=\"mix\"&gt;Foo&lt;/span&gt; ...\n         *\n         * mixer.configure({\n         *     render: {\n         *         target: (item) => `&lt;a href=\"/${item.slug}/\" class=\"mix\"&gt;${item.title}&lt;/a&gt;`\n         *     }\n         * });\n         *\n         * mixer.forceRender();\n         *\n         * console.log(container.innerHTML); // ... &lt;a href=\"/foo/\" class=\"mix\"&gt;Foo&lt;/a&gt; ...\n         *\n         * @public\n         * @instance\n         * @since 3.2.1\n         * @return {void}\n         */\n\n        forceRender: function() {\n            var self    = this,\n                target  = null,\n                el      = null,\n                id      = '';\n\n            for (id in self.cache) {\n                target = self.cache[id];\n\n                el = target.render(target.data);\n\n                if (el !== target.dom.el) {\n                    // Update target element reference\n\n                    if (target.isInDom) {\n                        target.unbindEvents();\n\n                        self.dom.parent.replaceChild(el, target.dom.el);\n                    }\n\n                    if (!target.isShown) {\n                        el.style.display = 'none';\n                    }\n\n                    target.dom.el = el;\n\n                    if (target.isInDom) {\n                        target.bindEvents();\n                    }\n                }\n            }\n\n            self.state = self.buildState(self.lastOperation);\n        },\n\n        /**\n         * Removes mixitup functionality from the container, unbinds all control\n         * event handlers, and deletes the mixer instance from MixItUp's internal\n         * cache.\n         *\n         * This should be performed whenever a mixer's container is removed from\n         * the DOM, such as during a page change in a single page application,\n         * or React's `componentWillUnmount()`.\n         *\n         * @example\n         *\n         * .destroy([cleanUp])\n         *\n         * @example <caption>Example: Destroying the mixer before removing its container element</caption>\n         *\n         * mixer.destroy();\n         *\n         * containerEl.parentElement.removeChild(containerEl);\n         *\n         * @public\n         * @instance\n         * @since   2.0.0\n         * @param   {boolean}   [cleanUp=false]\n         *     An optional boolean dictating whether or not to clean up any inline `display: none;` styling applied to hidden targets.\n         * @return  {void}\n         */\n\n        destroy: function(cleanUp) {\n            var self    = this,\n                control = null,\n                target  = null,\n                i       = 0;\n\n            self.callActions('beforeDestroy', arguments);\n\n            for (i = 0; control = self.controls[i]; i++) {\n                control.removeBinding(self);\n            }\n\n            for (i = 0; target = self.targets[i]; i++) {\n                if (cleanUp) {\n                    target.show();\n                }\n\n                target.unbindEvents();\n            }\n\n            if (self.dom.container.id.match(/^MixItUp/)) {\n                self.dom.container.removeAttribute('id');\n            }\n\n            delete mixitup.instances[self.id];\n\n            self.callActions('afterDestroy', arguments);\n        }\n    });\n\n    /**\n     * @constructor\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.IMoveData = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.posIn          = null;\n        this.posOut         = null;\n        this.operation      = null;\n        this.callback       = null;\n        this.statusChange   = '';\n        this.duration       = -1;\n        this.staggerIndex   = -1;\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.IMoveData);\n\n    mixitup.IMoveData.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.IMoveData.prototype.constructor = mixitup.IMoveData;\n\n    /**\n     * @constructor\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.TargetDom = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.el = null;\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.TargetDom);\n\n    mixitup.TargetDom.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.TargetDom.prototype.constructor = mixitup.TargetDom;\n\n    /**\n     * @constructor\n     * @namespace\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.Target = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.id         = '';\n        this.sortString = '';\n        this.mixer      = null;\n        this.callback   = null;\n        this.isShown    = false;\n        this.isBound    = false;\n        this.isExcluded = false;\n        this.isInDom    = false;\n        this.handler    = null;\n        this.operation  = null;\n        this.data       = null;\n        this.dom        = new mixitup.TargetDom();\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.Target);\n\n    mixitup.Target.prototype = Object.create(mixitup.Base.prototype);\n\n    h.extend(mixitup.Target.prototype, {\n        constructor: mixitup.Target,\n\n        /**\n         * Initialises a newly instantiated Target.\n         *\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {(Element|null)}    el\n         * @param   {object}            mixer\n         * @param   {object}            [data]\n         * @return  {void}\n         */\n\n        init: function(el, mixer, data) {\n            var self = this,\n                id   = '';\n\n            self.callActions('beforeInit', arguments);\n\n            self.mixer = mixer;\n\n            if (!el) {\n                // If no element is provided, render it\n\n                el = self.render(data);\n            }\n\n            self.cacheDom(el);\n\n            self.bindEvents();\n\n            if (self.dom.el.style.display !== 'none') {\n                self.isShown = true;\n            }\n\n            if (data && mixer.config.data.uidKey) {\n                if (typeof (id = data[mixer.config.data.uidKey]) === 'undefined' || id.toString().length < 1) {\n                    throw new TypeError(mixitup.messages.errorDatasetInvalidUidKey({\n                        uidKey: mixer.config.data.uidKey\n                    }));\n                }\n\n                self.id     = id;\n                self.data   = data;\n\n                mixer.cache[id] = self;\n            }\n\n            self.callActions('afterInit', arguments);\n        },\n\n        /**\n         * Renders the target element using a user-defined renderer function.\n         *\n         * @private\n         * @instance\n         * @since   3.1.4\n         * @param   {object} data\n         * @return  {void}\n         */\n\n        render: function(data) {\n            var self    = this,\n                render  = null,\n                el      = null,\n                temp    = null,\n                output  = '';\n\n            self.callActions('beforeRender', arguments);\n\n            render = self.callFilters('renderRender', self.mixer.config.render.target, arguments);\n\n            if (typeof render !== 'function') {\n                throw new TypeError(mixitup.messages.errorDatasetRendererNotSet());\n            }\n\n            output = render(data);\n\n            if (output && typeof output === 'object' && h.isElement(output)) {\n                el = output;\n            } else if (typeof output === 'string') {\n                temp = document.createElement('div');\n                temp.innerHTML = output;\n\n                el = temp.firstElementChild;\n            }\n\n            return self.callFilters('elRender', el, arguments);\n        },\n\n        /**\n         * Caches references of DOM elements neccessary for the target's functionality.\n         *\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {Element} el\n         * @return  {void}\n         */\n\n        cacheDom: function(el) {\n            var self = this;\n\n            self.callActions('beforeCacheDom', arguments);\n\n            self.dom.el = el;\n\n            self.callActions('afterCacheDom', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {string}    attributeName\n         * @return  {void}\n         */\n\n        getSortString: function(attributeName) {\n            var self    = this,\n                value   = self.dom.el.getAttribute('data-' + attributeName) || '';\n\n            self.callActions('beforeGetSortString', arguments);\n\n            value = isNaN(value * 1) ?\n                value.toLowerCase() :\n                value * 1;\n\n            self.sortString = value;\n\n            self.callActions('afterGetSortString', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @return  {void}\n         */\n\n        show: function() {\n            var self = this;\n\n            self.callActions('beforeShow', arguments);\n\n            if (!self.isShown) {\n                self.dom.el.style.display = '';\n\n                self.isShown = true;\n            }\n\n            self.callActions('afterShow', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @return  {void}\n         */\n\n        hide: function() {\n            var self = this;\n\n            self.callActions('beforeHide', arguments);\n\n            if (self.isShown) {\n                self.dom.el.style.display = 'none';\n\n                self.isShown = false;\n            }\n\n            self.callActions('afterHide', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {mixitup.IMoveData} moveData\n         * @return  {void}\n         */\n\n        move: function(moveData) {\n            var self = this;\n\n            self.callActions('beforeMove', arguments);\n\n            if (!self.isExcluded) {\n                self.mixer.targetsMoved++;\n            }\n\n            self.applyStylesIn(moveData);\n\n            requestAnimationFrame(function() {\n                self.applyStylesOut(moveData);\n            });\n\n            self.callActions('afterMove', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {object}    posData\n         * @param   {number}    multiplier\n         * @return  {void}\n         */\n\n        applyTween: function(posData, multiplier) {\n            var self                    = this,\n                propertyName            = '',\n                tweenData               = null,\n                posIn                   = posData.posIn,\n                currentTransformValues  = [],\n                currentValues           = new mixitup.StyleData(),\n                i                       = -1;\n\n            self.callActions('beforeApplyTween', arguments);\n\n            currentValues.x     = posIn.x;\n            currentValues.y     = posIn.y;\n\n            if (multiplier === 0) {\n                self.hide();\n            } else if (!self.isShown) {\n                self.show();\n            }\n\n            for (i = 0; propertyName = mixitup.features.TWEENABLE[i]; i++) {\n                tweenData = posData.tweenData[propertyName];\n\n                if (propertyName === 'x') {\n                    if (!tweenData) continue;\n\n                    currentValues.x = posIn.x + (tweenData * multiplier);\n                } else if (propertyName === 'y') {\n                    if (!tweenData) continue;\n\n                    currentValues.y = posIn.y + (tweenData * multiplier);\n                } else if (tweenData instanceof mixitup.TransformData) {\n                    if (!tweenData.value) continue;\n\n                    currentValues[propertyName].value =\n                        posIn[propertyName].value + (tweenData.value * multiplier);\n\n                    currentValues[propertyName].unit  = tweenData.unit;\n\n                    currentTransformValues.push(\n                        propertyName + '(' + currentValues[propertyName].value + tweenData.unit + ')'\n                    );\n                } else {\n                    if (!tweenData) continue;\n\n                    currentValues[propertyName] = posIn[propertyName] + (tweenData * multiplier);\n\n                    self.dom.el.style[propertyName] = currentValues[propertyName];\n                }\n            }\n\n            if (currentValues.x || currentValues.y) {\n                currentTransformValues.unshift('translate(' + currentValues.x + 'px, ' + currentValues.y + 'px)');\n            }\n\n            if (currentTransformValues.length) {\n                self.dom.el.style[mixitup.features.transformProp] = currentTransformValues.join(' ');\n            }\n\n            self.callActions('afterApplyTween', arguments);\n        },\n\n        /**\n         * Applies the initial styling to a target element before any transition\n         * is applied.\n         *\n         * @private\n         * @instance\n         * @param   {mixitup.IMoveData} moveData\n         * @return  {void}\n         */\n\n        applyStylesIn: function(moveData) {\n            var self            = this,\n                posIn           = moveData.posIn,\n                isFading        = self.mixer.effectsIn.opacity !== 1,\n                transformValues = [];\n\n            self.callActions('beforeApplyStylesIn', arguments);\n\n            transformValues.push('translate(' + posIn.x + 'px, ' + posIn.y + 'px)');\n\n            if (self.mixer.config.animation.animateResizeTargets) {\n                if (moveData.statusChange !== 'show') {\n                    // Don't apply posIn width or height or showing, as will be 0\n\n                    self.dom.el.style.width  = posIn.width + 'px';\n                    self.dom.el.style.height = posIn.height + 'px';\n                }\n\n                self.dom.el.style.marginRight  = posIn.marginRight + 'px';\n                self.dom.el.style.marginBottom = posIn.marginBottom + 'px';\n            }\n\n            isFading && (self.dom.el.style.opacity = posIn.opacity);\n\n            if (moveData.statusChange === 'show') {\n                transformValues = transformValues.concat(self.mixer.transformIn);\n            }\n\n            self.dom.el.style[mixitup.features.transformProp] = transformValues.join(' ');\n\n            self.callActions('afterApplyStylesIn', arguments);\n        },\n\n        /**\n         * Applies a transition followed by the final styles for the element to\n         * transition towards.\n         *\n         * @private\n         * @instance\n         * @param   {mixitup.IMoveData} moveData\n         * @return  {void}\n         */\n\n        applyStylesOut: function(moveData) {\n            var self            = this,\n                transitionRules = [],\n                transformValues = [],\n                isResizing      = self.mixer.config.animation.animateResizeTargets,\n                isFading        = typeof self.mixer.effectsIn.opacity !== 'undefined';\n\n            self.callActions('beforeApplyStylesOut', arguments);\n\n            // Build the transition rules\n\n            transitionRules.push(self.writeTransitionRule(\n                mixitup.features.transformRule,\n                moveData.staggerIndex\n            ));\n\n            if (moveData.statusChange !== 'none') {\n                transitionRules.push(self.writeTransitionRule(\n                    'opacity',\n                    moveData.staggerIndex,\n                    moveData.duration\n                ));\n            }\n\n            if (isResizing) {\n                transitionRules.push(self.writeTransitionRule(\n                    'width',\n                    moveData.staggerIndex,\n                    moveData.duration\n                ));\n\n                transitionRules.push(self.writeTransitionRule(\n                    'height',\n                    moveData.staggerIndex,\n                    moveData.duration\n                ));\n\n                transitionRules.push(self.writeTransitionRule(\n                    'margin',\n                    moveData.staggerIndex,\n                    moveData.duration\n                ));\n            }\n\n            // If no callback was provided, the element will\n            // not transition in any way so tag it as \"immovable\"\n\n            if (!moveData.callback) {\n                self.mixer.targetsImmovable++;\n\n                if (self.mixer.targetsMoved === self.mixer.targetsImmovable) {\n                    // If the total targets moved is equal to the\n                    // number of immovable targets, the operation\n                    // should be considered finished\n\n                    self.mixer.cleanUp(moveData.operation);\n                }\n\n                return;\n            }\n\n            // If the target will transition in some fasion,\n            // assign a callback function\n\n            self.operation = moveData.operation;\n            self.callback = moveData.callback;\n\n            // As long as the target is not excluded, increment\n            // the total number of targets bound\n\n            !self.isExcluded && self.mixer.targetsBound++;\n\n            // Tag the target as bound to differentiate from transitionEnd\n            // events that may come from stylesheet driven effects\n\n            self.isBound = true;\n\n            // Apply the transition\n\n            self.applyTransition(transitionRules);\n\n            // Apply width, height and margin negation\n\n            if (isResizing && moveData.posOut.width > 0 && moveData.posOut.height > 0) {\n                self.dom.el.style.width        = moveData.posOut.width + 'px';\n                self.dom.el.style.height       = moveData.posOut.height + 'px';\n                self.dom.el.style.marginRight  = moveData.posOut.marginRight + 'px';\n                self.dom.el.style.marginBottom = moveData.posOut.marginBottom + 'px';\n            }\n\n            if (!self.mixer.config.animation.nudge && moveData.statusChange === 'hide') {\n                // If we're not nudging, the translation should be\n                // applied before any other transforms to prevent\n                // lateral movement\n\n                transformValues.push('translate(' + moveData.posOut.x + 'px, ' + moveData.posOut.y + 'px)');\n            }\n\n            // Apply fade\n\n            switch (moveData.statusChange) {\n                case 'hide':\n                    isFading && (self.dom.el.style.opacity = self.mixer.effectsOut.opacity);\n\n                    transformValues = transformValues.concat(self.mixer.transformOut);\n\n                    break;\n                case 'show':\n                    isFading && (self.dom.el.style.opacity = 1);\n            }\n\n            if (\n                self.mixer.config.animation.nudge ||\n                (!self.mixer.config.animation.nudge && moveData.statusChange !== 'hide')\n            ) {\n                // Opposite of above - apply translate after\n                // other transform\n\n                transformValues.push('translate(' + moveData.posOut.x + 'px, ' + moveData.posOut.y + 'px)');\n            }\n\n            // Apply transforms\n\n            self.dom.el.style[mixitup.features.transformProp] = transformValues.join(' ');\n\n            self.callActions('afterApplyStylesOut', arguments);\n        },\n\n        /**\n         * Combines the name of a CSS property with the appropriate duration and delay\n         * values to created a valid transition rule.\n         *\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {string}    property\n         * @param   {number}    staggerIndex\n         * @param   {number}    duration\n         * @return  {string}\n         */\n\n        writeTransitionRule: function(property, staggerIndex, duration) {\n            var self  = this,\n                delay = self.getDelay(staggerIndex),\n                rule  = '';\n\n            rule = property + ' ' +\n                (duration > 0 ? duration : self.mixer.config.animation.duration) + 'ms ' +\n                delay + 'ms ' +\n                (property === 'opacity' ? 'linear' : self.mixer.config.animation.easing);\n\n            return self.callFilters('ruleWriteTransitionRule', rule, arguments);\n        },\n\n        /**\n         * Calculates the transition delay for each target element based on its index, if\n         * staggering is applied. If defined, A custom `animation.staggerSeqeuence`\n         * function can be used to manipulate the order of indices to produce custom\n         * stagger effects (e.g. for use in a grid with irregular row lengths).\n         *\n         * @private\n         * @instance\n         * @since   2.0.0\n         * @param   {number}    index\n         * @return  {number}\n         */\n\n        getDelay: function(index) {\n            var self    = this,\n                delay   = -1;\n\n            if (typeof self.mixer.config.animation.staggerSequence === 'function') {\n                index = self.mixer.config.animation.staggerSequence.call(self, index, self.state);\n            }\n\n            delay = !!self.mixer.staggerDuration ? index * self.mixer.staggerDuration : 0;\n\n            return self.callFilters('delayGetDelay', delay, arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {string[]}  rules\n         * @return  {void}\n         */\n\n        applyTransition: function(rules) {\n            var self                = this,\n                transitionString    = rules.join(', ');\n\n            self.callActions('beforeApplyTransition', arguments);\n\n            self.dom.el.style[mixitup.features.transitionProp] = transitionString;\n\n            self.callActions('afterApplyTransition', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {Event} e\n         * @return  {void}\n         */\n\n        handleTransitionEnd: function(e) {\n            var self        = this,\n                propName    = e.propertyName,\n                canResize   = self.mixer.config.animation.animateResizeTargets;\n\n            self.callActions('beforeHandleTransitionEnd', arguments);\n\n            if (\n                self.isBound &&\n                e.target.matches(self.mixer.config.selectors.target) &&\n                (\n                    propName.indexOf('transform') > -1 ||\n                    propName.indexOf('opacity') > -1 ||\n                    canResize && propName.indexOf('height') > -1 ||\n                    canResize && propName.indexOf('width') > -1 ||\n                    canResize && propName.indexOf('margin') > -1\n                )\n            ) {\n                self.callback.call(self, self.operation);\n\n                self.isBound = false;\n                self.callback = null;\n                self.operation = null;\n            }\n\n            self.callActions('afterHandleTransitionEnd', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {Event}     e\n         * @return  {void}\n         */\n\n        eventBus: function(e) {\n            var self = this;\n\n            self.callActions('beforeEventBus', arguments);\n\n            switch (e.type) {\n                case 'webkitTransitionEnd':\n                case 'transitionend':\n                    self.handleTransitionEnd(e);\n            }\n\n            self.callActions('afterEventBus', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @return  {void}\n         */\n\n        unbindEvents: function() {\n            var self = this;\n\n            self.callActions('beforeUnbindEvents', arguments);\n\n            h.off(self.dom.el, 'webkitTransitionEnd', self.handler);\n            h.off(self.dom.el, 'transitionend', self.handler);\n\n            self.callActions('afterUnbindEvents', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @return  {void}\n         */\n\n        bindEvents: function() {\n            var self                = this,\n                transitionEndEvent  = '';\n\n            self.callActions('beforeBindEvents', arguments);\n\n            transitionEndEvent = mixitup.features.transitionPrefix === 'webkit' ? 'webkitTransitionEnd' : 'transitionend';\n\n            self.handler = function(e) {\n                return self.eventBus(e);\n            };\n\n            h.on(self.dom.el, transitionEndEvent, self.handler);\n\n            self.callActions('afterBindEvents', arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since   3.0.0\n         * @param   {boolean}   [getBox]\n         * @return  {PosData}\n         */\n\n        getPosData: function(getBox) {\n            var self    = this,\n                styles  = {},\n                rect    = null,\n                posData = new mixitup.StyleData();\n\n            self.callActions('beforeGetPosData', arguments);\n\n            posData.x = self.dom.el.offsetLeft;\n            posData.y = self.dom.el.offsetTop;\n\n            if (self.mixer.config.animation.animateResizeTargets || getBox) {\n                rect = self.dom.el.getBoundingClientRect();\n\n                posData.top     = rect.top;\n                posData.right   = rect.right;\n                posData.bottom  = rect.bottom;\n                posData.left    = rect.left;\n\n                posData.width  = rect.width;\n                posData.height = rect.height;\n            }\n\n            if (self.mixer.config.animation.animateResizeTargets) {\n                styles = window.getComputedStyle(self.dom.el);\n\n                posData.marginBottom = parseFloat(styles.marginBottom);\n                posData.marginRight  = parseFloat(styles.marginRight);\n            }\n\n            return self.callFilters('posDataGetPosData', posData, arguments);\n        },\n\n        /**\n         * @private\n         * @instance\n         * @since       3.0.0\n         * @return      {void}\n         */\n\n        cleanUp: function() {\n            var self = this;\n\n            self.callActions('beforeCleanUp', arguments);\n\n            self.dom.el.style[mixitup.features.transformProp]  = '';\n            self.dom.el.style[mixitup.features.transitionProp] = '';\n            self.dom.el.style.opacity                          = '';\n\n            if (self.mixer.config.animation.animateResizeTargets) {\n                self.dom.el.style.width        = '';\n                self.dom.el.style.height       = '';\n                self.dom.el.style.marginRight  = '';\n                self.dom.el.style.marginBottom = '';\n            }\n\n            self.callActions('afterCleanUp', arguments);\n        }\n    });\n\n    /**\n     * A jQuery-collection-like wrapper around one or more `mixitup.Mixer` instances\n     * allowing simultaneous control of said instances similar to the MixItUp 2 API.\n     *\n     * @example\n     * new mixitup.Collection(instances)\n     *\n     * @constructor\n     * @namespace\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     * @param       {mixitup.Mixer[]}   instances\n     */\n\n    mixitup.Collection = function(instances) {\n        var instance    = null,\n            i           = -1;\n\n        this.callActions('beforeConstruct');\n\n        for (i = 0; instance = instances[i]; i++) {\n            this[i] = instance;\n        }\n\n        this.length = instances.length;\n\n        this.callActions('afterConstruct');\n\n        h.freeze(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.Collection);\n\n    mixitup.Collection.prototype = Object.create(mixitup.Base.prototype);\n\n    h.extend(mixitup.Collection.prototype,\n    /** @lends mixitup.Collection */\n    {\n        constructor: mixitup.Collection,\n\n        /**\n         * Calls a method on all instances in the collection by passing the method\n         * name as a string followed by any applicable parameters to be curried into\n         * to the method.\n         *\n         * @example\n         * .mixitup(methodName[,arg1][,arg2..]);\n         *\n         * @example\n         * var collection = new Collection([mixer1, mixer2]);\n         *\n         * return collection.mixitup('filter', '.category-a')\n         *     .then(function(states) {\n         *         state.forEach(function(state) {\n         *             console.log(state.activeFilter.selector); // .category-a\n         *         });\n         *     });\n         *\n         * @public\n         * @instance\n         * @since       3.0.0\n         * @param       {string}  methodName\n         * @return      {Promise<Array<mixitup.State>>}\n         */\n\n        mixitup: function(methodName) {\n            var self        = this,\n                instance    = null,\n                args        = Array.prototype.slice.call(arguments),\n                tasks       = [],\n                i           = -1;\n\n            this.callActions('beforeMixitup');\n\n            args.shift();\n\n            for (i = 0; instance = self[i]; i++) {\n                tasks.push(instance[methodName].apply(instance, args));\n            }\n\n            return self.callFilters('promiseMixitup', h.all(tasks, mixitup.libraries), arguments);\n        }\n    });\n\n    /**\n     * `mixitup.Operation` objects contain all data neccessary to describe the full\n     * lifecycle of any MixItUp operation. They can be used to compute and store an\n     * operation for use at a later time (e.g. programmatic tweening).\n     *\n     * @constructor\n     * @namespace\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.Operation = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.id                      = '';\n\n        this.args                    = [];\n        this.command                 = null;\n        this.showPosData             = [];\n        this.toHidePosData           = [];\n\n        this.startState              = null;\n        this.newState                = null;\n        this.docState                = null;\n\n        this.willSort                = false;\n        this.willChangeLayout        = false;\n        this.hasEffect               = false;\n        this.hasFailed               = false;\n\n        this.triggerElement          = null;\n\n        this.show                    = [];\n        this.hide                    = [];\n        this.matching                = [];\n        this.toShow                  = [];\n        this.toHide                  = [];\n        this.toMove                  = [];\n        this.toRemove                = [];\n        this.startOrder              = [];\n        this.newOrder                = [];\n        this.startSort               = null;\n        this.newSort                 = null;\n        this.startFilter             = null;\n        this.newFilter               = null;\n        this.startDataset            = null;\n        this.newDataset              = null;\n        this.viewportDeltaX          = 0;\n        this.viewportDeltaY          = 0;\n        this.startX                  = 0;\n        this.startY                  = 0;\n        this.startHeight             = 0;\n        this.startWidth              = 0;\n        this.newX                    = 0;\n        this.newY                    = 0;\n        this.newHeight               = 0;\n        this.newWidth                = 0;\n        this.startContainerClassName = '';\n        this.startDisplay            = '';\n        this.newContainerClassName   = '';\n        this.newDisplay              = '';\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.Operation);\n\n    mixitup.Operation.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.Operation.prototype.constructor = mixitup.Operation;\n\n    /**\n     * `mixitup.State` objects expose various pieces of data detailing the state of\n     * a MixItUp instance. They are provided at the start and end of any operation via\n     * callbacks and events, with the most recent state stored between operations\n     * for retrieval at any time via the API.\n     *\n     * @constructor\n     * @namespace\n     * @memberof    mixitup\n     * @public\n     * @since       3.0.0\n     */\n\n    mixitup.State = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        /**\n         * The ID of the mixer instance.\n         *\n         * @name        id\n         * @memberof    mixitup.State\n         * @instance\n         * @type        {string}\n         * @default     ''\n         */\n\n        this.id = '';\n\n        /**\n         * The currently active filter command as set by a control click or API call.\n         *\n         * @name        activeFilter\n         * @memberof    mixitup.State\n         * @instance\n         * @type        {mixitup.CommandFilter}\n         * @default     null\n         */\n\n        this.activeFilter = null;\n\n        /**\n         * The currently active sort command as set by a control click or API call.\n         *\n         * @name        activeSort\n         * @memberof    mixitup.State\n         * @instance\n         * @type        {mixitup.CommandSort}\n         * @default     null\n         */\n\n        this.activeSort = null;\n\n        /**\n         * The current layout-specific container class name, if applied.\n         *\n         * @name        activeContainerClassName\n         * @memberof    mixitup.State\n         * @instance\n         * @type        {string}\n         * @default     ''\n         */\n\n        this.activeContainerClassName = '';\n\n        /**\n         * A reference to the container element that the mixer is instantiated on.\n         *\n         * @name        container\n         * @memberof    mixitup.State\n         * @instance\n         * @type        {Element}\n         * @default     null\n         */\n\n        this.container = null;\n\n        /**\n         * An array of all target elements indexed by the mixer.\n         *\n         * @name        targets\n         * @memberof    mixitup.State\n         * @instance\n         * @type        {Array.<Element>}\n         * @default     []\n         */\n\n        this.targets = [];\n\n        /**\n         * An array of all target elements not matching the current filter.\n         *\n         * @name        hide\n         * @memberof    mixitup.State\n         * @instance\n         * @type        {Array.<Element>}\n         * @default     []\n         */\n\n        this.hide = [];\n\n        /**\n         * An array of all target elements matching the current filter and any additional\n         * limits applied such as pagination.\n         *\n         * @name        show\n         * @memberof    mixitup.State\n         * @instance\n         * @type        {Array.<Element>}\n         * @default     []\n         */\n\n        this.show = [];\n\n        /**\n         * An array of all target elements matching the current filter irrespective of\n         * any additional limits applied such as pagination.\n         *\n         * @name        matching\n         * @memberof    mixitup.State\n         * @instance\n         * @type        {Array.<Element>}\n         * @default     []\n         */\n\n        this.matching = [];\n\n        /**\n         * An integer representing the total number of target elements indexed by the\n         * mixer. Equivalent to `state.targets.length`.\n         *\n         * @name        totalTargets\n         * @memberof    mixitup.State\n         * @instance\n         * @type        {number}\n         * @default     -1\n         */\n\n        this.totalTargets = -1;\n\n        /**\n         * An integer representing the total number of target elements matching the\n         * current filter and any additional limits applied such as pagination.\n         * Equivalent to `state.show.length`.\n         *\n         * @name        totalShow\n         * @memberof    mixitup.State\n         * @instance\n         * @type        {number}\n         * @default     -1\n         */\n\n        this.totalShow = -1;\n\n        /**\n         * An integer representing the total number of target elements not matching\n         * the current filter. Equivalent to `state.hide.length`.\n         *\n         * @name        totalHide\n         * @memberof    mixitup.State\n         * @instance\n         * @type        {number}\n         * @default     -1\n         */\n\n        this.totalHide = -1;\n\n        /**\n         * An integer representing the total number of target elements matching the\n         * current filter irrespective of any other limits applied such as pagination.\n         * Equivalent to `state.matching.length`.\n         *\n         * @name        totalMatching\n         * @memberof    mixitup.State\n         * @instance\n         * @type        {number}\n         * @default     -1\n         */\n\n        this.totalMatching = -1;\n\n        /**\n         * A boolean indicating whether the last operation \"failed\", i.e. no targets\n         * could be found matching the filter.\n         *\n         * @name        hasFailed\n         * @memberof    mixitup.State\n         * @instance\n         * @type        {boolean}\n         * @default     false\n         */\n\n        this.hasFailed = false;\n\n        /**\n         * The DOM element that was clicked if the last operation was triggered by the\n         * clicking of a control and not an API call.\n         *\n         * @name        triggerElement\n         * @memberof    mixitup.State\n         * @instance\n         * @type        {Element|null}\n         * @default     null\n         */\n\n        this.triggerElement = null;\n\n        /**\n         * The currently active dataset underlying the rendered targets, if the\n         * dataset API is in use.\n         *\n         * @name        activeDataset\n         * @memberof    mixitup.State\n         * @instance\n         * @type        {Array.<object>}\n         * @default     null\n         */\n\n        this.activeDataset = null;\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.State);\n\n    mixitup.State.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.State.prototype.constructor = mixitup.State;\n\n    /**\n     * @constructor\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.UserInstruction = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        this.command    = {};\n        this.animate    = false;\n        this.callback   = null;\n\n        this.callActions('afterConstruct');\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.UserInstruction);\n\n    mixitup.UserInstruction.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.UserInstruction.prototype.constructor = mixitup.UserInstruction;\n\n    /**\n     * @constructor\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     */\n\n    mixitup.Messages = function() {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct');\n\n        /* Errors\n        ----------------------------------------------------------------------------- */\n\n        this.ERROR_FACTORY_INVALID_CONTAINER =\n            '[MixItUp] An invalid selector or element reference was passed to the mixitup factory function';\n\n        this.ERROR_FACTORY_CONTAINER_NOT_FOUND =\n            '[MixItUp] The provided selector yielded no container element';\n\n        this.ERROR_CONFIG_INVALID_ANIMATION_EFFECTS =\n            '[MixItUp] Invalid value for `animation.effects`';\n\n        this.ERROR_CONFIG_INVALID_CONTROLS_SCOPE =\n            '[MixItUp] Invalid value for `controls.scope`';\n\n        this.ERROR_CONFIG_INVALID_PROPERTY =\n            '[MixitUp] Invalid configuration object property \"${erroneous}\"${suggestion}';\n\n        this.ERROR_CONFIG_INVALID_PROPERTY_SUGGESTION =\n            '. Did you mean \"${probableMatch}\"?';\n\n        this.ERROR_CONFIG_DATA_UID_KEY_NOT_SET =\n            '[MixItUp] To use the dataset API, a UID key must be specified using `data.uidKey`';\n\n        this.ERROR_DATASET_INVALID_UID_KEY =\n            '[MixItUp] The specified UID key \"${uidKey}\" is not present on one or more dataset items';\n\n        this.ERROR_DATASET_DUPLICATE_UID =\n            '[MixItUp] The UID \"${uid}\" was found on two or more dataset items. UIDs must be unique.';\n\n        this.ERROR_INSERT_INVALID_ARGUMENTS =\n            '[MixItUp] Please provider either an index or a sibling and position to insert, not both';\n\n        this.ERROR_INSERT_PREEXISTING_ELEMENT =\n            '[MixItUp] An element to be inserted already exists in the container';\n\n        this.ERROR_FILTER_INVALID_ARGUMENTS =\n            '[MixItUp] Please provide either a selector or collection `.filter()`, not both';\n\n        this.ERROR_DATASET_NOT_SET =\n            '[MixItUp] To use the dataset API with pre-rendered targets, a starting dataset must be set using `load.dataset`';\n\n        this.ERROR_DATASET_PRERENDERED_MISMATCH =\n            '[MixItUp] `load.dataset` does not match pre-rendered targets';\n\n        this.ERROR_DATASET_RENDERER_NOT_SET =\n            '[MixItUp] To insert an element via the dataset API, a target renderer function must be provided to `render.target`';\n\n        this.ERROR_SORT_NON_EXISTENT_ELEMENT =\n            '[MixItUp] An element to be sorted does not already exist in the container';\n\n        /* Warnings\n        ----------------------------------------------------------------------------- */\n\n        this.WARNING_FACTORY_PREEXISTING_INSTANCE =\n            '[MixItUp] WARNING: This element already has an active MixItUp instance. The provided configuration object will be ignored.' +\n            ' If you wish to perform additional methods on this instance, please create a reference.';\n\n        this.WARNING_INSERT_NO_ELEMENTS =\n            '[MixItUp] WARNING: No valid elements were passed to `.insert()`';\n\n        this.WARNING_REMOVE_NO_ELEMENTS =\n            '[MixItUp] WARNING: No valid elements were passed to `.remove()`';\n\n        this.WARNING_MULTIMIX_INSTANCE_QUEUE_FULL =\n            '[MixItUp] WARNING: An operation was requested but the MixItUp instance was busy. The operation was rejected because the ' +\n            'queue is full or queuing is disabled.';\n\n        this.WARNING_GET_OPERATION_INSTANCE_BUSY =\n            '[MixItUp] WARNING: Operations can be be created while the MixItUp instance is busy.';\n\n        this.WARNING_NO_PROMISE_IMPLEMENTATION =\n            '[MixItUp] WARNING: No Promise implementations could be found. If you wish to use promises with MixItUp please install' +\n            ' an ES6 Promise polyfill.';\n\n        this.WARNING_INCONSISTENT_SORTING_ATTRIBUTES =\n            '[MixItUp] WARNING: The requested sorting data attribute \"${attribute}\" was not present on one or more target elements' +\n            ' which may product unexpected sort output';\n\n        this.callActions('afterConstruct');\n\n        this.compileTemplates();\n\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.Messages);\n\n    mixitup.Messages.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.Messages.prototype.constructor = mixitup.Messages;\n\n    /**\n     * @return {void}\n     */\n\n    mixitup.Messages.prototype.compileTemplates = function() {\n        var errorKey        = '';\n        var errorMessage    = '';\n\n        for (errorKey in this) {\n            if (typeof (errorMessage = this[errorKey]) !== 'string') continue;\n\n            this[h.camelCase(errorKey)] = h.template(errorMessage);\n        }\n    };\n\n    mixitup.messages = new mixitup.Messages();\n\n    /**\n     * @constructor\n     * @memberof    mixitup\n     * @private\n     * @since       3.0.0\n     * @param       {mixitup.Mixer} mixer\n     */\n\n    mixitup.Facade = function Mixer(mixer) {\n        mixitup.Base.call(this);\n\n        this.callActions('beforeConstruct', arguments);\n\n        this.configure          = mixer.configure.bind(mixer);\n        this.show               = mixer.show.bind(mixer);\n        this.hide               = mixer.hide.bind(mixer);\n        this.filter             = mixer.filter.bind(mixer);\n        this.toggleOn           = mixer.toggleOn.bind(mixer);\n        this.toggleOff          = mixer.toggleOff.bind(mixer);\n        this.sort               = mixer.sort.bind(mixer);\n        this.changeLayout       = mixer.changeLayout.bind(mixer);\n        this.multimix           = mixer.multimix.bind(mixer);\n        this.dataset            = mixer.dataset.bind(mixer);\n        this.tween              = mixer.tween.bind(mixer);\n        this.insert             = mixer.insert.bind(mixer);\n        this.insertBefore       = mixer.insertBefore.bind(mixer);\n        this.insertAfter        = mixer.insertAfter.bind(mixer);\n        this.prepend            = mixer.prepend.bind(mixer);\n        this.append             = mixer.append.bind(mixer);\n        this.remove             = mixer.remove.bind(mixer);\n        this.destroy            = mixer.destroy.bind(mixer);\n        this.forceRefresh       = mixer.forceRefresh.bind(mixer);\n        this.forceRender        = mixer.forceRender.bind(mixer);\n        this.isMixing           = mixer.isMixing.bind(mixer);\n        this.getOperation       = mixer.getOperation.bind(mixer);\n        this.getConfig          = mixer.getConfig.bind(mixer);\n        this.getState           = mixer.getState.bind(mixer);\n\n        this.callActions('afterConstruct', arguments);\n\n        h.freeze(this);\n        h.seal(this);\n    };\n\n    mixitup.BaseStatic.call(mixitup.Facade);\n\n    mixitup.Facade.prototype = Object.create(mixitup.Base.prototype);\n\n    mixitup.Facade.prototype.constructor = mixitup.Facade;\n\n    if (typeof exports === 'object' && typeof module === 'object') {\n        module.exports = mixitup;\n    } else if (typeof define === 'function' && define.amd) {\n        define(function() {\n            return mixitup;\n        });\n    } else if (typeof window.mixitup === 'undefined' || typeof window.mixitup !== 'function') {\n        window.mixitup = mixitup;\n    }\n    mixitup.BaseStatic.call(mixitup.constructor);\n\n    mixitup.NAME = 'mixitup';\n    mixitup.CORE_VERSION = '3.3.1';\n})(window);","export const spriteAnimations = {\r\n    idle: {\r\n        loc: [\r\n            {\r\n                width: 230,\r\n                height: 398,\r\n                x: 5,\r\n                y: 5\r\n            },\r\n            {\r\n                width: 230,\r\n                height: 408,\r\n                x: 245,\r\n                y: 5\r\n            },\r\n            {\r\n                width: 230,\r\n                height: 416,\r\n                x: 485,\r\n                y: 5\r\n            }\r\n        ]\r\n    },\r\n    turn: {\r\n        loc: [\r\n            {\r\n                width: 230,\r\n                height: 401,\r\n                x: 725,\r\n                y: 5\r\n            },\r\n            {\r\n                width: 230,\r\n                height: 401,\r\n                x: 965,\r\n                y: 5\r\n            },\r\n            {\r\n                width: 225,\r\n                height: 398,\r\n                x: 1205,\r\n                y: 5\r\n            }\r\n        ]\r\n    },\r\n    walk: {\r\n        loc: [\r\n            {\r\n                width: 225,\r\n                height: 402,\r\n                x: 1440,\r\n                y: 5\r\n            },\r\n            {\r\n                width: 224,\r\n                height: 405,\r\n                x: 5,\r\n                y: 417\r\n            },\r\n            {\r\n                width: 225,\r\n                height: 407,\r\n                x: 725,\r\n                y: 417\r\n            },\r\n            {\r\n                width: 237,\r\n                height: 392,\r\n                x: 960,\r\n                y: 417\r\n            },\r\n            {\r\n                width: 238,\r\n                height: 395,\r\n                x: 1207,\r\n                y: 417\r\n            },\r\n            {\r\n                width: 238,\r\n                height: 396,\r\n                x: 1455,\r\n                y: 417\r\n            }\r\n        ]\r\n    },\r\n    run: {\r\n        loc: [\r\n            {\r\n                width: 225,\r\n                height: 400,\r\n                x: 239,\r\n                y: 823\r\n            },\r\n            {\r\n                width: 224,\r\n                height: 405,\r\n                x: 474,\r\n                y: 823\r\n            },\r\n            {\r\n                width: 230,\r\n                height: 389,\r\n                x: 960,\r\n                y: 823\r\n            },\r\n            {\r\n                width: 237,\r\n                height: 395,\r\n                x: 1200,\r\n                y: 823\r\n            },\r\n            {\r\n                width: 238,\r\n                height: 391,\r\n                x: 1447,\r\n                y: 823\r\n            },\r\n            {\r\n                width: 238,\r\n                height: 389,\r\n                x: 709,\r\n                y: 1224\r\n            }\r\n        ]\r\n    },\r\n    hurt: {\r\n        loc: [\r\n            {\r\n                width: 230,\r\n                height: 395,\r\n                x: 957,\r\n                y: 1224\r\n            },\r\n            {\r\n                width: 230,\r\n                height: 393,\r\n                x: 1447,\r\n                y: 1224\r\n            },\r\n            {\r\n                width: 236,\r\n                height: 390,\r\n                x: 1675,\r\n                y: 5\r\n            },\r\n            {\r\n                width: 240,\r\n                height: 384,\r\n                x: 1703,\r\n                y: 405\r\n            }\r\n        ]\r\n    },\r\n    dead: {\r\n        loc: [\r\n            {\r\n                width: 339,\r\n                height: 358,\r\n                x: 5,\r\n                y: 1627\r\n            },\r\n            {\r\n                width: 379,\r\n                height: 319,\r\n                x: 354,\r\n                y: 1627\r\n            },\r\n            {\r\n                width: 355,\r\n                height: 256,\r\n                x: 1197,\r\n                y: 1627\r\n            },\r\n            {\r\n                width: 376,\r\n                height: 233,\r\n                x: 1562,\r\n                y: 1627\r\n            },\r\n            {\r\n                width: 370,\r\n                height: 241,\r\n                x: 743,\r\n                y: 1870\r\n            }\r\n        ]\r\n    },\r\n    jump: {\r\n        loc: [\r\n            {\r\n                width: 245,\r\n                height: 395,\r\n                x: 1703,\r\n                y: 799\r\n            },\r\n            {\r\n                width: 232,\r\n                height: 426,\r\n                x: 1953,\r\n                y: 5\r\n            },\r\n            {\r\n                width: 275,\r\n                height: 422,\r\n                x: 1958,\r\n                y: 441\r\n            },\r\n            {\r\n                width: 284,\r\n                height: 353,\r\n                x: 239,\r\n                y: 441\r\n            }\r\n        ]\r\n    }\r\n}","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"4xyEv\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"k0eKT\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"4oAHZ\")).toString();","export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey) {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse.status;\n        this.text = httpResponse.responseText;\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templatePrams - the template params, what will be set to the EmailJS template\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = (serviceID, templateID, templatePrams, publicKey) => {\n    const uID = publicKey || store._userID;\n    validateParams(uID, serviceID, templateID);\n    const params = {\n        lib_version: '3.6.2',\n        user_id: uID,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templatePrams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","export default async () => {\r\n\tconst canvas = document.querySelector('#canvas-hero');\r\n\tconst canvasContainer = document.querySelector('#hero');\r\n\tconst ctx = canvas.getContext('2d');\r\n\tlet animation; // for stopping animation frames\r\n\t\r\n\t// min size for particle effect\r\n\tlet isDesktopSize = matchMedia('(min-width: 1280px)').matches;\r\n\r\n\t// default canvas size\r\n\tcanvas.width = canvasContainer.clientWidth;\r\n\tcanvas.height = canvasContainer.clientHeight;\r\n\r\n\t// track mouse movement\r\n\tconst mouse = {\r\n\t\tx: null,\r\n\t\ty: null,\r\n\t\tradius: 100\r\n\t}\r\n\t// get mouse coords\r\n\tcanvas.addEventListener('mousemove', (e) => {\r\n\t\tmouse.x = e.offsetX;\r\n\t\tmouse.y = e.offsetY;\r\n\t});\r\n\r\n\t// config\r\n\tlet particleSpread = 9;\r\n\tlet particleSize = 3;\r\n\r\n\tconst handleResize = () => {\r\n\t\t// set the canvas width\r\n\t\tcanvas.width = canvasContainer.clientWidth;\r\n\t\tcanvas.height = canvasContainer.clientHeight;\r\n\t\t// set particle spread\r\n\t\tparticleSpread = Math.min(canvasContainer.clientWidth / 175, 9);\r\n\t\t// center and reanimate particles\r\n\t\tcancelAnimationFrame(animation);\r\n\t\tctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\t\t// check if desktop size\r\n\t\tisDesktopSize = matchMedia('(min-width: 1280px)').matches\r\n\r\n\t\tif (isDesktopSize) {\r\n\t\t\tinitParticles();\r\n\t\t}\r\n\t}\r\n\twindow.addEventListener('resize', handleResize);\r\n\r\n\t// create particle array\r\n\tlet pixelArray = [];\r\n\r\n\t// rectangle for extracting data with getImageData\r\n\tconst dataSize = { width: 150, height: 57 };\r\n\tconst dataRect = [ 0, 0, dataSize.width, dataSize.height ];\r\n\r\n\t// particle headline\r\n\tconst headline = [\r\n\t\t`Hi, I'm`,\r\n\t\t`Jhonathan`,\r\n\t\t`Web Developer`\r\n\t];\r\n\r\n\t// draw text\r\n\tctx.fillStyle = 'white';\r\n\tctx.font = '12px Verdana';\r\n\tctx.textAlign = 'center';\r\n\tctx.textBaseline = 'middle';\r\n\tctx.fillText(headline[0], dataSize.width / 2, (dataSize.height / 2) - 17);\r\n\tctx.font = 'normal 800 17px Verdana';\r\n\tctx.fillText(headline[1], dataSize.width / 2, (dataSize.height / 2));\r\n\tctx.fillStyle = '#850D4A';\r\n\tctx.font = 'normal 800 17px Verdana';\r\n\tctx.fillText(headline[2], dataSize.width / 2, (dataSize.height / 2) + 18);\r\n\r\n\t// get image data\r\n\tconst pixelData = ctx.getImageData(...dataRect);\r\n\r\n\t// particle class\r\n\tclass Particle {\r\n\t\tconstructor(x, y, color) {\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\t\tthis.color = color;\r\n\t\t\tthis.size = particleSize;\r\n\t\t\tthis.baseX = this.x;\r\n\t\t\tthis.baseY = this.y;\r\n\t\t\tthis.density = (Math.random() * 30) + 1;\r\n\t\t}\r\n\t\t\r\n\t\tdraw() {\r\n\t\t\tctx.fillStyle = this.color;\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\r\n\t\t\tctx.closePath();\r\n\t\t\tctx.fill();\r\n\t\t}\r\n\t\t\r\n\t\tupdate() {\r\n\t\t\tconst dx = mouse.x - this.x;\r\n\t\t\tconst dy = mouse.y - this.y;\r\n\t\t\tconst distance = Math.hypot(dx, dy);\r\n\t\t\tconst forceDirectionX = dx / distance;\r\n\t\t\tconst forceDirectionY = dy / distance;\r\n\t\t\tconst maxDistance = mouse.radius;\r\n\t\t\tconst force = (maxDistance - distance) / maxDistance;\r\n\t\t\tconst directionX = forceDirectionX * force * this.density;\r\n\t\t\tconst directionY = forceDirectionY * force * this.density;\r\n\t\t\tif (distance < mouse.radius) {\r\n\t\t\t\tthis.x -= directionX;\r\n\t\t\t\tthis.y -= directionY;\r\n\t\t\t} else {\r\n\t\t\t\tif (this.x !== this.baseX) {\r\n\t\t\t\t\tconst dx = this.x - this.baseX;\r\n\t\t\t\t\tthis.x -= dx/10;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.y !== this.baseY) {\r\n\t\t\t\t\tconst dy = this.y - this.baseY;\r\n\t\t\t\t\tthis.y -= dy/10;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// generate particles\r\n\tfunction initParticles() {\r\n\t\tpixelArray = [];\r\n\t\tfor (let y = 0; y < pixelData.height; y++) {\r\n\t\t\tfor (let x = 0; x < pixelData.width; x++) {\r\n\t\t\t\tconst color = getRgbaColor(x, y);\r\n\t\t\t\t// create particle for opaque pixels\r\n\t\t\t\tif (color.alpha > 128) {\r\n\t\t\t\t\tconst positionX = x + (canvas.width / (particleSpread * 2)) - (dataSize.width / 2);\r\n\t\t\t\t\tconst positionY = y + (canvas.height / (particleSpread * 2)) - (dataSize.height / 2);\r\n\t\t\t\t\tpixelArray.push(new Particle(\r\n\t\t\t\t\t\tpositionX * particleSpread, positionY * particleSpread,\r\n\t\t\t\t\t\tcolor.rgba\r\n\t\t\t\t\t));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tanimateParticles();\r\n\t};\r\n\r\n\t// init\r\n\tif (isDesktopSize) {\r\n\t\tinitParticles();\r\n\t}\r\n\r\n\t// animate particles\r\n\tfunction animateParticles() {\r\n\t\tctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n\t\tfor (let particle of pixelArray) {\r\n\t\t\tparticle.draw();\r\n\t\t\tparticle.update();\r\n\t\t}\r\n\t\tanimation = requestAnimationFrame(animateParticles);\r\n\t};\r\n\r\n\tfunction getRgbaColor(x, y) {\r\n\t\tconst redIndex = y * (pixelData.width * 4) + x * 4;\r\n\t\tconst red = pixelData.data[redIndex];\r\n\t\tconst green = pixelData.data[redIndex + 1];\r\n\t\tconst blue = pixelData.data[redIndex + 2];\r\n\t\tconst alpha = pixelData.data[redIndex + 3];\r\n\t\treturn {\r\n\t\t\tred, green, blue, alpha,\r\n\t\t\trgba: `rgba(${red}, ${green}, ${blue}, ${alpha})`\r\n\t\t};\r\n\t};\r\n}\r\n","import initHeroComponent from './components/hero.js';\r\nimport initMixItUp from './components/projects';\r\nimport initContactComponent from './components/contact';\r\nimport setCopyrightYear from './components/footer';\r\n\r\n// Hero\r\ninitHeroComponent();\r\n\r\n// MixItUp\r\ninitMixItUp();\r\n\r\n// contact sprite\r\ninitContactComponent();\r\n\r\n// set copyright year\r\nsetCopyrightYear();","import mixitup from 'mixitup';\r\n\r\nexport default async () => {\r\n    // add event listeners\r\n    const filterControls = Array.from(document.querySelectorAll('.project-controls > *'));\r\n    filterControls.forEach(control => {\r\n        control.addEventListener('change', handleControlChange);\r\n    })\r\n    const mixer = mixitup('.project-grid', {\r\n        selectors: {\r\n            target: '.project-card'\r\n        },\r\n        animation: {\r\n            animateResizeTargets: true\r\n        }\r\n    });\r\n    function handleControlChange() {\r\n        if (this.checked) {\r\n            // uncheck other controls\r\n            filterControls.forEach(control => {\r\n                if (control !== this) {\r\n                    control.checked = false;\r\n                }\r\n            });\r\n            const lang = this.dataset.lang;\r\n            if (lang == 'all') return mixer.show();\r\n            else return mixer.filter(`.lang-${lang}`);\r\n        }\r\n    }\r\n};","import { spriteAnimations } from \"../models/sprite\";\r\nimport alienImageSrc from '../../img/sprites/alien-sprite.png';\r\nimport alienReversedImageSrc from '../../img/sprites/alien-sprite_reversed.png';\r\nimport floorImageSrc from '../../img/sprites/floor.png';\r\nimport emailjs from \"@emailjs/browser\";\r\n\r\nexport default () => {\r\n    const contactFlexbox = document.querySelector('.contact-flexbox');\r\n    const canvas2 = document.getElementById('contact-canvas');\r\n    const ctx2 = canvas2.getContext('2d');\r\n    let animation, canvasBox;\r\n\r\n    let canvasWidth = canvas2.width = contactFlexbox.offsetWidth / 2.2;\r\n    let canvasHeight = canvas2.height = contactFlexbox.offsetHeight;\r\n    canvasBox = canvas2.getBoundingClientRect();\r\n\r\n    // track mouse\r\n    const mouse = {\r\n        x: null,\r\n        y: null\r\n    };\r\n\r\n    addEventListener('mousemove', (e) => {\r\n\t\tmouse.x = e.clientX;\r\n\t\tmouse.y = e.clientY;\r\n\t});\r\n\r\n    const restartCanvas = () => {\r\n        cancelAnimationFrame(animation);\r\n        canvasWidth = canvas2.width = contactFlexbox.offsetWidth / 2;\r\n        canvasBox = canvas2.getBoundingClientRect();\r\n        animate();\r\n    }\r\n\r\n    // resize event\r\n    addEventListener('resize', restartCanvas);\r\n    // start animation on load\r\n    addEventListener('load', restartCanvas);\r\n    // fix for hitbox issue\r\n    addEventListener('scroll', restartCanvas);\r\n\r\n    // create images\r\n    const alienImage = new Image();\r\n    alienImage.src = alienImageSrc;\r\n    const alienReversedImage = new Image();\r\n    alienReversedImage.src = alienReversedImageSrc;\r\n    const floorImage = new Image();\r\n    floorImage.src = floorImageSrc;\r\n\r\n    // simple state\r\n    let currentState = 'run';\r\n    let gameFrame = 0;\r\n    let staggerFrames = 12;\r\n    let actionFrame = 0;\r\n    let active = false;\r\n    let isHit = false;\r\n    let hitCount = 0;\r\n    let isDead = false;\r\n    let floorX = 0;\r\n    let moveSpeed = 15;\r\n\r\n    canvas2.addEventListener('click', () => {\r\n        active = true;\r\n        if (hitCount < 1) {\r\n            isDead = false;\r\n            isHit = true;\r\n            hitCount++;\r\n        } else {\r\n            isDead = true;\r\n            hitCount = 0;\r\n        }\r\n    });\r\n\r\n    function animate() {\r\n        ctx2.clearRect(0, 0, canvasWidth, canvasHeight);\r\n        // sprite location\r\n        let spriteLocations = spriteAnimations[currentState].loc;\r\n        // slow animation, loop through length\r\n        let currentFrame = Math.floor(gameFrame/staggerFrames) % spriteLocations.length;\r\n        // get sprite data\r\n        let currentSprite = spriteLocations[currentFrame];\r\n        let { width, height, x, y } = currentSprite;\r\n        // center sprite in canvas\r\n        let centerHorizontal = (canvasWidth / 2) - (width / 2) - 40;\r\n        let floorVertical = canvasHeight - (height + 40);\r\n        // get distance to mouse\r\n        const dx = mouse.x - (canvasBox.left + (canvasBox.width / 2));\r\n        const dy = mouse.y - (canvasBox.top + (canvasBox.height / 2));\r\n        const distance = Math.hypot(dx, dy) - (width / 2);\r\n\r\n        // get sprite direction and image\r\n        const isLeftOfImage = mouse.x < canvasBox.left + (canvasBox.width / 2);\r\n        const currentImage = isLeftOfImage ? alienReversedImage : alienImage;\r\n\r\n        // hitbox\r\n        let box = {\r\n            top: canvasBox.top + floorVertical,\r\n            bottom: canvasBox.top + floorVertical + height,\r\n            left: canvasBox.left + centerHorizontal,\r\n            right: canvasBox.left + centerHorizontal + width\r\n        };\r\n\r\n        // if active (hurt or dead)\r\n        // finish current action\r\n        if (active) {\r\n            if (actionFrame < (spriteLocations.length * staggerFrames)) {\r\n                currentState = isDead ? 'dead' : 'hurt';\r\n                actionFrame++;\r\n            } else {\r\n                actionFrame = 0;\r\n                active = false;\r\n            }\r\n        // else handle normally\r\n        } else {\r\n            \r\n            if (mouse.x > box.left &&\r\n                mouse.x < box.right &&\r\n                mouse.y < box.bottom &&\r\n                mouse.y > box.top) {\r\n                    moveSpeed = 0;\r\n                    currentState = 'idle';\r\n            } else {\r\n                // respond to mouse distance\r\n                if (distance < 300) {\r\n                    moveSpeed = 7;\r\n                    currentState = 'walk';\r\n                } else {\r\n                    moveSpeed = 15;\r\n                    currentState = 'run';\r\n                }\r\n            }\r\n\r\n            if (isLeftOfImage) {\r\n                if (floorX > 0) floorX = -2400;\r\n                floorX = Math.floor(floorX + moveSpeed);\r\n            } else {\r\n                if (floorX < -2400) floorX = 0;\r\n                floorX = Math.floor(floorX - moveSpeed);\r\n            }\r\n        }\r\n\r\n        // draw animation\r\n        ctx2.drawImage(currentImage, x, y, width, height, centerHorizontal, floorVertical, width, height);\r\n        ctx2.drawImage(floorImage, floorX, canvasHeight - 640);\r\n        ctx2.drawImage(floorImage, floorX + 2400, canvasHeight - 640);\r\n\r\n        // progress animation\r\n        gameFrame++;        \r\n        animation = requestAnimationFrame(animate)\r\n    };\r\n\r\n     // send contact email\r\n     ///////////////////////////////////////\r\n     document.querySelector('#contact-form').addEventListener('submit', (e) => {\r\n        e.preventDefault();\r\n        let name = e.target.elements.name.value;\r\n        let email = e.target.elements.email.value;\r\n        let message = e.target.elements.message.value;\r\n        const sendButton = document.querySelector('.contact-button');\r\n        const templateParams = { name, email, message };\r\n\r\n        // change button while processing\r\n        sendButton.textContent = 'Sending...';\r\n\r\n        // send email\r\n        emailjs.send(\r\n            'default_service',\r\n            'angus_dev_contact',\r\n            templateParams,\r\n            'KpqjNCJx_DYZFKpk0'\r\n        ).then(response => {\r\n            sendButton.textContent = 'SUCCESS!';\r\n            sendButton.classList.add('button-success');\r\n            console.log('MESSAGE SENT! ', response.status, response.text);\r\n            setTimeout(() => {\r\n                sendButton.classList.remove('button-success');\r\n                sendButton.textContent = 'Send Message';\r\n            }, 3000);\r\n        }, error => {\r\n            sendButton.textContent = 'FAILED...';\r\n            sendButton.classList.add('button-fail');\r\n            console.log('MESSAGE FAILED... ', error);\r\n            setTimeout(() => {\r\n                sendButton.textContent = 'Send Message';\r\n                sendButton.classList.remove('button-fail');\r\n            }, 3000);\r\n        });\r\n\r\n        // empty values\r\n        e.target.elements.name.value = '';\r\n        e.target.elements.email.value = '';\r\n        e.target.elements.message.value = '';\r\n    });\r\n}","export default () => {\r\n    const copyrightSpan = document.querySelector('#copyright span');\r\n    copyrightSpan.textContent = new Date().getFullYear();\r\n}"],"names":["$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","window","mixitup","h","ElementPrototype","hasDontEnumBug","dontEnums","dontEnumsLength","hasOwnProperty","Temp","VENDORS","canary","document","createElement","i1","requestAnimationFrame","nextElementSibling","defineProperty","Element","prototype","get","el","this","nextSibling","nodeType","matches","machesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","selector","Array","indexOf","call","parentElement","querySelectorAll","toString","propertyIsEnumerable","obj","result","prop","TypeError","push","isArray","arg","create","propertiesObject","defineProperties","__proto__","String","trim","replace","searchElement","n","k","t","len","arguments","Number","Infinity","Math","floor","abs","max","Function","bind","oThis","aArgs","self","FNOP","fBound","slice","apply","concat","dispatchEvent","event","fireEvent","type","err","container","config","foreignDoc","returnCollection","instance","facade","doc","instances","elements","isElement","messages","errorFactoryInvalidContainer","errorFactoryContainerNotFound","randomHex","Mixer","debug","showWarnings","console","warn","warningFactoryPreexistingInstance","attach","Facade","enable","Collection","use","extension","Base","callActions","TYPE","extensions","NAME","fn","jquery","libraries","$","hasClass","cls","className","match","RegExp","addClass","removeClass","reg","extend","destination","source","deep","handleErrors","sourceKeys","key","handleExtendError","erroneous","message","suggestion","probableMatch","mostMatchingChars","exec","charAt","errorConfigInvalidPropertySuggestion","errorConfigInvalidProperty","template","str","re","dynamics","data","output","on","useCapture","addEventListener","attachEvent","off","removeEventListener","detachEvent","getCustomEvent","eventType","detail","CustomEvent","bubbles","cancelable","createEvent","initCustomEvent","createEventObject","returnValue","cancelBubble","getOriginalEvent","e","touches","changedTouches","index","previousElementSibling","camelCase","toLowerCase","$1","toUpperCase","pascalCase","dashCase","HTMLElement","defaultView","nodeName","htmlString","frag","temp","createDocumentFragment","innerHTML","firstChild","appendChild","removeWhitespace","node","deleting","previousSibling","removeChild","isEqualArray","a","b","deepEquals","arrayShuffle","oldArray","newArray","p","random","arrayFromList","list","debounce","func","wait","immediate","timeout","later","args","callNow","clearTimeout","setTimeout","position","element","xPosition","yPosition","offsetParent","scrollLeft","scrollTop","offsetLeft","offsetTop","x","y","getHypotenuse","node1","node2","distanceX","distanceY","sqrt","pow","getIntersectionRatio","box1","box2","intersectionX","controlArea","width","height","min","left","top","closestParent","includeSelf","parent","parentNode","body","children","tempId","randomHexKey","removeAttribute","clean","originalArray","cleanArray","defer","deferred","promiseWrapper","Deferred","features","has","promises","promise","Promise","resolve","reject","jQuery","warningNoPromiseImplementation","all","tasks","when","done","getPrefix","property","vendors","prefix","style","substr","getDocumentState","pageYOffset","pageXOffset","docHeight","documentElement","scrollHeight","docWidth","scrollWidth","viewportHeight","clientHeight","viewportWidth","clientWidth","isVisible","styles","getComputedStyle","visibility","opacity","seal","freeze","compareVersions","control","specimen","controlParts","split","specimenParts","controlPart","specimenPart","parseInt","isEmptyObject","getClassname","classNames","elementName","modifier","classname","block","delineatorElement","delineatorModifier","getProperty","obj1","stringKey","returnCurrent","parts","current","constructor","actionName","hooks","actions","extensionName","callFilters","filterName","input","filters","unshift","BaseStatic","registerAction","hookName","registerFilter","Features","boxSizingPrefix","transformPrefix","transitionPrefix","transformProp","transformRule","transitionProp","perspectiveProp","perspectiveOriginProp","Has","BOX_SIZING_PROP","TRANSITION_PROP","TRANSFORM_PROP","PERSPECTIVE_PROP","PERSPECTIVE_ORIGIN_PROP","TWEENABLE","init","setPrefixes","runTests","transitions","boxSizingProp","ConfigAnimation","effects","effectsIn","effectsOut","duration","easing","applyPerspective","perspectiveDistance","perspectiveOrigin","queue","queueLimit","animateResizeContainer","animateResizeTargets","staggerSequence","reverseOut","nudge","clampHeight","clampWidth","ConfigBehavior","liveSort","ConfigCallbacks","onMixStart","onMixBusy","onMixEnd","onMixFail","onMixClick","ConfigControls","live","scope","toggleLogic","toggleDefault","ConfigClassNames","elementContainer","elementFilter","elementSort","elementMultimix","elementToggle","modifierActive","modifierDisabled","modifierFailed","ConfigData","uidKey","dirtyCheck","ConfigDebug","fauxAsync","ConfigLayout","allowNestedTargets","containerClassName","siblingBefore","siblingAfter","ConfigLoad","filter","sort","dataset","ConfigSelectors","target","ConfigRender","ConfigTemplates","Config","animation","behavior","callbacks","controls","layout","load","selectors","render","templates","MixerDom","targets","UiClassNames","base","active","disabled","CommandDataset","CommandMultimix","insert","remove","changeLayout","CommandFilter","collection","action","CommandSort","sortString","attribute","order","next","CommandInsert","sibling","CommandRemove","CommandChangeLayout","ControlDefinition","controlDefinitions","Control","bound","pending","status","canDisable","handler","disable","getAttribute","bindClick","isBound","mixer","addBinding","removeBinding","removeIndex","splice","unbindClick","renderStatus","handleClick","button","isActive","command","clone","commands","dom","lastClicked","events","fire","state","originalEvent","toggleOff","toggleOn","multimix","update","toggleArray","updateLive","parseStatusChange","controlButtons","alias","StyleData","right","bottom","marginRight","marginBottom","scale","TransformData","translateX","translateY","translateZ","rotateX","rotateY","rotateZ","value","unit","TransformDefaults","transformDefaults","EventDetail","futureState","Events","mixStart","mixBusy","mixEnd","mixFail","mixClick","eventDetail","State","QueueItem","instruction","triggerElement","isToggling","isBusy","incPadding","origOrder","cache","targetsMoved","targetsImmovable","targetsBound","targetsDone","staggerDuration","transformIn","transformOut","lastOperation","userCallback","userDeferred","sanitizeConfig","cacheDom","indexTargets","getInitialState","toHide","hide","initControls","buildToggleArray","updateControls","activeFilter","activeSort","parseEffects","operation","Operation","activeContainerClassName","errorConfigDataUidKeyNotSet","startDataset","newDataset","activeDataset","startContainerClassName","newContainerClassName","show","parseFilterArgs","parseSortArgs","totalTargets","newSort","sortOperation","printSort","newOrder","startOrder","startFilter","newFilter","startSort","filterOperation","buildState","querySelector","errorDatasetPrerenderedMismatch","Target","isInDom","definition","controlElements","delagators","j","errorConfigInvalidControlsScope","getControl","getToggleSelector","delineator","toggleSelector","join","activeFilterSelector","splitCompoundSelector","compoundSelector","partials","shift","buildSortString","insertTargets","insertionIndex","getNextSibling","errorInsertPreexistingElement","display","createTextNode","insertBefore","testResult","evaluateHideShow","toRemove","toShow","matching","hasFailed","filteredTestResult","isShown","errorSortNonExistentElement","reverse","compare","willSort","attrA","getAttributeValue","attrB","isNaN","warningInconsistentSortingAttributes","isResetting","whitespace","lastChild","childNodes","parseSortString","rules","rule","transformName","parseEffect","effectName","effectString","transform","isOut","propIndex","val","units","errorConfigInvalidAnimationEffects","substring","parseFloat","totalShow","totalHide","totalMatching","goMix","shouldAnimate","willChangeLayout","startState","newState","docState","scrollTo","startHeight","newHeight","viewportDeltaY","startWidth","newWidth","viewportDeltaX","overflow","moveTargets","cleanUp","getStartMixData","parentStyle","parentRect","getBoundingClientRect","boxSizing","getPosData","showPosData","startPosData","toHidePosData","startX","startY","paddingTop","paddingBottom","borderTop","borderBottom","paddingLeft","paddingRight","borderLeft","borderRight","setInter","getInterMixData","interPosData","setFinal","getFinalMixData","finalPosData","newX","newY","getTweenData","posData","effectNames","getOwnPropertyNames","effect","widthChange","heightChange","posIn","posOut","tweenData","moveData","statusChange","willTransition","staggerIndex","checkProgress","IMoveData","hasEffect","callback","move","ContainerClassName","EFFECTABLES","marginTop","whitespaceBefore","whitespaceAfter","nextInQueue","parseMultimixArgs","UserInstruction","animate","parseInsertArgs","parseRemoveArgs","parseChangeLayoutArgs","errorFilterInvalidArguments","errorInsertInvalidArguments","warningInsertNoElements","warningRemoveNoElements","parseDatasetArgs","queueMix","queueItem","warningMultimixInstanceQueueFull","getDataOperation","errorDatasetNotSet","diffDatasets","persistantStartIds","persistantNewIds","insertedTargets","nextEl","uids","errorDatasetInvalidUidKey","errorDatasetDuplicateUid","uid","unbindEvents","replaceChild","bindEvents","lastElementChild","insertDatasetFrag","insertAt","sortCommandA","sortCommandB","isMixing","selectorIndex","getOperation","multimixCommand","sortCommand","filterCommand","changeLayoutCommand","removeCommand","insertCommand","warningGetOperationInstanceBusy","tween","multiplier","toHideIndex","applyTween","insertAfter","prepend","append","getConfig","configure","getState","forceRefresh","forceRender","destroy","TargetDom","isExcluded","errorDatasetRendererNotSet","firstElementChild","getSortString","attributeName","applyStylesIn","applyStylesOut","propertyName","currentTransformValues","currentValues","isFading","transformValues","transitionRules","isResizing","writeTransitionRule","applyTransition","delay","getDelay","transitionString","handleTransitionEnd","propName","canResize","eventBus","transitionEndEvent","getBox","rect","methodName","toMove","startDisplay","newDisplay","Messages","ERROR_FACTORY_INVALID_CONTAINER","ERROR_FACTORY_CONTAINER_NOT_FOUND","ERROR_CONFIG_INVALID_ANIMATION_EFFECTS","ERROR_CONFIG_INVALID_CONTROLS_SCOPE","ERROR_CONFIG_INVALID_PROPERTY","ERROR_CONFIG_INVALID_PROPERTY_SUGGESTION","ERROR_CONFIG_DATA_UID_KEY_NOT_SET","ERROR_DATASET_INVALID_UID_KEY","ERROR_DATASET_DUPLICATE_UID","ERROR_INSERT_INVALID_ARGUMENTS","ERROR_INSERT_PREEXISTING_ELEMENT","ERROR_FILTER_INVALID_ARGUMENTS","ERROR_DATASET_NOT_SET","ERROR_DATASET_PRERENDERED_MISMATCH","ERROR_DATASET_RENDERER_NOT_SET","ERROR_SORT_NON_EXISTENT_ELEMENT","WARNING_FACTORY_PREEXISTING_INSTANCE","WARNING_INSERT_NO_ELEMENTS","WARNING_REMOVE_NO_ELEMENTS","WARNING_MULTIMIX_INSTANCE_QUEUE_FULL","WARNING_GET_OPERATION_INSTANCE_BUSY","WARNING_NO_PROMISE_IMPLEMENTATION","WARNING_INCONSISTENT_SORTING_ATTRIBUTES","compileTemplates","errorKey","errorMessage","$1d54f86af04cabf8$exports","define","amd","CORE_VERSION","$d350e7da8f699ea4$export$206f1bf68ff65e5f","idle","loc","turn","walk","run","hurt","dead","jump","$f60c95b09bd43862$exports","URL","url","$dc41bece082f9107$exports","$7f6e05d5ae0d1a6c$exports","$c798475fc5eb7ae4$export$6f57813fe9f31bf9","_origin","$8aba84d3e3f02408$export$1f3bf48e9edf7d72","publicKey","serviceID","templateID","$365480cad2bbacec$export$29b488039e3d4c2d","httpResponse","text","responseText","$ec190f1f3b1ae57b$export$4a68059d3a005c64","headers","xhr","XMLHttpRequest","responseStatus","open","forEach","setRequestHeader","send","$e8e08de5e84870c6$export$2e2bcd8739ae039","templatePrams","uID","_userID","params","lib_version","user_id","service_id","template_id","template_params","stringify","async","canvas","canvasContainer","ctx","getContext","isDesktopSize","matchMedia","mouse","radius","offsetX","offsetY","particleSpread","cancelAnimationFrame","clearRect","initParticles","pixelArray","dataSize","dataRect","headline","fillStyle","font","textAlign","textBaseline","fillText","pixelData","getImageData","Particle","color","size","baseX","baseY","density","draw","beginPath","arc","PI","closePath","fill","dx","dy","distance","hypot","forceDirectionX","forceDirectionY","maxDistance","force","directionX","directionY","getRgbaColor","alpha","positionX","positionY","rgba","animateParticles","particle","redIndex","red","green","blue","$7d3ae7aff573db9a$export$2e2bcd8739ae039","filterControls","from","handleControlChange","$parcel$interopDefault","checked","lang","$5a6d9afd07e09c54$export$2e2bcd8739ae039","contactFlexbox","canvas2","getElementById","ctx2","canvasBox","canvasWidth","offsetWidth","canvasHeight","offsetHeight","clientX","clientY","restartCanvas","alienImage","Image","src","alienReversedImage","floorImage","currentState","gameFrame","staggerFrames","actionFrame","isHit","hitCount","isDead","floorX","moveSpeed","spriteLocations","currentSprite","centerHorizontal","floorVertical","isLeftOfImage","currentImage","box","drawImage","preventDefault","name","email","sendButton","templateParams","textContent","then","response","classList","add","log","error","$a3edcb54d29cfe99$export$2e2bcd8739ae039","Date","getFullYear"],"version":3,"file":"index.ce1aee11.js.map"}